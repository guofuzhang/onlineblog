-- MySQL dump 10.13  Distrib 5.1.63, for Win32 (ia32)
--
-- Host: localhost    Database: hongzhulei
-- ------------------------------------------------------
-- Server version	5.1.63-community

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `article`
--

DROP TABLE IF EXISTS `article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article` (
  `art_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `img` varchar(60) NOT NULL,
  `category_id` tinyint(6) DEFAULT NULL,
  `art_title` varchar(64) NOT NULL COMMENT '专业名称',
  `AUTHORS` varchar(30) NOT NULL,
  `main` varchar(200) NOT NULL,
  `order_id` tinyint(4) NOT NULL,
  `content` text NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`art_id`)
) ENGINE=MyISAM AUTO_INCREMENT=118 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article`
--

LOCK TABLES `article` WRITE;
/*!40000 ALTER TABLE `article` DISABLE KEYS */;
INSERT INTO `article` VALUES (103,'./up_image/img_59a0217a33e26.jpg',2,'auto_load自动加载机制','张国福','auto_load自动加载机制',50,'\'<pre><span style=\"color:#f92672;\">&lt;?php </span><span style=\"color:#66d9ef;font-style:italic;\">spl_autoload_register</span>(<span style=\"color:#f92672;\">function</span>(<span style=\"color:#fd971f;font-style:italic;\">$classname</span>){ <span style=\"color:#9876aa;\">$arr</span>[]<span style=\"color:#f92672;\">=</span><span style=\"color:#e6db74;\">\"./class2/</span><span style=\"color:#fd971f;font-style:italic;\">$classname</span><span style=\"color:#e6db74;\">.class.php\"</span><span style=\"color:#cc7832;\">; </span><span style=\"color:#cc7832;\"> </span><span style=\"color:#9876aa;\">$arr</span>[]<span style=\"color:#f92672;\">=</span><span style=\"color:#e6db74;\">\"./class1/</span><span style=\"color:#fd971f;font-style:italic;\">$classname</span><span style=\"color:#e6db74;\">.class.php\"</span><span style=\"color:#cc7832;\">; </span><span style=\"color:#cc7832;\"> </span><span style=\"color:#75715e;\">//</span><span style=\"color:#75715e;font-family:\'宋体\';\">用数组去装载所有的类文件 </span><span style=\"color:#75715e;font-family:\'宋体\';\"> </span><span style=\"color:#75715e;\">//</span><span style=\"color:#75715e;font-family:\'宋体\';\">不同路径也可以加载进来 </span><span style=\"color:#75715e;font-family:\'宋体\';\"> </span><span style=\"color:#75715e;\">//</span><span style=\"color:#75715e;font-family:\'宋体\';\">然后循环出每一个类</span><span style=\"color:#75715e;\">,</span><span style=\"color:#75715e;font-family:\'宋体\';\">用那一个类 </span><span style=\"color:#75715e;font-family:\'宋体\';\"> </span><span style=\"color:#75715e;\">//</span><span style=\"color:#75715e;font-family:\'宋体\';\">就加载那个一类</span><span style=\"color:#75715e;\">, </span><span style=\"color:#75715e;\"> </span><span style=\"color:#f92672;\">foreach </span>(<span style=\"color:#9876aa;\">$arr </span><span style=\"color:#f92672;\">as </span><span style=\"color:#9876aa;\">$filename</span>){ <span style=\"color:#f92672;\">if</span>(<span style=\"color:#66d9ef;font-style:italic;\">file_exists</span>(<span style=\"color:#9876aa;\">$filename</span>)) <span style=\"color:#f92672;\">require_once </span><span style=\"color:#9876aa;\">$filename</span><span style=\"color:#cc7832;\">; </span><span style=\"color:#cc7832;\"> </span>}\r\n<p>\r\n	})<span style=\"color:#cc7832;\">; </span><span style=\"color:#cc7832;\"> </span><span style=\"color:#9876aa;\">$obj1</span><span style=\"color:#f92672;\">=new </span>b()<span style=\"color:#cc7832;\">; </span><span style=\"color:#9876aa;\">$obj1</span><span style=\"color:#f92672;\">-&gt;</span><span style=\"color:#a6e22e;\">showmeb</span>()<span style=\"color:#cc7832;\">;</span>\r\n</p>\r\n\r\n<p>\r\n	<span style=\"color:#cc7832;\">原理:在使用spl_autoload_register机制:</span>\r\n</p>\r\n\r\n<p>\r\n	<span style=\"color:#cc7832;\">1.将所有的class.php装进数组,在你使用到某个静态方法或者new类的时候,该类会在循环中寻找是否存在,如果存在该类则加载;</span>\r\n</p>\r\n</pre>\'','2017-08-25 13:09:14'),(35,'./up_image/img_59830ea568466.jpg',1,'打造我的linux开发环境','张国福','打造我的linux开发环境--linux通用技术-linux编程与内核信息，下面是详情阅读。',50,'<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">之前只是少少的使用过vi,cscope,taglist和sourcenav，用的都不怎么熟悉。这次先了解一下目前linux下流行的开发环境（参考1），最后还是决定以vi为基础构造我的linux开发环境。“vim或emacs做编辑器，gcc做编译器， automake做工程，doxygen做文档，cvs做管理”，这大概也是我希望的吧。另外有人提到svn，说是cvs的替代者。</span><br />\r\n<br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">安装步骤</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">1. 安装gcc等;</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">done in 《ubuntu安装笔记》.</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">2. 升级vi到vim;</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">done in 《ubuntu安装笔记》.</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">3. 安装ctags；</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">#sudo apt-get install ctags</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">4. 安装ctaglist；</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">http://www.vim.org/scripts/script.php?script_id=273</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">5. 安装cscope；</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">#sudo apt-get install cscope</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">6. 安装global；</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">#sudo apt-get install global</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">7. 安装cppcomplete</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">http://www.vim.org/scripts/script.php?script_id=273</span><br />\r\n<br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">工具简介（参考2）</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">--------------------------------------------------------------------------------</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">总体使用的感觉定位查找类型定义基本可以用，但自动补全类型方面由于ctags的功能有限，感觉在大工程时，不一定很好用。</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">大型程序一定要global的参与，它的分析比较全面，但在vim中的提示信息有限。</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">taglist 精干，需要ctags的支撑 ，直接可以在左边列出函数列表，全局参数列表。（可以排序）</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">cscope 比较强大，可以对函数以及部分类型定义进行跳转，但有些bug，好像在某些条件下无法正确找到分析枚举的定义。</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">cppcomplete 需要ctags的支撑，可以补全类型或者函数名（可不是普通ctrl+p/n的那种）</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">global 新版本可以嵌入vim使用，提供比较完整解析和类型索引，和cscope比，稍微差些的就是对类型引用的打印列表中没有标识这个引用在什么函数中进行的。其实我的感觉global可能不是为vim所生，它的主要目的是用html的方式进行表达相关的关联关系和索引，使用起来感觉没有cscope的那么贴切。</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">--------------------------------------------------------------------------------</span><br />\r\n<br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">vim</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">-------------------------</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">vim在本机上被安装到/usr/share/vim/vim70目录下（用$vim代指）。可以通过修改$vim/plugin, $home/.vim下的文件内容和$home/.vimrc来配置vim参数。</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">-------------------------</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">使用gvim或者vim -g可以启动图形界面的vim。</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">-------------------------</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">vim比如ctrl-n可以实现自动补全，[i 可以查看光标所在处的函数的声明，ctrl-]跳转到函数声明所在的文件，gd则是在当前文件跳转到局部变量的声明处。</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">-------------------------</span><br />\r\n<br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">ctaglist</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">-------------------------</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">在vim中用</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">\":tlisttoggle\" command to open/close the taglist window.&nbsp;</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">\":help taglist\" command to get more information about using the taglist plugin.&nbsp;</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">-------------------------</span><br />\r\n<br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">ctags</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">-------------------------</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">q：如何看到标准库文件中的定义？</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">a:</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">在你的目录下建一个链接到标准库的源代码，然后</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">ctags -r *</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">vi -t printf</span><br />\r\n<span style=\"color:#333333;font-family:\" font-size:16px;background-color:#ffffff;\"=\"\">就可以看见了。</span>','2017-08-06 11:19:44'),(110,'./up_image/img_59a3a5858f732.jpg',2,'php 代码规范简洁之道','张国福','php团队 编码规范 & 代码样式风格规范',50,'\'<h2 style=\"color:red;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	一、基本约定\r\n</h2>\r\n<span style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\"></span>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>1、源文件</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（1）、纯php代码源文件只使用 &lt;?php 标签，省略关闭标签 ?&gt; ；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（2）、源文件中php代码的编码格式必须是无bom的utf-8格式；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（3）、使用 unix lf(换行符)作为行结束符；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（4）、一个源文件只做一种类型的声明，即，这个文件专门用来声明class, 那个文件专门用来设置配置信息，别混在一起写；\r\n</p>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>2、缩进</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	使用tab键来缩进，每个tab键长度设置为4个空格；\r\n</p>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>3、行</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	一行推荐的是最多写120个字符，多于这个字符就应该换行了，一般的编辑器是可以设置的。\r\n</p>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>4、关键字 和 true/false/null</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	php的关键字，必须小写，boolean值：true，false，null 也必须小写。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	下面是php的“关键字”，必须小写：\r\n</p>\r\n<blockquote style=\"background:#eeeeee;color:#333333;font-size:15px;font-family:&quot;\">\r\n	<p>\r\n		\'__halt_compiler\', \'abstract\', \'and\', \'array\', \'as\', \'break\', \'callable\', \'case\', \'catch\', \'class\', \'clone\', \'const\', \'continue\', \'declare\', \'default\', \'die\', \'do\', \'echo\', \'else\', \'elseif\', \'empty\', \'enddeclare\', \'endfor\', \'endforeach\', \'endif\', \'endswitch\', \'endwhile\', \'eval\', \'exit\', \'extends\', \'final\', \'for\', \'foreach\', \'function\', \'global\', \'goto\', \'if\', \'implements\', \'include\', \'include_once\', \'instanceof\', \'insteadof\', \'interface\', \'isset\', \'list\', \'namespace\', \'new\', \'or\', \'print\', \'private\', \'protected\', \'public\', \'require\', \'require_once\', \'return\', \'static\', \'switch\', \'throw\', \'trait\', \'try\', \'unset\', \'use\', \'var\', \'while\', \'xor\'\r\n	</p>\r\n</blockquote>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>5、命名</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（1）、类名 使用大驼峰式（studlycaps）写法；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（2）、（类的）方法名 使用小驼峰（camecase）写法；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（3）、函数名使用 小写字母 + 下划线 写法，如 function http_send_post()；&nbsp;\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（4）、变量名 使用小驼峰写法，如 $username；\r\n</p>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>6、代码注释标签</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	如 函数注释、变量注释等，常用标签有&nbsp;<a href=\"https://phpdoc.org/docs/latest/references/phpdoc/tags/package.html\" target=\"_blank\">@package</a>、<a href=\"https://phpdoc.org/docs/latest/references/phpdoc/tags/var.html\" target=\"_blank\">@var</a>、<a href=\"https://phpdoc.org/docs/latest/references/phpdoc/tags/param.html\" target=\"_blank\">@param</a>、<a href=\"https://phpdoc.org/docs/latest/references/phpdoc/tags/return.html\" target=\"_blank\">@return</a>、<a href=\"https://phpdoc.org/docs/latest/references/phpdoc/tags/author.html\" target=\"_blank\">@author</a>、<a href=\"https://phpdoc.org/docs/latest/references/phpdoc/tags/todo.html\" target=\"_blank\">@todo</a>、<a href=\"https://phpdoc.org/docs/latest/references/phpdoc/tags/throws.html\" target=\"_blank\">@throws</a>\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	必须遵守 phpdocument 标签规则，不要另外去创造新的标签，更多标签查看&nbsp;<a href=\"https://phpdoc.org/docs/latest/references/phpdoc/tags/param.html\" target=\"_blank\">phpdocument官网</a>\r\n</p>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>7、业务模块</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（1）、涉及到多个数据表 更新/添加 操作时，最外层要用事务，保证数据库操作的原子性；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（2）、model层，只做简单的数据表的查询；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（3）、业务逻辑统一封装到 logic层；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（4）、控制器只做url路由，不要当作 业务方法 调用；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（5）、控制器层不能出现sql操作语句，如&nbsp;thinkphp框架的 where()、order()&nbsp;等模型方法，\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	即，控制器中，不要出现类似这样的sql语句：<span style=\"color:#0000ff;\">d(\'xxx\')-&gt;where()-&gt;order()-&gt;limit()-&gt;find(); &nbsp;</span>\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	where()、order()、limit()&nbsp;等sql方法只能出现在 model层、业务层！\r\n</p>\r\n<h2 style=\"color:red;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	二、代码样式风格\r\n</h2>\r\n<span style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\"></span>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>1、命名空间(namespace) 和 导入(use)声明</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	先简单文字描述下：\r\n</p>\r\n<ol style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	<li>\r\n		命名空间(namespace)的声明后面必须有一行空行；\r\n	</li>\r\n	<li>\r\n		所有的导入(use)声明必须放在命名空间(namespace)声明的下面；\r\n	</li>\r\n	<li>\r\n		一句声明中，必须只有一个导入(use)关键字；\r\n	</li>\r\n	<li>\r\n		在导入(use)声明代码块后面必须有一行空行；\r\n	</li>\r\n</ol>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	用代码来说明下：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nnamespace lib\\databases; // 下面必须空格一行\r\n\r\nclass mysql {\r\n\r\n}</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	namespace下空一行，才能使用use，再空一行，才能声明class\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nnamespace lib\\databases; // 下面必须空格一行\r\n\r\nuse foointerface; // use 必须在namespace 后面声明\r\nuse barclass as bar;\r\nuse othervendor\\otherpackage\\bazclass; // 下面必须空格一行\r\n\r\nclass mysql {\r\n\r\n}</pre>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>2、类(class)，属性(property)和方法(method)</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（1）、继承(extends) 和实现(implement) 必须和 class name 写在一行。\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nnamespace lib\\databaes;\r\n\r\nclass mysql extends parentclass implements \\pdo, \\db { // 写一行\r\n\r\n}\r\n</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（2）、属性(property)必须声明其可见性，到底是&nbsp;public&nbsp;还是 protected 还是&nbsp;private，不能省略，也不能使用var, var是php老版本中的什么方式，等用于public。\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nnamespace lib\\databaes;\r\n\r\nclass mysql extends parentclass implements \\pdo, \\db { // 写一行\r\n    public $foo = null;\r\n    private $name = \'yangyi\';\r\n    protected $age = \'17\';\r\n}</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（3）、方法(method)，必须&nbsp;声明其可见性，到底是&nbsp;public&nbsp;还是 protected 还是&nbsp;private，不能省略。如果有多个参数，第一个参数后紧接“,” ，再加一个空格：function_name ($par, $par2, $pa3), 如果参数有默认值，“=”左右各有一个空格分开。\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nnamespace lib\\databaes;\r\n\r\nclass mysql extends parentclass implements \\pdo, \\db { // 写一行\r\n    public getinfo($name, $age, $gender = 1) { // 参数之间有一个空格。默认参数的“=”左右各有一个空格，) 与 { 之间有一个空格\r\n\r\n    }\r\n}\r\n</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（4）、当用到抽象(abstract)和终结(final)来做类声明时，它们必须放在可见性声明 （public&nbsp;还是protected还是private）的前面。而当用到静态(static)来做类声明时，则必须放在可见性声明的后面。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	直接上代码：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nnamespace vendor\\package;\r\n\r\nabstract class classname {\r\n    protected static $foo; // static放后面\r\n    abstract protected function zim(); // abstract放前面\r\n\r\n    final public static function bar() { // final放前面，static放最后。\r\n        // 方法主体部分\r\n    }\r\n}\r\n</pre>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>3、控制结构</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	控制接口，就是 if&nbsp;else&nbsp;while&nbsp;switch等。这一类的写法规范也是经常容易出现问题的，也要规范一下。\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（1）、if，elseif，else写法，直接上规范代码吧：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nif ($expr1) { // if 与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n\r\n} elseif ($expr2) { // elesif 连着写，与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n\r\n} else { // else 左右各一个空格\r\n\r\n}</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（2）、switch，case&nbsp;注意空格和换行，还是直接上规范代码：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nswitch ($expr) { // switch 与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n    case 0:\r\n        echo \'first case, with a break\'; // 对齐\r\n        break; // 换行写break，也对齐。\r\n    case 1:\r\n        echo \'second case, which falls through\';\r\n        // no break\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n        echo \'third case, return instead of break\';\r\n        return;\r\n    default:\r\n        echo \'default case\';\r\n        break;\r\n}</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（3）、while，do while&nbsp;的写法也是类似，上代码：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nwhile ($expr) { // while 与 ( 之间有一个空格， ) 与 { 之间有一个空格\r\n\r\n}\r\n\r\ndo { // do 与 { 之间有一个空格\r\n\r\n} while ($expr); // while 左右各有一个空格</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（4）、for的写法\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nfor ($i = 0; $i &lt; 10; $i++) { // for 与 ( 之间有一个空格，二元操作符 \"=\"、\"&lt;\" 左右各有一个空格，) 与 { 之间有一个空格\r\n\r\n}</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（5）、foreach的写法\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nforeach ($iterable as $key =&gt; $value) { // foreach 与 ( 之间有一个空格，\"=&gt;\" 左右各有一个空格，) 与 { 之间有一个空格\r\n\r\n}</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（6）、try catch的写法\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\ntry { // try 右边有一个空格\r\n\r\n} catch (firstexceptiontype $e) { // catch 与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n\r\n} catch (otherexceptiontype $e) { // catch 与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n\r\n}</pre>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>4、注释</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（1）、行注释\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	// 后面需要加一个空格；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	如果 // 前面有非空字符，则 // 前面需要加一个空格；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（2）、函数注释\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	参数名、属性名、标签的文本 上下要对齐；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	在第一个标签前加一个空行；\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\n/**\r\n * this is a sample function to illustrate additional php\r\n * formatter options.\r\n *\r\n * @param        $one   the first parameter\r\n * @param int    $two   the second parameter\r\n * @param string $three the third parameter with a longer\r\n *                      comment to illustrate wrapping.\r\n * @return void\r\n * @author  phpgo.cnblogs.com\r\n * @license gpl\r\n */\r\nfunction foo($one, $two = 0, $three = \"string\") {\r\n\r\n}\r\n</pre>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>5、空格</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（1）、赋值操作符（=，+= 等）、逻辑操作符（&amp;&amp;，||）、等号操作符（==，!=）、关系运算符（&lt;，&gt;，&lt;=，&gt;=）、按位操作符（&amp;，|，^）、连接符（.） 左右各有一个空格；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（2）、if，else，elseif，while，do，switch，for，foreach，try，catch，finally&nbsp;等 与 紧挨的左括号“(”之间有一个空格；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（3）、函数、方法的各个参数之间，逗号（\",\"）后面有一个空格；\r\n</p>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<span>6、空行</span>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（1）、所有左花括号&nbsp;<span style=\"color:#ff0000;background-color:#ffff00;\">{</span>&nbsp;都不换行，并且&nbsp;<span style=\"color:#ff0000;background-color:#ffff00;\">｛ 紧挨着的下方，一定不是空行；</span>\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（2）、同级代码（缩进相同）的&nbsp;<span style=\"color:#ff0000;background-color:#ffff00;\">注释（行注释/块注释）前面，必须有一个空行；</span>\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（3）、各个方法/函数 之间有一个空行；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（4）、namespace语句、use语句、clase语句 之间有一个空行；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（5）、return语句\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	如果 return 语句之前只有一行php代码，return 语句之前不需要空行；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	如果 return 语句之前有至少二行php代码，return 语句之前加一个空行；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	（5）、if，while，switch，for，foreach、try 等代码块之间 以及&nbsp;与其他代码之间有一个空行；\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<hr />\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	【<strong>参考示例 汇总</strong>】\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	参考1：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nnamespace lib\\databaes;\r\n\r\nclass mysql extends parentclass implements \\pdo, \\db { // 写一行\r\n    public getinfo($name, $age, $gender = 1) { // 参数之间有一个空格。默认参数的“=”左右各有一个空格，) 与 { 之间有一个空格\r\n\r\n    }\r\n}</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	参考2:\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nnamespace vendor\\package;\r\n\r\nabstract class classname {\r\n    protected static $foo; // static放后面\r\n    abstract protected function zim(); // abstract放前面\r\n\r\n    final public static function bar() { // final放前面，static放最后。\r\n        // 方法主体部分\r\n    }\r\n}</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	参考3：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">&lt;?php\r\nnamespace library\\model;\r\n\r\nuse library\\helper\\imagehelper;\r\nuse library\\logic\\usermainlogic;\r\n\r\n/**\r\n * 用户表 数据模型\r\n *\r\n * @package library\\model\r\n */\r\nclass usermainmodel extends basicmodel {\r\n     /**\r\n     * 获得用户统计信息\r\n     *\r\n     * @param int $userid 用户id\r\n     * @return array\r\n     */\r\n    public function getusercard($userid) {\r\n        $userid = intval($userid);\r\n        return usermainlogic::instance()-&gt;getusercard($userid);\r\n    }\r\n\r\n    /**\r\n     * 根据id 获取用户信息\r\n     *\r\n     * @param int    $userid 用户id\r\n     * @param string $field  显示字段\r\n     * @return array\r\n     */\r\n    public function getbyuserid($userid = 0, $field = \'*\') {\r\n        if (empty($userid)) {\r\n            return array();\r\n        }\r\n\r\n        $where = array(\'id\' =&gt; $userid);\r\n        $info = $this-&gt;field($field)-&gt;where($where)-&gt;find();\r\n\r\n        if (isset($info[\'image\']) &amp;&amp; isset($info[\'sex\'])) {\r\n            $info[\'image\'] = imagehelper::getimageurl($info[\'image\'], $info[\'sex\']);\r\n        }\r\n\r\n        return $info;\r\n    }\r\n}</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	参考4：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">$serv = new swoole_server(\"127.0.0.1\", 9502);\r\n\r\n// sets server configuration, we set task_worker_num config greater than 0 to enable task workers support\r\n$serv-&gt;set(array(\'task_worker_num\' =&gt; 4));\r\n\r\n// attach handler for receive event, which have explained above.\r\n$serv-&gt;on(\'receive\', function($serv, $fd, $from_id, $data) {\r\n    // we dispath a task to task workers by invoke the task() method of $serv\r\n    // this method returns a task id as the identity of ths task\r\n    $task_id = $serv-&gt;task($data);\r\n    echo \"dispath asynctask: id=$task_id\\n\";\r\n});\r\n\r\n// attach handler for task event, the handler will be executed in task workers.\r\n$serv-&gt;on(\'task\', function ($serv, $task_id, $from_id, $data) {\r\n    // handle the task, do what you want with $data\r\n    echo \"new asynctask[id=$task_id]\".php_eol;\r\n\r\n    // after the task task is handled, we return the results to caller worker.\r\n    $serv-&gt;finish(\"$data -&gt; ok\");\r\n});\r\n\r\n// attach handler for finish event, the handler will be executed in server workers, the same worker dispatched this task before.\r\n$serv-&gt;on(\'finish\', function ($serv, $task_id, $data) {\r\n    echo \"asynctask[$task_id] finish: $data\".php_eol;\r\n});\r\n\r\n$serv-&gt;start();\r\n</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;<img src=\"http://images2015.cnblogs.com/blog/381128/201609/381128-20160929222300828-1806388753.png\" alt=\"\" style=\"height:auto !important;\" />\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	<span style=\"color:#ff0000;\"><strong><span style=\"font-size:18px;\"><span style=\"background-color:#ffff00;\">总结：所有左花括号 { 都不换行，并且 ｛ 紧挨着的下方，一定不是空行！</span></span></strong></span>\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<blockquote style=\"background:#eeeeee;color:#333333;font-size:15px;font-family:&quot;\">\r\n	<p>\r\n		上面的 代码样式规范，参考了 java、javascript、objective-c、go 等开发语言的规范！\r\n	</p>\r\n	<p>\r\n		java语言对中国程序员影响太深，大部分人还是习惯把 左花括号<span style=\"color:#ff0000;\"><span style=\"background-color:#ffff00;\">&nbsp;<strong>{&nbsp;</strong></span></span>不换行！\r\n	</p>\r\n	<p>\r\n		书写原则：做到&nbsp;<span style=\"color:#ff0000;background-color:#ffff00;\">代码紧凑</span>&nbsp;而又不失&nbsp;<span style=\"color:#ff0000;background-color:#ffff00;\">小模块化</span>&nbsp;！\r\n	</p>\r\n</blockquote>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;&nbsp;\r\n</p>\r\n<h2 style=\"color:red;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	psr-4 规范\r\n</h2>\r\n<span style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\"></span>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	psr-4规范是刚出没多久的一条新的规范，它也是规范 自动加载(autoload)的，是对psr-0的修改，属于补充规范，\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	我简单说下，主要是以下几点：&nbsp;\r\n</p>\r\n<ol style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	<li>\r\n		废除了psr-0中_就是目录分割符的写法，_下划线在完全限定类名中是没有特殊含义了。&nbsp;\r\n	</li>\r\n	<li>\r\n		类文件名要以 .php 结尾。&nbsp;\r\n	</li>\r\n	<li>\r\n		<span style=\"background-color:#ffff00;\">类名必须要和对应的文件名要一模一样，大小写也要一模一样</span>。\r\n	</li>\r\n</ol>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	<strong>参考：</strong>\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	<a href=\"http://www.cnblogs.com/phpgo/p/5840819.html\" target=\"_blank\">代码风格研究：左花括号 是否换行？？？</a>\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	<a href=\"http://www.cnblogs.com/phpgo/p/5852572.html\" target=\"_blank\">php中psr-[0-4]代码规范</a>\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	<a href=\"http://www.cnblogs.com/phpgo/p/5657846.html\" target=\"_blank\">【荐】javascript编码风格</a>\r\n</p>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<hr />\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<h3 style=\"font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;\">\r\n	<strong>【补充】数组 的书写格式</strong>\r\n</h3>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	只有一个键值对时，就写成一行：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">$where = array(\'id\' =&gt; 789);</pre>\r\n<p style=\"font-family:&quot;font-size:15px;background-color:#ffffff;\">\r\n	有多个（二个或二个以上）键值对时，就换行：\r\n</p>\r\n<pre class=\"cnblogs_highlighter brush:php;\">$where = array(\r\n    \'id\' =&gt; 789,\r\n    \'user_name\' =&gt; \'phpgo\'\r\n);</pre>\'','2017-08-28 05:09:25'),(56,'./up_image/img_599d9b95dfdb8.jpg',0,' 浅谈 php 与手机 app 开发（api 接口开发）','张国福','这篇文章主要介绍了php反射机制原理与用法,结合实例形式分析了php反射机制的原理、用法及相关注意事',50,'<b>一、先简单回答两个问题：</b><br />\r\n<br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">1、php 可以开发客户端？</span><br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">答：不可以，因为php是脚本语言，是负责完成 b/s架构 或 c/s架构 的s部分，即：服务端的开发。（别去纠结 gtk、winbinder）</span><br />\r\n<br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">2、为什么选择 php 作为开发服务端的首选？</span><br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">答：跨平台（可以运行在unix、linux、windows、mac os下）、低消耗（php消耗相当少的系统资源）、运行效率高（相对而言）、mysql的完美搭档，本身是免费开源的，......</span><br />\r\n<br />\r\n<b>二、如何使用 php 开发 api（application programming interface，应用程序编程接口） 呢？</b><br />\r\n<br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">做过 api 的人应该了解，其实开发 api 比开发 web 更简洁，但可能逻辑更复杂，因为 api 其实就是数据输出，不用呈现页面，所以也就不存在 mvc（api 只有 m 和 c），</span><br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">1、和 web 开发一样，首先需要一些相关的参数，这些参数，都会由客户端传过来，也许是 get 也许是 post，这个需要开发团队相互之间约定好，或者制定统一规范。</span><br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">2、有了参数，根据应用需求，完成数据处理，例如：任务进度更新、app内购、一局游戏结束数据提交等等</span><br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">3、数据逻辑处理完之后，返回客户端所需要用到的相关数据，例如：任务状态、内购结果、玩家信息等等</span><br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">数据怎么返给客户端？</span><br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">直接输出的形式，如：json、xm</span>l、text 等等。<br />\r\n4、客户端获取到你返回的数据后，在客户端本地和用户进行交互<br />\r\n<br />\r\n<p>\r\n	<b>临时写的一个简单 api 例子：</b> \r\n</p>\r\n<p>\r\n	<b><br />\r\n</b> \r\n</p>\r\n<p>\r\n	<b> </b>\r\n</p>\r\n<pre class=\"prettyprint lang-php\">\r\n</pre>\r\n<b> <br />\r\n</b> \r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<b><b>三、实际项目中，我们在开发 api 应该注意的几个事项（仅供参考）：</b><br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">1、单文件实现多接口的形式有很多种，例如：if..elseif.. 或 switch 或 动态方法 (也就是tp的这种访问函数体的形式)</span><br />\r\n<span style=\"color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;\">2、对于数据的输出最好用json，json具有相当强大的跨平台性，市场上各大主流编程语言都支持json解析，json正在逐步取代xm</span>l，成为网络数据的通用格式<br />\r\n3、接口安全，一定要增加接口验证。例如，客户端和服务端针对不同接口统一做好加密方式，服务端在对于每次接口需要都要进行验证。以保证防止接口被恶意刷新或黑客恶意调用，尤其是大型商业应用。<br />\r\n4、对于线上的 api 必须保证所有接口正常且关闭所有的错误信息 =&gt; error_reporting(0)，在输出json 时，不能有任何其它输出，否则，客户端将解析数据失败，直接 crash！<br />\r\n5、开发 api 和 web 有一定的区别，如果是 web 的话，可能代码出错了，不会导致特别严重的错误，也许只是导致数据写入和查询失败，也许导致 web 的某个部分错位或乱码。但如果是 api，直接 crash！<br />\r\n6、做接口开发，不建议使用框架开发，原因概括起来有两点（其实我有点冒风险的，本人也是 tper 一枚，毕竟这是tp的官网）：<br />\r\n　　1）客户端一般对服务端的响应速度有极高要求，因此，使用最原生态的 php 完成接口开发，是最高效的，假如用到了框架，还需要加载各种不需要多余的文件，就好比夏天穿了件冬天的衣服。试想，你在玩手机的时候，使用一个应用随便一个操作，等半天才有动静，你受的了吗？<br />\r\n<br />\r\n　　2）就是上面第4点提到的，框架对于web开发，是件很幸福的事，但对于 api 而言，你实在不敢想象它会给你出什么岔子！最后你将痛苦不堪~~因为很多框架都是为 web 诞生的（我也很期待有一天能看到专门为开发 api 而生的框架或者扩展）<br />\r\n<br />\r\n　　这个也有人纠结，接口效率与稳定性，还得看编码的人，有的人可能写的还不如框架跑的快，也有人觉得用框架没什么问题，这里只是建议，关键看自己的实际情况，同时建议代码上线前压测一下<br />\r\n<br />\r\n　　说到这，不得不说扯一下，腾讯微博淘宝等开放平台。其实那些开放平台，所谓的开放，就是给你提供一个这样的接口，你根据他们提供的技术文档，按他们制定的格式和要求，调它们提供的接口文件（一般都是返回json或者xml），你就可以获取到他们的相关信息，例如：qq用户基本信息、淘宝店铺、商品消息等等。然后在根据这些消息，在你的应用里完成交互。<br />\r\n<br />\r\n　　其实，ajax 也是调用 api 的一种体现形式，你觉得呢？ 呵呵~~<br />\r\n</b> \r\n</p>\r\n<span></span>','2017-08-23 15:13:25'),(51,'./up_image/img_5986fee9c3d24.jpg',1,'修复时间更改','张国福','修复时间更改',50,'<div style=\"font-size:14px;\">\r\n	如何设置时区\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">&lt;?php&nbsp;</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">function_exists(date_default_timezone_set);//在这他总是返回1,这函数是判断这里面的字符是不是一个定义了的函数名&nbsp;</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">date_default_timezone_set(\"etc/gmt\");//这是格林威治标准时间,得到的时间和默认时区是一样的&nbsp;</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">date_default_timezone_set(\"etc/gmt+8\");//这里比林威治标准时间慢8小时&nbsp;</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">date_default_timezone_set(\"etc/gmt-8\");//这里比林威治标准时间快8小时&nbsp;</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">date_default_timezone_set(\'prc\'); //设置中国时区&nbsp;</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">?&gt;&nbsp;</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ffffff;\">可以在文件开头加入 ini_set(\'date.timezone\',\'asia/shanghai\'); // \'asia/shanghai\' 为上海时区&nbsp;</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ffffff;\">ini_set(k,v);</span>\r\n</div>','2017-08-25 13:11:10'),(52,'./up_image/img_598af69ab92b8.jpg',2,'访问网站出现eof','张国福','今天访问本地的项目，全部提示上面的那些信息eof，不知道咋回事？  之前都都能正常访问，所以我猜想本',50,'<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	今天访问本地的项目，全部提示上面的那些信息eof，不知道咋回事？\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	之前都都能正常访问，所以我猜想本地的项目本身肯定是没有问题的。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	原因：<span style=\"line-height:1.8;color:#ff0000;\"><strong>代理软件-蓝灯</strong></span>(由于自己经常上google，所以下载使用了蓝灯免费版使用)\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	我的解决方法：\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　1.关掉代理软件即可\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　2.给你本地的项目更换域名，重新绑定host即可\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	延伸(windows的自动更新程序以及其他软件的自动更新、打补丁，都可能引起503的问题)：\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　1.关闭windows 自动更新程序，或改为手动安装，或选择性的更新程序。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　2.打补丁可以使你的系统更加稳定、安全，但也可以让你的系统出现一些莫名其妙的事儿，让你丈二和尚摸不着头脑，所以一定要打补丁时要清楚打了哪些补丁，以便出现故障后可以还原\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　3.尽量关闭所有软件的自动更新功能，因为这或许将成为某软件的后门。\r\n</p>','2017-08-09 11:48:42'),(53,'./up_image/img_5990129a74617.jpg',0,'各大前端框架介绍','张国福','各大前端框架介绍',50,'<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<p>\r\n		<strong>目录</strong> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			一、easyui\r\n		</li>\r\n		<li>\r\n			二、dwz jui\r\n		</li>\r\n		<li>\r\n			三、hui\r\n		</li>\r\n		<li>\r\n			四、bui\r\n		</li>\r\n		<li>\r\n			五、ace admin\r\n		</li>\r\n		<li>\r\n			六、metronic\r\n		</li>\r\n		<li>\r\n			七、h+ ui\r\n		</li>\r\n		<li>\r\n			八、其它ui\r\n		</li>\r\n		<li>\r\n			九、总结\r\n		</li>\r\n	</ul>\r\n</div>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	最近要做一个企业的oa系统，以前一直使用easyui，一切都好，但感觉有点土了，想换成现在流行的bootstrap为基础的后台ui风格，想满足的条件应该达到如下几个：\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	1、美观、大方、简洁\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	2、兼容ie8、不考虑兼容ie6/ie7，因为现在还有很多公司在使用win7系统，系统内置了ie8\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	3、能通过选项卡打开多个页面，不想做单页，iframe也没关系\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	4、性能好，不要太笨重\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	5、最好以bootstrap为基础\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	6、还希望在以后别的系统中能够复用。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	一次次反复纠结的选择开始了，给大家介绍下我考虑过的ui，也给大家一个参考。\r\n</p>\r\n<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</div>\r\n<h1 style=\"font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;\">\r\n	一、easyui\r\n</h1>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	easyui是一种基于jquery的用户界面插件集合。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	easyui为创建现代化，互动，javascript应用程序，提供必要的功能。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	使用easyui你不需要写很多代码，你只需要通过编写一些简单html标记，就可以定义用户界面。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	easyui是个完美支持html5网页的完整框架。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	easyui节省您网页开发的时间和规模。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	easyui很简单但功能强大的。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818093202687-33512256.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818092517046-485277410.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	优点：轻量、功能强大、免费、兼容性好、帮助详细、使用的人多生态好\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	缺点：非响应式布局、某些系统看起来有点土（客户与老板的感觉、确实与最新的那些ui有差距）\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	获得：上网搜索、网盘搜索大把被搭建好了基础功能的框架。下载\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	下载后大家可以替换成最新的1.5版的easyui\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	官网：http://www.jeasyui.com/，有免费版，有商业版，商业版收费，帮助非常详尽\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	资源：http://www.jeasyui.net/，easy是国外的产品，这个网站类似官网的中文版\r\n</p>\r\n<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</div>\r\n<h1 style=\"font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;\">\r\n	二、dwz jui\r\n</h1>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	特点：dwz富客户端框架(jquery ria framework), 是中国人自己开发的基于jquery实现的ajax ria开源框架. 设计目标是简单实用,快速开发,降低ajax开发成本。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818095614812-1128311466.jpg\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	官网：http://jui.org/\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	下载：https://github.com/dwzteam/\r\n</p>\r\n<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</div>\r\n<h1 style=\"font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;\">\r\n	三、hui\r\n</h1>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	h-ui前端框架是在bootstrap的思想基础上基于 html、css、javascript开发的轻量级web前端框架,开源免费,简单灵活,兼容性好,满足大多数中国网站。分了前端ui与后端ui。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818100512734-956757087.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818101219437-1416619873.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	官网：http://www.h-ui.net/h-ui.admin.shtml&nbsp;后台，http://www.h-ui.net/&nbsp;前台\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	下载：https://github.com/jackying/\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	缺点：感觉用的人少，名气小，资料不全，配套组件不多，但国人的产品符合国人的口味。\r\n</p>\r\n<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</div>\r\n<h1 style=\"font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;\">\r\n	四、bui\r\n</h1>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	bui她是基于jquery,兼容kissy的ui类库，专致于解决后台系统的框架方案，bui提供了丰富的dpl含有强大的控件库对业务做了精细的分析。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818101105062-1243824719.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	官网：http://www.builive.com/\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	下载：https://github.com/dxq613/bui\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	感觉也比较冷、与hui有点类似的优点整体框架符合我的要求，但风格有种说不出的感觉。\r\n</p>\r\n<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</div>\r\n<h1 style=\"font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;\">\r\n	五、ace admin\r\n</h1>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	响应式bootstrap网站后台管理系统模板ace admin，非常不错的轻量级易用的admin后台管理系统，基于bootstrap3，拥有强大的功能组件以及ui组件，基本能满足后台管理系统的需求，而且能根据不同设备适配显示，而且还有四个主题可以切换。以前收费，好像最新版不再收费了。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818134607046-1173544375.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818134701781-149050802.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818134740593-814554555.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818134824828-1136492981.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	下载：https://github.com/bopoda/ace\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	官网：http://ace.jeka.by/\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	感觉比较全，功能强大,组件多，美观，只是用了很多不同的插件，兼容性不错。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	兼容的浏览器：\r\n</p>\r\n<ul style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<li>\r\n		internet explorer 10\r\n	</li>\r\n	<li>\r\n		internet explorer 11\r\n	</li>\r\n	<li>\r\n		internet explorer 8\r\n	</li>\r\n	<li>\r\n		internet explorer 9\r\n	</li>\r\n	<li>\r\n		latest chrome\r\n	</li>\r\n	<li>\r\n		latest firefox\r\n	</li>\r\n	<li>\r\n		latest opera\r\n	</li>\r\n	<li>\r\n		latest safari\r\n	</li>\r\n</ul>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	使用的插件：\r\n</p>\r\n<div style=\"background-color:#f5f5f5;border:1px solid #cccccc;padding:5px;margin:5px 0px;font-family:;\">\r\n	<img src=\"http://images.cnblogs.com/outliningindicators/contractedblock.gif\" alt=\"\" />&nbsp;<span style=\"background-color:#ffffff;line-height:1.5 !important;\">view code</span> \r\n</div>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	使用到的插件并没有分开存放，使用起来会麻烦一些。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	另外该插件也被很多人简化、修改成选项卡+iframe风格了。\r\n</p>\r\n<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</div>\r\n<h1 style=\"font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;\">\r\n	六、metronic\r\n</h1>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	metronic 是一套精美的响应式后台管理模板，基于强大的 twitter bootstrap 框架实现。metronic 拥有简洁优雅的 metro ui 风格界面，6 种颜色可选，76 个模板页面，包括图表、表格、地图、消息中心、监控面板等后台管理项目所需的各种组件。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818135553687-290869200.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818135723062-1908450132.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818135814765-89085450.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	页面规范、精致、细腻、美观大方；功能强大、非常全；在所有我看到过的基于bootstrap的网站模版中，metronic是我认为最优秀的，其外观之友好、功能之全面让人惊叹。metronic 是一个自适应的html模版，提供后台管理模版和前端内容网页模版两种风格。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<strong>优点：</strong> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	支持html5 和 css3<br />\r\n自适应，基于响应式 twitter bootstrap框架，同时面向桌面电脑、平板、手机等终端。<br />\r\n整合angularjs 框架。<br />\r\n可自定义管理面板，包括灵活的布局、主题、导航菜单、侧边栏等。<br />\r\n提供了部分电子商务模块：cms, crm, saas。<br />\r\n多风格，提供了3个前端风格，7个后端管理面板风格。<br />\r\n简洁扁平风格设计。<br />\r\n700多个网页模版，1500多个ui小组件，100多个表单，80多个jquery插件。<br />\r\n提供说明文档。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<strong>缺点：</strong> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	太大了，真的不知道从那里开始\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	对ie的兼容不好，虽然官方声称支持ie8，但我测试结果不支持\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	收费，今天的价格是$28\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818141318265-82340293.png\" alt=\"\" /> \r\n</p>\r\n<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</div>\r\n<h1 style=\"font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;\">\r\n	七、h+ ui\r\n</h1>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	官网的介绍：h+是一个完全响应式，基于bootstrap3.3.6最新版本开发的扁平化主题，她采用了主流的左右两栏式布局，使用了html5+css3等现代技术，她提供了诸多的强大的可以重新组合的ui组件，并集成了最新的jquery版本(v2.1.4)，当然，也集成了很多功能强大，用途广泛的jquery插件，她可以用于所有的web应用程序，如网站管理后台，网站会员中心，cms，crm，oa等等，当然，您也可以对她进行深度定制，以做出更强系统。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818141637125-696613682.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	官网：http://www.zi-han.net/theme/hplus/\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	与metronic非常像，插件非常多，收费998人民币。\r\n</p>\r\n<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</div>\r\n<h1 style=\"font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;\">\r\n	八、其它ui\r\n</h1>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818142203609-550636659.png\" alt=\"\" /> \r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	<img src=\"http://images2015.cnblogs.com/blog/63651/201608/63651-20160818142531718-1781554856.png\" alt=\"\" /> \r\n</p>\r\n<div style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</div>\r\n<h1 style=\"font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;\">\r\n	九、总结\r\n</h1>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	没有形式就没有内容、ui重要，特别是当客户与老板不懂太多关于代码、功能、性能的时候。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	上面的ui你也许可以通过各种途径获得，但商业应用请慎重。\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	想来想去还是拿不定主意，不过有点想法：\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	1、使用hui和bootstrap\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	2、使用easyui的框架，内容页使用hui+bootstrap，iframe选项卡\r\n</p>\r\n<p style=\"color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	3、从各个功能强大的页面中拿一些插件过来\r\n</p>','2017-08-21 03:45:03'),(44,'./up_image/img_5983182510882.jpg',2,'php开发者的linux学习之路','张国福','谈起一个高效动态网站的构建，那就不得不提到lamp，即linux操作系统、apache网络服务器、m',50,'<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\">谈起一个高效动态网站的构建，那就不得不提到lamp，即linux操作系统、apache网络服务器、mysql数据库、perl、php或python编程语言等开源产品所组成的网站架构框架，其最大的优势是开放性强，安全性高，且成本低廉。因此，lamp成为了国际流行的网站构建方案。而作为一名php开发人员，在工作中，普遍也使用lamp来开发一个高性能的网站，当然，也有其他构建方案，如lnmp，wamp等。因此，linux系统不仅是一个高性能网站的构建基础，也是一名php开发人员的必修课。\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\">开始学习linux系统，书籍教程方面，我选择的是这本语言精练，更易上手的《linux就该这么学》，它是一本注重实用性的linux自学书籍，其作者刘遄从事于linux运维技术行业多年，通过红帽架构师认证rhca认证，学习生态圈较完善，有完备的书籍、网站、专业培训、论坛和其他社区的linux学习生态圈。当然，对于慢节奏的同学，也可以通过网络上的教学视频进行学习；那么，跟随教程，我在windows下使用了vmware安装了一个虚拟机，配置好centos系统，第一步当然是熟悉linux的基本操作命令，如文档管理项的rm、mv、cat等，磁盘管理的cd、ls、fdisk等。当然，在熟悉其基本命令的同时，也会学习到linux的目录结构，权限管理，进程管理等基础知识，我就不一一赘述了。在这里我推荐几个关于进程管理的命令：ps，用于显示当前进程状态，常用的搭配有ps aux 、ps ef、 ps efh。dstat：动态系统资源统计命令。top：动态显示inux进程。htop：交互式进程查看器。这几个命令对于我们的进程管理有相当大的帮助。\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\"><br />\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\"><br />\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\">如何搭建lamp环境？第一步当然是下载安装必要的产品，顺序一般是：apache、mysql、php，当然，linux下每一个软件都有各种依赖，人工安装依赖是一项很复杂的工作，于是，包管理器便应运而生，centos使用的是yum包管理器，它会自动帮我们把需要安装的依赖包自动安装，只需输入此命令：yum y install httpd mysql mysqlserver php phpmysql postgresql postgresqlserver phppostgresql phppgsql phpdevel，安装过程大概几分钟，安装完成。\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\">第二步便是测试环境是否正常运行（run），首先，我们启动apache服务器：/etc/rc.d/init.d/httpd start，启动之后检测启动结果：ps aux | grep httpd，如过出现一堆进程，那么apache网络服务器已正常运转，然后，我用ifconfig命令查看服务器的ip并进入网站根目录下创建一个phpinfo.php的程序，用于查看php的配置信息，如果配置信息正常显示，那么php模块已配置完成，接下来就进行数据库的配置，当然第一步是启动数据库：/etc/rc.d/init.d/mysqld start，然后检查启动结果：netstat tulnp | grep ：3306，结果为正常启动，接下来我进入mysql数据库，新建了一个用于测试的表，并简单的插入了几条数据，然后再写了一个用php连接mysql数据库的测试代码：\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\">运行后如能正常查询数据，那么，我们的lamp环境便搭建完成。\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\">为了进一步熟悉linux系统，我决定安装另一款linux os进行日常开发，流行的发行版有很多，诸如debian，红帽(redhat)<u>http://www.linuxprobe.com/chapter00.html</u>、ubuntu(包括kubuntu,xubuntu等)、opensuse(原suse)、mandriva(原mandrake)、centos、fedora、veket等，各有其优缺点，我就不对其深入讨论了。我最终选择安装的是ubuntu，选择的原因是其友好的界面以及许多常用软件的集成。\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\">安装好ubuntu后，我第一步是搭建php的开发环境，直接使用aptget安装软件，当然，还有deb包的安装方式以及独具ubuntu特色的新立得软件包管理等方法。安装谷歌浏览器时，发现缺少依赖包，这时候，这条命令就能帮你自动安装依赖包：sudo aptget install f。当然，在ubuntu系统下有许多好用的软件，比如浏览器有：firefox，谷歌，opera，音乐播放器有：audacious、rhythmbox。我个人推荐几款实用的软件：谷歌浏览器，wps文件处理器，atom代码编辑器，thunderbird邮件，filezilla等。\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\">在安装完必备的软件后，我决定对我的桌面进行一次美化，ubuntu有许多很精美的主题，你甚至可以将其打造为mac的界面风格，可以参考网上资料，调整桌面环境，我推荐使用unitytweaktool，这是一个非常好用的unity图形化管理工具，可以修改工作区，热区数量等。主题我推荐使用flatabulous，它是一款ubuntu下扁平化主题，也是我试过众多主题中最喜欢的一个！\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;\"=\"\" style=\"margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);\">至此，一个个性化的linux os 便打造成功,不过也推荐你看下书籍《linux就该这么学》来学习rhel7系统，迎合更多的发行版系统。至今，linux系统已经成为我开发工作的一部分，简单的指令操作，完全开放的权限，稳定的运行效率，以前在windows下很繁琐的操作，在linux下只需要一条命令，在开发工作中极大的节约了时间成本。我想，对于开发者而言，不仅仅是php开发者，linux系统对于我们来说都是不可缺少的工作平台！\r\n	</p>','2017-08-03 04:33:41'),(55,'./up_image/img_599a5582abe80.jpg',1,'怎么解决vmware中虚拟机中无法使用键盘的故障','张国福','当我们使用vmware时，在折腾虚拟机系统后，下次开启虚拟机系统却发现键盘不能用，无法输入，这让人很',50,'<ol style=\"color:#333333;font-family:&quot;font-size:16px;text-align:justify;background-color:#ffffff;\">\r\n	<li>\r\n		<div>\r\n			<p>\r\n				打开vmware，定位到故障机的标签，切记这时是在关闭电源状态下，这一点很重要。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style=\"padding:10px 0px;\">\r\n				<a href=\"http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=1\" target=\"_self\"><img alt=\"怎么解决vmware中虚拟机中无法使用键盘的故障\" src=\"http://e.hiphotos.baidu.com/exp/w=500/sign=eee0700a768da9774e2f862b8051f872/63d0f703918fa0ecac8ad734239759ee3d6ddbbe.jpg\" /><span style=\"background:#333333;\"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style=\"color:#eeffee;text-align:center;background:url(&quot;\">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				点击“编辑虚拟机设置”，会弹出个新的窗口中，点击“选项”。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style=\"padding:10px 0px;\">\r\n				<a href=\"http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=2\" target=\"_self\"><img alt=\"怎么解决vmware中虚拟机中无法使用键盘的故障\" src=\"http://h.hiphotos.baidu.com/exp/w=500/sign=72a913c3d4c8a786be2a4a0e5708c9c7/aa18972bd40735fab17bfd809b510fb30f24087b.jpg\" /><span style=\"background:#333333;\"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style=\"color:#eeffee;text-align:center;background:url(&quot;\">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				在选项下，点击“常规”，在窗口右下角找到“增强型虚拟键盘”。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style=\"padding:10px 0px;\">\r\n				<a href=\"http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=3\" target=\"_self\"><img alt=\"怎么解决vmware中虚拟机中无法使用键盘的故障\" src=\"http://e.hiphotos.baidu.com/exp/w=500/sign=81d835f246166d223877159476230945/3b87e950352ac65cc41bd44afef2b21193138ae9.jpg\" /><span style=\"background:#333333;\"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style=\"color:#eeffee;text-align:center;background:url(&quot;\">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				点击“增强型虚拟键盘”的小三角形，这时就会展开它的选项有三个，分别是关闭、如果可用请使用、需要，你可以选择你想要的。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style=\"padding:10px 0px;\">\r\n				<a href=\"http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=4\" target=\"_self\"><img alt=\"怎么解决vmware中虚拟机中无法使用键盘的故障\" src=\"http://a.hiphotos.baidu.com/exp/w=500/sign=b8e0fecfa2efce1bea2bc8ca9f51f3e8/a9d3fd1f4134970a1841ad1690cad1c8a7865ddc.jpg\" /><span style=\"background:#333333;\"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style=\"color:#eeffee;text-align:center;background:url(&quot;\">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				这里选择了“如果可用请使用”，并点“确定”保存。这是修改好的。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style=\"padding:10px 0px;\">\r\n				<a href=\"http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=5\" target=\"_self\"><img alt=\"怎么解决vmware中虚拟机中无法使用键盘的故障\" src=\"http://a.hiphotos.baidu.com/exp/w=500/sign=42bbeb2e67d0f703e6b295dc38fb5148/d52a2834349b033b931d41e310ce36d3d539bd76.jpg\" /><span style=\"background:#333333;\"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style=\"color:#eeffee;text-align:center;background:url(&quot;\">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				删除虚拟机系统目录下的 后缀名为“.vmdk.lck”的文件或文件夹，为确保无误，可以先备份出来。\r\n			</p>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style=\"color:#eeffee;text-align:center;background:url(&quot;\">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				启动虚拟机，虚拟机键盘就可以正常使用了。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style=\"padding:10px 0px;\">\r\n				<a href=\"http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=6\" target=\"_self\"><img alt=\"怎么解决vmware中虚拟机中无法使用键盘的故障\" src=\"http://c.hiphotos.baidu.com/exp/w=500/sign=f6c3e40f18950a7b75354ec43ad0625c/6a63f6246b600c333d8f61f11f4c510fd9f9a111.jpg\" /></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div>\r\n			<br />\r\n		</div>\r\n	</li>\r\n</ol>','2017-08-21 03:37:38'),(104,'./up_image/img_59a0226ec8c17.jpg',0,'smarty模板如何清除编译过的缓存文件','张国福','',50,'\'<div style=\"font-size:14px;\">\r\n	<span style=\"font-size:16px;color:#333333;background-color:#ffffff;\">clear_all_cache();//清除所有缓存</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-size:16px;color:#333333;background-color:#ffffff;\">clear_cache(\'index.tpl\');//清除index.tpl的缓存</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-size:16px;color:#333333;background-color:#ffffff;\">clear_cache(\'index.tpl\',cache_id);//清除指定id的缓存</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<br />\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">$smarty-&gt;cache_dir=\'./cache/\'; //设置存放缓存文件的文件夹</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">$smarty-&gt;caching=1;//开启缓存 0、false代表关闭|非0数字、true代表开启</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">$smarty-&gt;cache_lifetime=3600//单位为秒(如果填写-1为永不过期)</span>\r\n</div>\r\n<div style=\"font-size:14px;\">\r\n	<span style=\"font-family:tahoma;background-color:#ddedfb;\">$smarty-&gt;display(\'list2.html\',md5($_server[\'request_uri\']));//将当前页面的url(包含?后面的所有参数)进行md5加密然后设置缓存文件名</span>\r\n</div>\'','2017-08-25 13:13:18'),(105,'./up_image/img_59a022f8c1109.jpg',0,'常用的http状态码','张国福','常用的http状态码',50,'\'<div style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	<ol>\r\n		<li>\r\n			<span style=\"line-height:21px;background-color:#dfc5a4;\">成功的状态码： &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>200</span></span><span style=\"line-height:21px;\">&nbsp;–&nbsp;服务器成功返回网页 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>304</span></span><span style=\"line-height:21px;\">&nbsp;–&nbsp;未修改 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\">失败的状态码： &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>404</span></span><span style=\"line-height:21px;\">&nbsp;–&nbsp;请求的网页不存在 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>503</span></span><span style=\"line-height:21px;\">&nbsp;–&nbsp;服务器暂时不可用 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>500</span></span><span style=\"line-height:21px;\">&nbsp;–&nbsp;服务器内部错误&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;\">\r\n	下面的不是很常用，记住上面那几个就ok了，有bug了再补充\r\n</p>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;\">\r\n	其他的状态码如下：\r\n</p>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;\">\r\n	1xx（临时响应）\r\n</p>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;\">\r\n	用于表示临时响应并需要请求者执行操作才能继续的状态代码。\r\n</p>\r\n<div style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	<ol>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span style=\"line-height:21px;\"><span>100</span></span><span style=\"line-height:21px;\">（continue继续）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求者应当继续提出请求。服务器返回此代码则意味着，服务器已收到了请求的第一部分，现正在等待接收其余部分。（http&nbsp;</span><span style=\"line-height:21px;\"><span>1.1</span></span><span style=\"line-height:21px;\">新） &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>101</span></span><span style=\"line-height:21px;\">（switching&nbsp;protocols切换协议）&nbsp;&nbsp;&nbsp;&nbsp;请求者已要求服务器切换协议，服务器已确认并准备进行切换。（http&nbsp;</span><span style=\"line-height:21px;\"><span>1.1</span></span><span style=\"line-height:21px;\">新）&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">&nbsp;</span><span style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\"></span>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	2xx（成功）\r\n</p>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	用于表示服务器已成功处理了请求的状态代码。\r\n</p>\r\n<div style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	<div>\r\n		<a></a>&nbsp;\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span style=\"line-height:21px;\"><span>200</span></span><span style=\"line-height:21px;\">（成功）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器已成功处理了请求。通常，这表示服务器提供了请求的网页。 &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>201</span></span><span style=\"line-height:21px;\">（已创建）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求成功且服务器已创建了新的资源。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>202</span></span><span style=\"line-height:21px;\">（已接受）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器已接受了请求，但尚未对其进行处理。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>203</span></span><span style=\"line-height:21px;\">（非授权信息）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器已成功处理了请求，但返回了可能来自另一来源的信息。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>204</span></span><span style=\"line-height:21px;\">（无内容）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器成功处理了请求，但未返回任何内容。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>205</span></span><span style=\"line-height:21px;\">（重置内容）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器成功处理了请求，但未返回任何内容。与&nbsp;</span><span style=\"line-height:21px;\"><span>204</span></span><span style=\"line-height:21px;\">&nbsp;响应不同，此响应要求请求者重置文档视图（例如清除表单内容以输入新内容）。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>206</span></span><span style=\"line-height:21px;\">（部分内容）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器成功处理了部分&nbsp;get&nbsp;请求。&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">&nbsp;</span><span style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">3xx（已重定向）</span>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	要完成请求，您需要进一步进行操作。通常，这些状态代码是永远重定向的。google 建议每次请求时使用的重定向要少于 5 个。\r\n</p>\r\n<div style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	<div>\r\n		<a></a>&nbsp;\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span style=\"line-height:21px;\"><span>300</span></span><span style=\"line-height:21px;\">（多种选择）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器根据请求可执行多种操作。服务器可根据请求者&nbsp;(user&nbsp;agent)&nbsp;来选择一项操作，或提供操作列表供请求者选择。 &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>301</span></span><span style=\"line-height:21px;\">（永久移动）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求的网页已被永久移动到新位置。服务器返回此响应（作为对&nbsp;get&nbsp;或&nbsp;head&nbsp;请求的响应）时，会自动将请求者转到新位置。您应使用此代码通知&nbsp;googlebot&nbsp;某个网页或网站已被永久移动到新位置。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>302</span></span><span style=\"line-height:21px;\">（临时移动）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器目前正从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。此代码与响应&nbsp;get&nbsp;和&nbsp;head&nbsp;请求的&nbsp;</span><span style=\"line-height:21px;\"><span>301</span></span><span style=\"line-height:21px;\">&nbsp;代码类似，会自动将请求者转到不同的位置。但由于&nbsp;googlebot&nbsp;会继续抓取原有位置并将其编入索引，因此您不应使用此代码来通知&nbsp;googlebot&nbsp;某个页面或网站已被移动。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>303</span></span><span style=\"line-height:21px;\">（查看其他位置）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当请求者应对不同的位置进行单独的&nbsp;get&nbsp;请求以检索响应时，服务器会返回此代码。对于除&nbsp;head&nbsp;请求之外的所有请求，服务器会自动转到其他位置。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>304</span></span><span style=\"line-height:21px;\">（未修改）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;自从上次请求后，请求的网页未被修改过。服务器返回此响应时，不会返回网页内容。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>305</span></span><span style=\"line-height:21px;\">（使用代理）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求者只能使用代理访问请求的网页。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>307</span></span><span style=\"line-height:21px;\">（临时重定向）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器目前正从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。此代码与响应&nbsp;get&nbsp;和&nbsp;head&nbsp;请求的&nbsp;</span><span style=\"line-height:21px;\"><span>301</span></span><span style=\"line-height:21px;\">&nbsp;代码类似，会自动将请求者转到不同的位置。但由于&nbsp;googlebot&nbsp;会继续抓取原有位置并将其编入索引，因此您不应使用此代码来通知&nbsp;googlebot&nbsp;某个页面或网站已被移动。&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">&nbsp;</span><span style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">4xx（请求错误）</span>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	这些状态代码表示，请求可能出错，已妨碍了服务器对请求的处理。\r\n</p>\r\n<div style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	<div>\r\n		<a></a>&nbsp;\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span style=\"line-height:21px;\"><span>400</span></span><span style=\"line-height:21px;\">（错误请求）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器不理解请求的语法。 &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>401</span></span><span style=\"line-height:21px;\">（未授权）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求要求进行身份验证。登录后，服务器可能会返回对页面的此响应。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>403</span></span><span style=\"line-height:21px;\">（已禁止）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器拒绝请求。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>404</span></span><span style=\"line-height:21px;\">（未找到）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器找不到请求的网页。例如，如果请求是针对服务器上不存在的网页进行的，那么，服务器通常会返回此代码。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>405</span></span><span style=\"line-height:21px;\">（方法禁用）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;禁用请求中所指定的方法。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>406</span></span><span style=\"line-height:21px;\">（不接受）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;无法使用请求的内容特性来响应请求的网页。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>407</span></span><span style=\"line-height:21px;\">（需要代理授权）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此状态代码与&nbsp;</span><span style=\"line-height:21px;\"><span>401</span></span><span style=\"line-height:21px;\">（未授权）类似，但却指定了请求者应当使用代理进行授权。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>408</span></span><span style=\"line-height:21px;\">（请求超时）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器等候请求时超时。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>409</span></span><span style=\"line-height:21px;\">（冲突）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器在完成请求时发生冲突。服务器必须包含有关响应中所发生的冲突的信息。服务器在响应与前一个请求相冲突的&nbsp;put&nbsp;请求时可能会返回此代码，同时会提供两个请求的差异列表。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>410</span></span><span style=\"line-height:21px;\">（已删除）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果请求的资源已被永久删除，那么，服务器会返回此响应。该代码与&nbsp;</span><span style=\"line-height:21px;\"><span>404</span></span><span style=\"line-height:21px;\">（未找到）代码类似，但在资源以前有但现在已经不复存在的情况下，有时会替代&nbsp;</span><span style=\"line-height:21px;\"><span>404</span></span><span style=\"line-height:21px;\">&nbsp;代码出现。如果资源已被永久删除，那么，您应当使用&nbsp;</span><span style=\"line-height:21px;\"><span>301</span></span><span style=\"line-height:21px;\">&nbsp;代码指定该资源的新位置。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>411</span></span><span style=\"line-height:21px;\">（需要有效长度）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器不会接受包含无效内容长度标头字段的请求。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>412</span></span><span style=\"line-height:21px;\">（未满足前提条件）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器未满足请求者在请求中设置的其中一个前提条件。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>413</span></span><span style=\"line-height:21px;\">（请求实体过大）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器无法处理请求，因为请求实体过大，已超出服务器的处理能力。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>414</span></span><span style=\"line-height:21px;\">（请求的&nbsp;uri&nbsp;过长）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求的&nbsp;uri（通常为网址）过长，服务器无法进行处理。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>415</span></span><span style=\"line-height:21px;\">（不支持的媒体类型）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求的格式不受请求页面的支持。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>416</span></span><span style=\"line-height:21px;\">（请求范围不符合要求）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果请求是针对网页的无效范围进行的，那么，服务器会返回此状态代码。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>417</span></span><span style=\"line-height:21px;\">（未满足期望值）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器未满足”期望”请求标头字段的要求。&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">&nbsp;</span><span style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">5xx（服务器错误）</span>\r\n<p style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	这些状态代码表示，服务器在尝试处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。\r\n</p>\r\n<div style=\"color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;\">\r\n	<div>\r\n		<a></a>&nbsp;\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span style=\"line-height:21px;\"><span>500</span></span><span style=\"line-height:21px;\">（服务器内部错误）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器遇到错误，无法完成请求。 &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>501</span></span><span style=\"line-height:21px;\">（尚未实施）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器不具备完成请求的功能。例如，当服务器无法识别请求方法时，服务器可能会返回此代码。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>502</span></span><span style=\"line-height:21px;\">（错误网关）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器作为网关或代理，从上游服务器收到了无效的响应。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>503</span></span><span style=\"line-height:21px;\">（服务不可用）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;目前无法使用服务器（由于超载或进行停机维护）。通常，这只是一种暂时的状态。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>504</span></span><span style=\"line-height:21px;\">（网关超时）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器作为网关或代理，未及时从上游服务器接收请求。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style=\"line-height:21px;\"><span>505</span></span><span style=\"line-height:21px;\">（http&nbsp;版本不受支持）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器不支持请求中所使用的&nbsp;http&nbsp;协议版本。&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\'','2017-08-25 13:15:36'),(106,'./up_image/img_59a044436946f.jpg',0,'浅谈http中get与post的区别','张国福','http定义了与服务器交互的不同方法，最基本的方法有4种，分别是get，post，put，delet',50,'\'<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　<span style=\"line-height:1.8;color:#0000ff;\"><span style=\"line-height:1.8;font-size:large;\"><b>1</b></span>.根据http规范，get用于信息获取，而且应该是安全的和幂等的</span>。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　(1).所谓安全的意味着该操作用于获取信息而非修改信息。换句话说，get 请求一般不应产生副作用。就是说，它仅仅是获取资源信息，就像数据库查询一样，不会修改，增加数据，不会影响资源的状态。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　* 注意：这里安全的含义仅仅是指是非修改信息。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　(2).幂等的意味着对同一url的多个请求应该返回同样的结果。这里我再解释一下<b><span style=\"line-height:1.8;color:#0000ff;\">幂等</span></b>这个概念：\r\n</p>\r\n<div style=\"background-color:#f5f5f5;border:1px solid #cccccc;padding:5px;margin:5px 0px;font-family:&quot;\">\r\n	<div>\r\n		<span style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n<span style=\"line-height:1.5 !important;\">　　<b><span style=\"color:#0000ff;line-height:1.5 !important;\">幂等</span></b>（idempotent、idempotence）是一个数学或计算机学概念，常见于抽象代数中。<br />\r\n　　幂等有一下几种定义：<br />\r\n　　对于单目运算，如果一个运算对于在范围内的所有的一个数多次进行该运算所得的结果和进行一次该运算所得的结果是一样的，那么我们就称该运算是幂等的。比如绝对值运算就是一个例子，在实数集中，有<span style=\"color:#0000ff;line-height:1.5 !important;\">abs(a)</span></span><span style=\"color:#0000ff;line-height:1.5 !important;\">=</span><span style=\"line-height:1.5 !important;\"><span style=\"color:#0000ff;line-height:1.5 !important;\">abs(abs(a))</span>。<br />\r\n　　对于双目运算，则要求当参与运算的两个值是等值的情况下，如果满足运算结果与参与运算的两个值相等，则称该运算幂等，如求两个数的最大值的函数，有在在实数集中幂等，即<span style=\"color:#0000ff;line-height:1.5 !important;\">max(x,x)&nbsp;</span></span><span style=\"color:#0000ff;line-height:1.5 !important;\">=</span><span style=\"line-height:1.5 !important;\"><span style=\"color:#0000ff;line-height:1.5 !important;\">&nbsp;x</span>。</span>\r\n	<div>\r\n		<span style=\"line-height:1.5 !important;\"><a><img src=\"http://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span>\r\n	</div>\r\n</div>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	看完上述解释后，应该可以理解get幂等的含义了。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　但在实际应用中，以上2条规定并没有这么严格。引用别人文章的例子：比如，新闻站点的头版不断更新。虽然第二次请求会返回不同的一批新闻，该操作仍然被认为是安全的和幂等的，因为它总是返回当前的新闻。从根本上说，如果目标是当用户打开一个链接时，他可以确信从自身的角度来看没有改变资源即可。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　<span style=\"line-height:1.8;color:#0000ff;\"><span style=\"line-height:1.8;font-size:large;\"><b>2</b></span>.</span><span style=\"line-height:1.8;color:#0000ff;\">根据http规范，post表示可能修改变服务器上的资源的请求</span>。继续引用上面的例子：还是新闻以网站为例，读者对新闻发表自己的评论应该通过post实现，因为在评论提交后站点的资源已经不同了，或者说资源被修改了。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　上面大概说了一下http规范中get和post的一些原理性的问题。但在实际的做的时候，很多人却没有按照http规范去做，导致这个问题的原因有很多，比如说：\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　<span style=\"line-height:1.8;font-size:large;\"><b>1</b></span>.很多人贪方便，更新资源时用了get，因为用post必须要到form（表单），这样会麻烦一点。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　<span style=\"line-height:1.8;font-size:large;\"><b>2</b></span>.对资源的增，删，改，查操作，其实都可以通过get/post完成，不需要用到put和delete。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　<span style=\"line-height:1.8;font-size:large;\"><b>3</b></span>.另外一个是，早期的web mvc框架设计者们并<span style=\"line-height:1.8;color:#ff0000;\">没有有意识地将url当作抽象的资源来看待和设计</span>，所以导致一个比较严重的问题是传统的web mvc框架基本上都只支持get和post两种http方法，而不支持put和delete方法。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;　　* 简单解释一下mvc：mvc本来是存在于desktop程序中的，m是指数据模型，v是指用户界面，c则是控制器。使用mvc的目的是将m和v的实现代码分离，从而使同一个程序可以使用不同的表现形式。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　以上3点典型地描述了老一套的风格（没有严格遵守http规范），随着架构的发展，现在出现rest(representational state transfer)，一套支持http规范的新风格，这里不多说了，可以参考《restful web services》。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　说完原理性的问题，我们再从<span style=\"line-height:1.8;color:#0000ff;\">表面现像上面看看get和post的区别</span>：\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　<span style=\"line-height:1.8;font-size:large;\"><b>1</b></span>.get请求的数据会附在url之后（就是把数据放置在http协议头中），以?分割url和传输数据，参数之间以&amp;相连，如：login.action?name=hyddd&amp;password=idontknow&amp;verify=%e4%bd%a0%e5%a5%bd。如果数据是英文字母/数字，原样发送，如果是空格，转换为+，如果是中文/其他字符，则直接把字符串用base64加密，得出如：%e4%bd%a0%e5%a5%bd，其中％xx中的xx为该符号以16进制表示的ascii。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　post把提交的数据则放置在是http包的包体中。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　<span style=\"line-height:1.8;font-size:large;\"><b>2</b></span>.\"get方式提交的数据最多只能是1024字节，理论上post没有限制，可传较大量的数据，iis4中最大为80kb，iis5中为100kb\"？？！\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　以上这句是我从其他文章转过来的，其实这样说是错误的，不准确的：\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　(1).首先是\"get方式提交的数据最多只能是1024字节\"，因为get是通过url提交数据，那么get可提交的数据量就跟url的长度有直接关系了。而实际上，<span style=\"line-height:1.8;color:#0000ff;\">url不存在参数上限的问题</span>，<span style=\"line-height:1.8;color:#0000ff;\">http协议规范没有对url长度进行限制</span>。这个限制是特定的浏览器及服务器对它的限制。ie对url长度的限制是2083字节(2k+35)。对于其他浏览器，如netscape、firefox等，理论上没有长度限制，其限制取决于操作系统的支持。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　注意这是限制是整个url长度，而不仅仅是你的参数值数据长度。[见参考资料5]\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　(2).理论上讲，<span style=\"line-height:1.8;color:#0000ff;\">post是没有大小限制的</span>，<span style=\"line-height:1.8;color:#0000ff;\">http协议规范也没有进行大小限制</span>，说“post数据量存在80k/100k的大小限制”是不准确的，post数据是没有限制的，起限制作用的是服务器的处理程序的处理能力。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　对于asp程序，request对象处理每个表单域时存在100k的数据长度限制。但如果使用request.binaryread则没有这个限制。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　由这个延伸出去，对于iis 6.0，微软出于安全考虑，加大了限制。我们还需要注意：\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　　　 1).iis 6.0默认asp post数据量最大为200kb，每个表单域限制是100kb。<br />\r\n　　　　 2).iis 6.0默认上传文件的最大大小是4mb。<br />\r\n　　　　 3).iis 6.0默认最大请求头是16kb。<br />\r\n　　iis 6.0之前没有这些限制。[见参考资料5]\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　所以上面的80k，100k可能只是默认值而已(注：关于iis4和iis5的参数，我还没有确认)，但肯定是可以自己设置的。由于每个版本的iis对这些参数的默认值都不一样，具体请参考相关的iis配置文档。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　<span style=\"line-height:1.8;font-size:large;\"><b>3</b></span>.在asp中，服务端获取get请求参数用request.querystring，获取post请求参数用request.form。在jsp中，用request.getparameter(\\\"xxxx\\\")来获取，虽然jsp中也有request.getquerystring()方法，但使用起来比较麻烦，比如：传一个test.jsp?name=hyddd&amp;password=hyddd，用request.getquerystring()得到的是：name=hyddd&amp;password=hyddd。在php中，可以用$_get和$_post分别获取get和post中的数据，而$_request则可以获取get和post两种请求中的数据。值得注意的是，jsp中使用request和php中使用$_request都会有隐患，这个下次再写个文章总结。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　<span style=\"line-height:1.8;font-size:medium;\"><b>4</b></span>.post的安全性要比get的安全性高。注意：这里所说的安全性和上面get提到的“安全”不是同个概念。上面“安全”的含义仅仅是不作数据修改，而这里安全的含义是真正的security的含义，比如：通过get提交数据，用户名和密码将明文出现在url上，因为(1)登录页面有可能被浏览器缓存，(2)其他人查看浏览器的历史纪录，那么别人就可以拿到你的账号和密码了，除此之外，使用get提交数据还可能会造成cross-site request forgery攻击。\r\n</p>\r\n<p style=\"color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;\">\r\n	　　总结一下，<span style=\"line-height:1.8;color:#0000ff;\">get</span>是向服务器发索取数据的一种<span style=\"line-height:1.8;color:#0000ff;\">请求</span>，而<span style=\"line-height:1.8;color:#0000ff;\">post</span>是向服务器提交数据的一种<span style=\"line-height:1.8;color:#0000ff;\">请求</span>，在form（表单）中，method默认为\"get\"，实质上，get和post只是发送机制不同，并不是一个取一个发！\r\n</p>\'','2017-08-25 15:37:39'),(111,'./up_image/img_59a3a733657f2.jpg',0,'http post get 本质区别详解 (转)','张国福','请求类型 三种最常见的请求类型是：get，post 和 head',50,'\'<p style=\"font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	请求类型<br />\r\n三种最常见的请求类型是：get，post 和 head\r\n</p>\r\n<p style=\"font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	get：获取一个文档<br />\r\n大部分被传输到浏览器的html，images，js，css, … 都是通过get方法发出请求的。它是获取数据的主要方法。\r\n</p>\r\n<p style=\"font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	例如，要获取nettuts+ 的文章，http request的第一行通常看起来是这样的：\r\n</p>\r\n<p style=\"font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	get /tutorials/other/top-20-mysql-best-practices/ http/1.1\r\n</p>\r\n<p style=\"font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	一旦html加载完成，浏览器将会发送get 请求去获取图片，就像下面这样：\r\n</p>\r\n<p style=\"font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	get /wp-content/themes/tuts_theme/images/header_bg_tall.png http/1.1\r\n</p>\r\n<p style=\"font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"color:#ff0000;\"><strong>一 原理区别</strong></span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp;&nbsp;&nbsp; 一般在浏览器中输入网址访问资源都是通过get方式；在form提交中，可以通过method指定提交方式为get或者post，默认为get提交\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	http定义了与服务器交互的不同方法，最基本的方法有4种，分别是<span style=\"color:#ff0000;\"><strong>get，post，put，delete</strong></span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	url全称是资源描述符，我们可以这样认 为：一个url地址，它用于描述一个网络上的资源，而http中的get，post，put，delete就对应着对这个资源的<span style=\"color:#ff6600;\">查</span>&nbsp;，<span style=\"color:#ff6600;\">改</span>&nbsp;，<span style=\"color:#ff6600;\">增</span>&nbsp;，<span style=\"color:#ff6600;\">删</span>&nbsp;4个操作。到这里，大家应该有个大概的了解了，get一般用于<span style=\"color:#ff6600;\">获取/查询</span>&nbsp;资源信息，而post一般用于<span style=\"color:#ff6600;\">更新</span>&nbsp;资源信息(<span style=\"color:#ff0000;\"><strong>个人认为这是get和post的本质区别，也是协议设计者的本意，其它区别都是具体表现形式的差异</strong>&nbsp;</span>)。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　<span style=\"color:#0000ff;\">根据http规范，get用于信息获取，而且应该是安全的和幂等的</span>&nbsp;。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　1.所谓安全的意味着该操作用于获取信息而非修改信息。换句话说，get请求一般不应产生副作用。就是说，它仅仅是获取资源信息，就像数据库查询一样，不会修改，增加数据，不会影响资源的状态。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　* 注意：这里安全的含义仅仅是指是非修改信息。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　2.幂等的意味着对同一url的多个请求应该返回同样的结果。这里我再解释一下<strong><span style=\"color:#0000ff;\">幂等</span>&nbsp;</strong>这个概念：\r\n</p>\r\n<div style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"color:#000000;\">　　<strong><span style=\"color:#0000ff;\">幂等</span>&nbsp;</strong>（idempotent、idempotence）是一个数学或计算机学概念，常见于抽象代数中。<br />\r\n　　<span style=\"background-color:#00ffff;\">幂等有以下几种定义：<br />\r\n　　对于单目运算，如果一个运算对于在范围内的所有的一个数多次进行该运算所得的结果和进行一次该运算所得的结果是一样的，那么我们就称该运算是幂等的。比如绝对值运算就是一个例子，在实数集中，有<span style=\"color:#0000ff;\">abs(a)</span>&nbsp;</span></span><span style=\"background-color:#00ffff;\"><span style=\"color:#0000ff;\">=</span><span style=\"color:#000000;\"><span style=\"color:#0000ff;\">abs(abs(a))</span>&nbsp;。<br />\r\n　　对于双目运算，则要求当参与运算的两个值是等值的情况下，如果满足运算结果与参与运算的两个值相等，则称该运算幂等，如求两个数的最大值的函数，有在在实数集中幂等，即<span style=\"color:#0000ff;\">max(x,x)&nbsp;</span>&nbsp;</span><span style=\"color:#0000ff;\">=</span>&nbsp;<span style=\"color:#000000;\"><span style=\"color:#0000ff;\">&nbsp;x</span>&nbsp;。</span></span>\r\n</div>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"background-color:#00ffff;\">看完上述解释后，应该可以理解get幂等的含义了。</span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　但在实际应用中，以上2条规定并没有这么严格。引用别人文章的例子：比如，新闻站点的头版不断更新。虽然第二次请求会返回不同的一批新闻，该操 作仍然被认为是安全的和幂等的，因为它总是返回当前的新闻。从根本上说，如果目标是当用户打开一个链接时，他可以确信从自身的角度来看没有改变资源即可。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　<span style=\"color:#0000ff;\">根据http规范，post表示可能修改变服务器上的资源的请求</span>&nbsp;。继续引用上面的例子：还是新闻以网站为例，读者对新闻发表自己的评论应该通过post实现，因为在评论提交后站点的资源已经不同了，或者说资源被修改了。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　上面大概说了一下http规范中，get和post的一些原理性的问题。但在实际的做的时候，很多人却没有按照http规范去做，导致这个问题的原因有很多，比如说：\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　1.很多人贪方便，更新资源时用了get，因为用post必须要到form（表单），这样会麻烦一点。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　2.对资源的增，删，改，查操作，其实都可以通过get/post完成，不需要用到put和delete。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　3.另外一个是，早期的但是web mvc框架设计者们并<span style=\"color:#ff6600;\">没有有意识地将url当作抽象的资源来看待和设计</span>&nbsp;。还有一个较为严重的问题是传统的web mvc框架基本上都只支持get和post两种http方法，而不支持put和delete方法。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp;　　* 简单解释一下mvc：mvc本来是存在于desktop程序中的，m是指数据模型，v是指用户界面，c则是控制器。使用mvc的目的是将m和v的实现代码分离，从而使同一个程序可以使用不同的表现形式。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　以上3点典型地描述了老一套的风格（没有严格遵守http规范），随着架构的发展，现在出现rest(representational state transfer)，一套支持http规范的新风格，这里不多说了，可以参考《restful web services》。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<strong><span style=\"color:#ff0000;\">二 表现形式区别</span></strong>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp;&nbsp; 搞清了两者的原理区别，我们再来看一下他们实际应用中的区别：\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp;&nbsp;&nbsp; 为了理解两者在传输过程中的不同，我们先看一下http协议的格式：\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp;&nbsp;&nbsp; http请求：\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;\">\r\n	&lt;request line&gt;\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;\">\r\n	&lt;headers&gt;\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;\">\r\n	<span style=\"color:red;\">&lt;blank line&gt;</span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;\">\r\n	&lt;request-body&gt;]\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;\">\r\n	在http请求中，第一行必须是一个请求行（request line），用来说明请求类型、要访问的资源以及使用的http版本。紧接着是一个首部（header）小节，用来说明服务器要使用的附加信息。在首部之 后是一个空行，再此之后可以添加任意的其他数据[称之为主体（body）]。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;\">\r\n	get与post方法实例：<br />\r\nget&nbsp;<span style=\"color:#ff0000;\">/books/?sex=man&amp;name=professional</span>&nbsp;http/1.1<br />\r\nhost: www.wrox.com<br />\r\nuser-agent: mozilla/5.0 (windows; u; windows nt 5.1; en-us; rv:1.7.6)<br />\r\ngecko/20050225 firefox/1.0.1<br />\r\nconnection: keep-alive<br />\r\n<br />\r\npost / http/1.1<br />\r\nhost: www.wrox.com<br />\r\nuser-agent: mozilla/5.0 (windows; u; windows nt 5.1; en-us; rv:1.7.6)<br />\r\ngecko/20050225 firefox/1.0.1<br />\r\ncontent-type: application/x-www-form-urlencoded<br />\r\ncontent-length: 40<br />\r\nconnection: keep-alive<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; （----此处空一行----）<br />\r\n<span style=\"color:#ff0000;\">name=professional%20ajax&amp;publisher=wiley</span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;\">\r\n	有了以上对http请求的了解和示例，我们再来看两种提交方式的区别：\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp;&nbsp; （1）get提交，请求的数据会附在url之后（就是把数据放置在<span style=\"line-height:26px;\">请求行（request line）中</span>），以?分割url和传输数据，多个参数用&amp;连接；例如：login.action?name=hyddd&amp;password=idontknow&amp;verify=%e4%bd%a0 %e5%a5%bd。<span style=\"color:#232323;font-family:verdana, arial, helvetica, sans-serif;line-height:28px;background-color:#faffff;\">url的编码格式采用的是ascii码，而不是unicode，这也就是说你不能在url中包含任何非ascii字符，所有非ascii字符均需要编码再传输，关于url编码可参考：<a target=\"_blank\" href=\"http://kb.cnblogs.com/page/133765/\">http://kb.cnblogs.com/page/133765/</a></span>。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	　　post提交：把提交的数据放置在是http包的包体中。上文示例中红色字体标明的就是实际的传输数据\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp;&nbsp;&nbsp;&nbsp; 因此，get提交的数据会在地址栏中显示出来，而post提交，地址栏不会改变\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp; &nbsp; (2)传输数据的大小：首先声明：http协议没有对传输的数据大小进行限制，<span style=\"font-family:宋体;\">http协议规范也没有对url长度进行限制。</span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"font-family:宋体;\">而在实际开发中存在的限制主要有：</span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"font-family:宋体;\">get:特定浏览器和服务器对url长度有限制，例如ie对url长度的限制是2083字节(2k+35)。对于其他浏览器，如netscape、firefox等，理论上没有长度限制，其限制取决于操作系统的支持。</span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"font-family:宋体;\">因此对于get提交时，传输数据就会受到url长度的限制。</span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"font-family:宋体;\">post:由于不是通过url传值，理论上数据不受限。但实际各个web服务器会规定对post提交数据大小进行限制，apache、iis6都有各自的配置。</span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"font-family:宋体;\">&nbsp;(3)安全性：</span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	.post的安全性要比get的安全性高。注意：这里所说的安全性和上面get提到的“安全”不是同个概念。上面“安全”的含义仅仅是不作数据修改，而这 里安全的含义是真正的security的含义，比如：通过get提交数据，用户名和密码将明文出现在url上，因为(1)登录页面有可能被浏览器缓存， (2)其他人查看浏览器的历史纪录，那么别人就可以拿到你的账号和密码了，除此之外，使用get提交数据还可能会造成cross-site request forgery攻击\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	（4）http get,post,soap协议都是在http上运行的<br />\r\n1）get：请求参数是作为一个key/value对的序列（查询字符串）附加到url上的<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 查询字符串的长度受到web浏览器和web服务器的限制（如ie最多支持2048个字符），不适合传输大型数据集同时，它很不安全<br />\r\n2）post：请求参数是在http标题的一个不同部分（名为entity body）传输的，这一部分用来传输表单信息，因此必须将content-type设置为:application/x-www-form- urlencoded。post设计用来支持web窗体上的用户字段，其参数也是作为key/value对传输。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 但是：它不支持复杂数据类型，因为post没有定义传输数据结构的语义和规则。<br />\r\n3）soap：是http post的一个专用版本，遵循一种特殊的xml消息格式<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; content-type设置为: text/xml&nbsp;&nbsp; 任何数据都可以xml化\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"color:#ff0000;\"><strong><span style=\"font-family:宋体;\">三 http响应</span>&nbsp;</strong></span><br />\r\n1．http响应格式：\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&lt;status line&gt;<br />\r\n&lt;headers&gt;<br />\r\n&lt;blank line&gt;<br />\r\n[&lt;response-body&gt;]<br />\r\n<br />\r\n在响应中唯一真正的区别在于第一行中用状态信息代替了请求信息。状态行（status line）通过提供一个状态码来说明所请求的资源情况。&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;http响应实例：<br />\r\n<br />\r\nhttp/1.1 200 ok<br />\r\ndate: sat, 31 dec 2005 23:59:59 gmt<br />\r\ncontent-type: text/html;charset=iso-8859-1<br />\r\ncontent-length: 122<br />\r\n＜html＞<br />\r\n＜head＞<br />\r\n＜title＞wrox homepage＜/title＞<br />\r\n＜/head＞<br />\r\n＜body＞<br />\r\n＜!-- body goes here --＞<br />\r\n＜/body＞<br />\r\n＜/html＞<br />\r\n2．最常用的状态码有：<br />\r\n<br />\r\n◆200 (ok): 找到了该资源，并且一切正常。<br />\r\n◆304 (not modified): 该资源在上次请求之后没有任何修改。这通常用于浏览器的缓存机制。<br />\r\n◆401 (unauthorized): 客户端无权访问该资源。这通常会使得浏览器要求用户输入用户名和密码，以登录到服务器。<br />\r\n◆403 (forbidden): 客户端未能获得授权。这通常是在401之后输入了不正确的用户名或密码。<br />\r\n◆404 (not found): 在指定的位置不存在所申请的资源。\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	&nbsp;\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<span style=\"color:#ff0000;\"><strong>四 完整示例：</strong></span>\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	例子：\r\n</p>\r\n<p style=\"font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;\">\r\n	<br />\r\n<span style=\"color:#ff0000;\"><strong>http get</strong>&nbsp;<br />\r\n</span><br />\r\n发送<br />\r\n<br />\r\nget /demowebservices2.8/service.asmx/cancelorder?userid=string&amp;pwd=string&amp;orderconfirmation=string http/1.1<br />\r\nhost: api.efxnow.com<br />\r\n<br />\r\n回复<br />\r\n<br />\r\nhttp/1.1 200 ok<br />\r\ncontent-type: text/xml; charset=utf-8<br />\r\ncontent-length: length<br />\r\n<br />\r\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;<br />\r\n&lt;objplaceorderresponse xmlns=\"https://api.efxnow.com/webservices2.3\"&gt;<br />\r\n&lt;success&gt;boolean&lt;/success&gt;<br />\r\n&lt;errordescription&gt;string&lt;/errordescription&gt;<br />\r\n&lt;errornumber&gt;int&lt;/errornumber&gt;<br />\r\n&lt;customerorderreference&gt;long&lt;/customerorderreference&gt;<br />\r\n&lt;orderconfirmation&gt;string&lt;/orderconfirmation&gt;<br />\r\n&lt;customerdealref&gt;string&lt;/customerdealref&gt;<br />\r\n&lt;/objplaceorderresponse&gt;<br />\r\n<br />\r\n<br />\r\n<br />\r\n<span style=\"color:#ff0000;\"><strong>http post</strong>&nbsp;</span><br />\r\n<br />\r\n发送<br />\r\n<br />\r\npost /demowebservices2.8/service.asmx/cancelorder http/1.1<br />\r\nhost: api.efxnow.com<br />\r\ncontent-type: application/x-www-form-urlencoded<br />\r\ncontent-length: length<br />\r\n<br />\r\nuserid=string&amp;pwd=string&amp;orderconfirmation=string<br />\r\n<br />\r\n回复<br />\r\n<br />\r\nhttp/1.1 200 ok<br />\r\ncontent-type: text/xml; charset=utf-8<br />\r\ncontent-length: length<br />\r\n<br />\r\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;<br />\r\n&lt;objplaceorderresponse xmlns=\"https://api.efxnow.com/webservices2.3\"&gt;<br />\r\n&lt;success&gt;boolean&lt;/success&gt;<br />\r\n&lt;errordescription&gt;string&lt;/errordescription&gt;<br />\r\n&lt;errornumber&gt;int&lt;/errornumber&gt;<br />\r\n&lt;customerorderreference&gt;long&lt;/customerorderreference&gt;<br />\r\n&lt;orderconfirmation&gt;string&lt;/orderconfirmation&gt;<br />\r\n&lt;customerdealref&gt;string&lt;/customerdealref&gt;<br />\r\n&lt;/objplaceorderresponse&gt;<br />\r\n<br />\r\n<br />\r\n<br />\r\n<span style=\"color:#ff0000;\"><strong>soap 1.2</strong>&nbsp;</span><br />\r\n<br />\r\n发送<br />\r\n<br />\r\npost /demowebservices2.8/service.asmx http/1.1<br />\r\nhost: api.efxnow.com<br />\r\ncontent-type: application/soap+xml; charset=utf-8<br />\r\ncontent-length: length<br />\r\n<br />\r\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;<br />\r\n&lt;soap12:envelope xmlns:xsi=\"http://www.w3.org/2001/xmlschema-instance\" xmlns:xsd=\"http://www.w3.org/2001/xmlschema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"&gt;<br />\r\n&lt;soap12:body&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;cancelorder xmlns=\"https://api.efxnow.com/webservices2.3\"&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;userid&gt;string&lt;/userid&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;pwd&gt;string&lt;/pwd&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;orderconfirmation&gt;string&lt;/orderconfirmation&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/cancelorder&gt;<br />\r\n&lt;/soap12:body&gt;<br />\r\n&lt;/soap12:envelope&gt;<br />\r\n<br />\r\n回复<br />\r\n<br />\r\nhttp/1.1 200 ok<br />\r\ncontent-type: application/soap+xml; charset=utf-8<br />\r\ncontent-length: length<br />\r\n<br />\r\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;<br />\r\n&lt;soap12:envelope xmlns:xsi=\"http://www.w3.org/2001/xmlschema-instance\" xmlns:xsd=\"http://www.w3.org/2001/xmlschema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\"&gt;<br />\r\n&lt;soap12:body&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;cancelorderresponse xmlns=\"https://api.efxnow.com/webservices2.3\"&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;cancelorderresult&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;success&gt;boolean&lt;/success&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;errordescription&gt;string&lt;/errordescription&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;errornumber&gt;int&lt;/errornumber&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;customerorderreference&gt;long&lt;/customerorderreference&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;orderconfirmation&gt;string&lt;/orderconfirmation&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;customerdealref&gt;string&lt;/customerdealref&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/cancelorderresult&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/cancelorderresponse&gt;<br />\r\n&lt;/soap12:body&gt;<br />\r\n&lt;/soap12:envelope&gt;\r\n</p>\'','2017-08-28 05:16:35'),(112,'./up_image/img_59a3a8699eb54.jpg',0,'php无限极递归代码','张国福','',50,'\'&lt;?php<br />\r\n$a=@mysql_connect(\"localhost\",\"root\",\"root\");<br />\r\nif (!$a) {<br />\r\n<span> </span>echo \"mysql is wrong\";<br />\r\n}<br />\r\n$b=@mysql_select_db(\"test\");<br />\r\nif (!$b) {<br />\r\n<span> </span>echo \"db is wrong\";<br />\r\n}<br />\r\n<br />\r\n<br />\r\nmysql_query(\"set names utf8\");<br />\r\n$sql=\"select * from test\";<br />\r\n$res=mysql_query($sql);<br />\r\n&nbsp;// var_dump($res);<br />\r\n$arrs=array();<br />\r\nwhile ($row=mysql_fetch_assoc($res)) {<br />\r\n<span> </span>$arrs[]=$row;<br />\r\n}<br />\r\n&nbsp;// print_r($arrs);<br />\r\n<br />\r\n<br />\r\nfunction digui($arrs,$level=0,$pid=0){<br />\r\n<span> </span>static $re_arr=array();<br />\r\n<span> </span>foreach ($arrs as &nbsp;$arr) {<br />\r\n<span> </span>if ($arr[\'pid\']==$pid) {<br />\r\n<br />\r\n<br />\r\n<span> </span>$arr[\'level\']=$level;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $re_arr[]=$arr;<br />\r\n<span> </span>digui($arrs,$level+1,$arr[\'id\']);<br />\r\n<span> </span>}<br />\r\n<br />\r\n<br />\r\n<span> </span>}<br />\r\n&nbsp; &nbsp; return $re_arr;<br />\r\n<br />\r\n<br />\r\n<span> </span>}<br />\r\n<br />\r\n<br />\r\n<span> </span>$l_arr=digui($arrs);<br />\r\nprint_r($l_arr);<br />\r\n?&gt;<br />\r\n&lt;!doctype html&gt;<br />\r\n&lt;html lang=\"en\"&gt;<br />\r\n&lt;head&gt;<br />\r\n&nbsp; &nbsp; &lt;meta charset=\"utf-8\"&gt;<br />\r\n&nbsp; &nbsp; &lt;meta name=\"viewport\"<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"&gt;<br />\r\n&nbsp; &nbsp; &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;<br />\r\n&nbsp; &nbsp; &lt;title&gt;document&lt;/title&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;table align=\"center\" width=\"600px\" bgcolor=\"pink\"&gt;<br />\r\n&nbsp; &nbsp; &lt;?php &nbsp;foreach ($l_arr as $v){?&gt;<br />\r\n&nbsp; &nbsp; &lt;tr&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;td height=\"20px\"&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;?php echo str_repeat(\"----\",$v[\'level\'])?&gt;<br />\r\n<br />\r\n<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;?php echo $v[\'name\']?&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/td&gt;<br />\r\n&nbsp; &nbsp; &lt;/tr&gt;<br />\r\n&nbsp; &nbsp; &lt;?php &nbsp;} ?&gt;<br />\r\n&lt;/table&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\'','2017-08-28 05:21:45'),(113,'./up_image/img_59a4018ec10b7.jpg',0,'php 中字符串翻转的方法实例代码','张国福','本文主要介绍了实现php字符串翻转的方法，具有很好的参考价值',50,'\'<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	<strong>方法一（直接使用php自带函数strrev($str)）</strong>\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	print_r(strrev($str));\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	<strong>使用for循环方式,str_split($str)</strong>\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-family:monaco, menlo, consolas, &quot;width:797px;color:#333333;border-collapse:separate !important;background:none #f5f5f5 !important;border:1px solid #cccccc !important;margin:0.3em 0px !important;padding:0px !important;font-size:13px !important;\">\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"font-family:monaco, menlo, consolas, &quot;background:none #f7f7f9 !important;vertical-align:baseline !important;font-size:13px !important;color:#afafaf !important;\">\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					1\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					2\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					3\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					4\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					5\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					6\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					7\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					8\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					9\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					10\r\n				</div>\r\n			</td>\r\n			<td style=\"font-family:monaco, menlo, consolas, &quot;background:none !important;border:0px !important;vertical-align:baseline !important;font-size:13px !important;\">\r\n				<div style=\"margin:0px !important;padding:0px !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						$newarrone&nbsp;= [];//初始化一个新的数组\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;$newstrone&nbsp;=&nbsp;\'\';//初始化一个新的字符串\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;$newarrone&nbsp;=&nbsp;str_split($str);\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;$arrcount&nbsp;=&nbsp;count($newarrone);\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;for&nbsp;($i=0;&nbsp;$i&nbsp;&lt;&nbsp;$arrcount;&nbsp;$i++) {\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;$newstrone.=$newarrone[$i];\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;}\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;echo&nbsp;\"&lt;pre&gt;\";\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;print_r($newstrone);\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;echo&nbsp;\"&lt;/pre&gt;\";\r\n					</div>\r\n				</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	<strong>使用for循环方式,strlen($substr)</strong>\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-family:monaco, menlo, consolas, &quot;width:797px;color:#333333;border-collapse:separate !important;background:none #f5f5f5 !important;border:1px solid #cccccc !important;margin:0.3em 0px !important;padding:0px !important;font-size:13px !important;\">\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"font-family:monaco, menlo, consolas, &quot;background:none #f7f7f9 !important;vertical-align:baseline !important;font-size:13px !important;color:#afafaf !important;\">\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					1\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					2\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					3\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					4\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					5\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					6\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					7\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					8\r\n				</div>\r\n			</td>\r\n			<td style=\"font-family:monaco, menlo, consolas, &quot;background:none !important;border:0px !important;vertical-align:baseline !important;font-size:13px !important;\">\r\n				<div style=\"margin:0px !important;padding:0px !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						$newstrtwo&nbsp;=&nbsp;\'\';//初始化一个新的字符串\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;$arrcounttwo&nbsp;=&nbsp;strlen($str);\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;for&nbsp;($i=1;&nbsp;$i&nbsp;&lt;=&nbsp;$arrcounttwo;&nbsp;$i++) {\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;$newstrtwo.=substr($str, -$i, 1);\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;}\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;echo&nbsp;\"&lt;pre&gt;\";\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;print_r($newstrtwo).\"\\n\";\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;echo&nbsp;\"&lt;/pre&gt;\";\r\n					</div>\r\n				</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	<strong>使用for循环方式,strlen($substr)</strong>\r\n</p>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-family:monaco, menlo, consolas, &quot;width:797px;color:#333333;border-collapse:separate !important;background:none #f5f5f5 !important;border:1px solid #cccccc !important;margin:0.3em 0px !important;padding:0px !important;font-size:13px !important;\">\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"font-family:monaco, menlo, consolas, &quot;background:none #f7f7f9 !important;vertical-align:baseline !important;font-size:13px !important;color:#afafaf !important;\">\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					1\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					2\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					3\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					4\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					5\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					6\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					7\r\n				</div>\r\n				<div style=\"margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;\">\r\n					8\r\n				</div>\r\n			</td>\r\n			<td style=\"font-family:monaco, menlo, consolas, &quot;background:none !important;border:0px !important;vertical-align:baseline !important;font-size:13px !important;\">\r\n				<div style=\"margin:0px !important;padding:0px !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						$newstrthree&nbsp;=&nbsp;\'\';//初始化一个新的字符串\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						$arrcountthree&nbsp;=&nbsp;strlen($str);\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						for&nbsp;($i&nbsp;=&nbsp;$arrcountthree;&nbsp;$i&gt;=0;$i--) {\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						&nbsp;@$newstrthree.=$str[$i];\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						}\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						echo&nbsp;\"&lt;pre&gt;\";\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						print_r($newstrthree).\"\\n\";\r\n					</div>\r\n					<div style=\"margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;\">\r\n						echo&nbsp;\"&lt;/pre&gt;\";　\r\n					</div>\r\n				</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style=\"color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;\">\r\n	以上就是php 中字符串翻转的方法实例代码的详细内容，更多请关注php中文网其它相关文章！\r\n</p>\'','2017-08-28 11:42:06'),(114,'./up_image/img_59a4242ed42f6.jpg',0,'php 中字符串翻转的方法实例代码三种亲测及中文字符串翻转示例代码','张国福','php 中字符串翻转的方法实例代码三种亲测',50,'\'<!--?php<br /--> <br />\r\n<br />\r\n$str=\'abcefg\';<br />\r\necho substr($str, 0,1);<br />\r\n$str1=\'\';<br />\r\n// echo strlen($str);<br />\r\nfor ($i=1;$i&lt;=strlen($str);$i++) {&nbsp;<br />\r\n<span> </span>$str1.=substr($str, -$i,1);<br />\r\n<span> </span>// echo \"$i\";<br />\r\n}<br />\r\necho \"$str1\";<br />\r\n// for ($i=0; $i &lt; ; $i++) {&nbsp;<br />\r\n// <span> </span># code...<br />\r\n// }<br />\r\n<br />\r\n<br />\r\nfunction rev($str){<br />\r\n<span> </span>$len=strlen($str);<br />\r\n<span> </span>$str1=\"\";<br />\r\n<span> </span>for ($i=$len; $i &gt;=0 ; $i--) {&nbsp;<br />\r\n<span> </span>$str1.=substr($str, $i,1);<br />\r\n<span> </span>}<br />\r\n<span> </span>return $str1;<br />\r\n}<br />\r\n<br />\r\n<br />\r\n// echo rev($str);<br />\r\n// 注:array_pop从数组 末尾退出,array_push 将数据加载到数组末尾<br />\r\n// array_shif 从数组头部推出 &nbsp; &nbsp;array_unshift将数据加载到头部<br />\r\n$arr=str_split($str,1);<br />\r\n$str1=\"\";<br />\r\nwhile ($v=array_pop($arr)) {<br />\r\n<span> </span>$str1.= $v;<br />\r\n}<br />\r\n<br />\r\n<br />\r\n// print_r($arr1);<br />\r\necho $str1;<br />\r\n<p>\r\n	\'\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<!--?php<br /--> header(\"content-type:text/html;charset=utf-8\");<br />\r\n$str=\"我是中国的saaa\";<br />\r\n// echo \"$str\";<br />\r\n$len=mb_strlen($str);<br />\r\n// echo \"$len\";<br />\r\n// $arr=str_split($str);<br />\r\n// print_r($arr);<br />\r\n// echo mb_substr($str, 0,1);<br />\r\nfor ($i=1; $i &lt;$len+1 ; $i++) {&nbsp;<br />\r\n<span> </span><br />\r\n<span> </span>echo $i;<br />\r\n<span> </span>echo mb_substr($str,-$i,1).\"<br />\r\n\";<br />\r\n}\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	for ($i=$len-1; $i &gt;=0 ; $i--) {&nbsp;<br />\r\n<span> </span>echo mb_substr($str, $i,1);<br />\r\n<span> </span>}<br />\r\n</p>','2017-08-28 14:44:42'),(115,'./up_image/img_59a43cca69508.jpg',0,'php闭包(closure)使用详解','张国福','本篇文章介绍了，php闭包(closure)的使用介绍，需要的朋友参考下',50,'\'<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	不知不觉发现php已经出到了5.5版本，而自己一直在用php5.2，让我看起来像深山出来的小伙子一样，又土又落后。在我习惯在javascript中使用闭包之后，忽然间对php的闭包打起了兴趣。\r\n</p>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	于是乎在网上下了个wamp集成开发环境，是php5.3版本的（php5.3开始引入了闭包的特性），不得不说wamp安装使用真的很方便。简单配置了一下，开始动手。<br />\r\n&nbsp;\r\n</p>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	<strong>匿名函数<br />\r\n</strong>提到闭包就不得不想起匿名函数，也叫闭包函数（closures），貌似php闭包实现主要就是靠它。声明一个匿名函数是这样：\r\n</p>\r\n<div style=\"margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;\">\r\n	<span style=\"line-height:21.6px;font-size:12px;\"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style=\"margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;\">\r\n	<br />\r\n$func = function() {<br />\r\n<br />\r\n}; //带结束符<br />\r\n</div>\r\n<br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">可以看到，匿名函数因为没有名字，如果要使用它，需要将其返回给一个变量。匿名函数也像普通函数一样可以声明参数，调用方法也相同：</span><br />\r\n<div style=\"margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;\">\r\n	<span style=\"line-height:21.6px;font-size:12px;\"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style=\"margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;\">\r\n	<br />\r\n$func = function( $param ) {<br />\r\n&nbsp;&nbsp;&nbsp; echo $param;<br />\r\n};\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		$func( \'some string\' );\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//some string\r\n	</p>\r\n</div>\r\n<br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">顺便提一下，php在引入闭包之前，也有一个可以创建匿名函数的函数：create function，但是代码逻辑只能写成字符串，这样看起来很晦涩并且不好维护，所以很少有人用。</span><br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">&nbsp;</span>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	<strong>实现闭包<br />\r\n</strong>将匿名函数在普通函数中当做参数传入，也可以被返回。这就实现了一个简单的闭包。\r\n</p>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	<strong>下边有三个例子<br />\r\n</strong>\r\n</p>\r\n<div style=\"margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;\">\r\n	<span style=\"line-height:21.6px;font-size:12px;\"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style=\"margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;\">\r\n	<br />\r\n//例一<br />\r\n//在函数里定义一个匿名函数，并且调用它<br />\r\nfunction printstr() {<br />\r\n&nbsp;&nbsp;&nbsp; $func = function( $str ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $str;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; $func( \'some string\' );<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		printstr();\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<p>\r\n		//例二<br />\r\n//在函数中把匿名函数返回，并且调用它<br />\r\nfunction getprintstrfunc() {<br />\r\n&nbsp;&nbsp;&nbsp; $func = function( $str ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $str;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; return $func;<br />\r\n}\r\n	</p>\r\n	<p>\r\n		$printstrfunc = getprintstrfunc();<br />\r\n$printstrfunc( \'some string\' );\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<p>\r\n		<br />\r\n//例三<br />\r\n//把匿名函数当做参数传递，并且调用它<br />\r\nfunction callfunc( $func ) {<br />\r\n&nbsp;&nbsp;&nbsp; $func( \'some string\' );<br />\r\n}\r\n	</p>\r\n	<p>\r\n		$printstrfunc = function( $str ) {<br />\r\n&nbsp;&nbsp;&nbsp; echo $str;<br />\r\n};<br />\r\ncallfunc( $printstrfunc );\r\n	</p>\r\n	<p>\r\n		//也可以直接将匿名函数进行传递。如果你了解js，这种写法可能会很熟悉<br />\r\ncallfunc( function( $str ) {<br />\r\n&nbsp;&nbsp;&nbsp; echo $str;<br />\r\n} );\r\n	</p>\r\n</div>\r\n<br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">连接闭包和外界变量的关键字：use</span><br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">闭包可以保存所在代码块上下文的一些变量和值。php在默认情况下，匿名函数不能调用所在代码块的上下文变量，而需要通过使用use关键字。</span>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	换一个例子看看：\r\n</p>\r\n<div style=\"margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;\">\r\n	<span style=\"line-height:21.6px;font-size:12px;\"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style=\"margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;\">\r\n	<br />\r\nfunction getmoney() {<br />\r\n&nbsp;&nbsp;&nbsp; $rmb = 1;<br />\r\n&nbsp;&nbsp;&nbsp; $dollar = 6;<br />\r\n&nbsp;&nbsp;&nbsp; $func = function() use ( $rmb ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $dollar;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; $func();<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		getmoney();\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//1<br />\r\n//报错，找不到dorllar变量\r\n	</p>\r\n</div>\r\n<br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">可以看到，dollar没有在use关键字中声明，在这个匿名函数里也就不能获取到它，所以开发中要注意这个问题。</span><br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">&nbsp;</span>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	有人可能会想到，是否可以在匿名函数中改变上下文的变量，但我发现是不可以的：\r\n</p>\r\n<div style=\"margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;\">\r\n	<span style=\"line-height:21.6px;font-size:12px;\"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style=\"margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;\">\r\n	<br />\r\nfunction getmoney() {<br />\r\n&nbsp;&nbsp;&nbsp; $rmb = 1;<br />\r\n&nbsp;&nbsp;&nbsp; $func = function() use ( $rmb ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //把$rmb的值加1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $rmb++;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; $func();<br />\r\n&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		getmoney();\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//1<br />\r\n//1\r\n	</p>\r\n</div>\r\n<br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">啊，原来use所引用的也只不过是变量的一个副本而已。但是我想要完全引用变量，而不是复制。</span>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	要达到这种效果，其实在变量前加一个 &amp; 符号就可以了：\r\n</p>\r\n<div style=\"margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;\">\r\n	<span style=\"line-height:21.6px;font-size:12px;\"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style=\"margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;\">\r\n	<br />\r\nfunction getmoney() {<br />\r\n&nbsp;&nbsp;&nbsp; $rmb = 1;<br />\r\n&nbsp;&nbsp;&nbsp; $func = function() use ( &amp;$rmb ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //把$rmb的值加1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $rmb++;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; $func();<br />\r\n&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		getmoney();\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//1<br />\r\n//2\r\n	</p>\r\n</div>\r\n<br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">好，这样匿名函数就可以引用上下文的变量了。如果将匿名函数返回给外界，匿名函数会保存use所引用的变量，而外界则不能得到这些变量，这样形成‘闭包\'这个概念可能会更清晰一些。</span>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;\">\r\n	<strong>根据描述改变一下上面的例子：<br />\r\n</strong>\r\n</p>\r\n<div style=\"margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;\">\r\n	<span style=\"line-height:21.6px;font-size:12px;\"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style=\"margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;\">\r\n	<br />\r\nfunction getmoneyfunc() {<br />\r\n&nbsp;&nbsp;&nbsp; $rmb = 1;<br />\r\n&nbsp;&nbsp;&nbsp; $func = function() use ( &amp;$rmb ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //把$rmb的值加1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $rmb++;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; return $func;<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		$getmoney = getmoneyfunc();<br />\r\n$getmoney();<br />\r\n$getmoney();<br />\r\n$getmoney();\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//1<br />\r\n//2<br />\r\n//3\r\n	</p>\r\n</div>\r\n<br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">总结</span><br />\r\n<span style=\"font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;\">php闭包的特性并没有太大惊喜，其实用class就可以实现类似甚至强大得多的功能，更不能和js的闭包相提并论，只能期待php以后对闭包支持的改进。不过匿名函数还是挺有用的，比如在使用preg_replace_callback等之类的函数可以不用在外部声明回调函数了。</span>\'','2017-08-28 15:54:50'),(116,'./up_image/img_59a4cc3d9ec17.jpg',0,'sql书写规范','张国福','',50,'\'<div style=\"margin:20px 0px 0px;font-size:14px;font-family:arial;background-color:#ffffff;\">\r\n	<p>\r\n		<span style=\"font-size:18px;\">1.使用大小写规范提高词义识别能力</span>\r\n	</p>\r\n	<p>\r\n		&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span style=\"font-size:13px;\">a.在名称中仅适用字母，数字和下划线<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;b.列名，参数和变量等标量小写<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;c.模式对象名首字母大写</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:13px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 模式对象包括表，视图和存储过程等，在创建这些名称时，应当将首字母大写，表示为专有名称。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.保留关键字大写</span>\r\n	</p>\r\n<span style=\"font-size:13px;\"></span>\r\n	<p>\r\n		<br />\r\n<span style=\"font-size:16px;\">2.使用空格提供更好的语言标记区分</span><span style=\"font-size:16px;\"><br />\r\n</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a.等号两边使用空格\r\n	</p>\r\n	<p>\r\n		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在书写赋值语句时，应当在等号两边使用空格分隔，如set @i = 1 比 set @i=1更容易阅读&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.逗号后面使用空格\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:18px;\">3.使用缩进提高语句的逻辑层次表达能力</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:18px;\">&nbsp;&nbsp;&nbsp; &nbsp;select *<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from test<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where id=\'12\'<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; and name=\'fred\'</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:18px;\">4. 使用垂直空白道提高关键字与参数的区分能力<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select distinct custname<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; from customers as c&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; where not exists<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select *<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; from orderheader<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; where custid=customers.custid<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )</span>\r\n	</p>\r\n	<p>\r\n		<span style=\"font-size:18px;\">5.使用分组进行语句的段落划分<br />\r\n</span>&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 存在多行sql的情况下，相关语句之间可以直接换行书写，而对于两个步骤之间的语句应当间隔一个空行，需要的话 ，也可以加入一些适当\r\n	</p>\r\n	<p>\r\n		的注释语句.:\r\n	</p>\r\n	<p>\r\n		&nbsp;<br />\r\n<span style=\"font-size:16px;\">&nbsp;use test<br />\r\n&nbsp;<a href=\"http://lib.csdn.net/base/go\" target=\"_blank\">go</a></span>\r\n	</p>\r\n	<p>\r\n		<br />\r\n<span style=\"font-size:16px;\">-- 读取test表的数据<br />\r\nselect *&nbsp;<br />\r\nfrom test<br />\r\n<a href=\"http://lib.csdn.net/base/go\" target=\"_blank\">go</a><br />\r\n</span>\r\n	</p>\r\n</div>\r\n<div style=\"font-family:arial, console, verdana, &quot;background-color:#ffffff;\">\r\n	<a href=\"http://blog.csdn.net/fengqingtao2008/article/details/6924613#\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/fengqingtao2008/article/details/6924613#\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/fengqingtao2008/article/details/6924613#\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/fengqingtao2008/article/details/6924613#\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/fengqingtao2008/article/details/6924613#\" target=\"_blank\"></a><a href=\"http://blog.csdn.net/fengqingtao2008/article/details/6924613#\" target=\"_blank\"></a>\r\n</div>\r\n<div style=\"margin:0px auto;padding:30px 0px 15px;text-align:center;font-family:arial, console, verdana, &quot;background-color:#ffffff;\">\r\n</div>\'','2017-08-29 02:06:53'),(117,'./up_image/img_59a517c3b1c1f.jpg',0,'json.parse问题解析','张国福','json.parse问题解析',50,'\'<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"background-color:#eeebe7;\"><span style=\"font-size:13px;\">parse用于从一个字符串中解析出json对象,如</span></span>\r\n</p>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-size:13px;color:#666666;\"><span style=\"color:#0080ff;font-family:&quot;\">var str = \'{\"name\":\"huangxiaojian\",\"age\":\"23\"}\'</span><br />\r\n</span>\r\n</p>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;color:#0080ff;\"><span>结果：</span></span>\r\n</p>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;color:#0080ff;\"><span>json.parse(str)<br />\r\n</span></span>\r\n</p>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;\"><span></span></span>\r\n</p>\r\n<div style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<div>\r\n		object\r\n	</div>\r\n</div>\r\n<ol style=\"font-size:14px;background-color:#ffffff;color:#0080ff;font-family:&quot;\">\r\n	<li>\r\n		<span style=\"color:#881391;\">age</span><span>:&nbsp;</span><span style=\"color:#c41a16;\">\"23\"</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"color:#881391;\">name</span><span>:&nbsp;</span><span style=\"color:#c41a16;\">\"huangxiaojian\"</span>\r\n	</li>\r\n	<li>\r\n		<span style=\"color:#881391;\">__proto__</span><span>:&nbsp;</span><span style=\"vertical-align:top;\">object</span>\r\n	</li>\r\n</ol>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<br />\r\n</p>\r\n<p style=\"font-family:arial;font-size:14px;background-color:#ffffff;color:#0080ff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;\"><span><br />\r\n</span></span>\r\n</p>\r\n<span style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">注意：单引号写在{}外，每个属性名都必须用双引号，否则会抛出异常。</span>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;\"><span><br />\r\n</span></span>\r\n</p>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;\"><span>stringify()用于从一个对象解析出字符串，如<br />\r\n</span></span>\r\n</p>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;\"><span><span style=\"color:#0080ff;\">var\r\n a = {a:1,b:2}</span></span></span>\r\n</p>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;color:#0080ff;\"><span>结果：</span></span>\r\n</p>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;color:#0080ff;\"><span>json.stringify(a)<br />\r\n</span></span>\r\n</p>\r\n<p style=\"color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;\">\r\n	<span style=\"font-family:&quot;font-size:13px;color:#0080ff;\"><span>\"<span style=\"color:#c41a16;\">{\"a\":1,\"b\":2}</span>\"</span></span>\r\n</p>\'','2017-08-29 07:29:07');
/*!40000 ALTER TABLE `article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_admin_user`
--

DROP TABLE IF EXISTS `blog_admin_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_admin_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `logname` varchar(20) NOT NULL,
  `password` varchar(32) NOT NULL,
  `realname` varchar(20) NOT NULL,
  `tel` char(11) NOT NULL,
  `rolename` enum('0','1') NOT NULL,
  `last_login_ip` char(15) DEFAULT NULL,
  `last_login_time` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=48 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_admin_user`
--

LOCK TABLES `blog_admin_user` WRITE;
/*!40000 ALTER TABLE `blog_admin_user` DISABLE KEYS */;
INSERT INTO `blog_admin_user` VALUES (47,'weiwei','3a69c58ee164f71ca99cffa8d21df9dc','微微','1502225585','1','211.103.136.242',1501760886),(46,'hongzhulei','a52c8674e6e9a8cd8f5b14dbcf189302','张国福','15001262936','1','211.103.136.242',1501757578);
/*!40000 ALTER TABLE `blog_admin_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `comment`
--

DROP TABLE IF EXISTS `comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comment` (
  `comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `comment_name` char(30) NOT NULL,
  `comment_main` varchar(180) NOT NULL,
  `article_id` int(11) NOT NULL,
  `create_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`comment_id`)
) ENGINE=MyISAM AUTO_INCREMENT=31 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comment`
--

LOCK TABLES `comment` WRITE;
/*!40000 ALTER TABLE `comment` DISABLE KEYS */;
INSERT INTO `comment` VALUES (1,'','',0,'2017-08-08 07:08:50'),(2,'我是孙悟空','这篇文字写的不错,给你点赞',32,'2017-08-23 07:08:54'),(3,'呵呵','谢谢',32,'2017-08-18 07:08:57'),(4,'来自大山的葡萄','不错啊,谢谢你的文章',32,'2017-07-12 07:09:00'),(5,'哦?是吗','从前有座山',31,'2017-08-02 07:11:02'),(6,'放大的蚂蚁','恩恩',31,'2017-08-02 07:17:59'),(7,'这是啥啊','的方法',31,'2017-08-02 07:18:12'),(8,'','',31,'2017-08-02 07:18:39'),(9,'f','d',31,'2017-08-02 07:25:49'),(10,'','',31,'2017-08-02 07:27:58'),(11,'','',31,'2017-08-02 07:33:16'),(12,'','',31,'2017-08-02 07:36:38'),(13,'','',31,'2017-08-02 07:42:11'),(14,'','',31,'2017-08-02 07:42:47'),(15,'','',31,'2017-08-02 07:45:47'),(16,'','',31,'2017-08-02 07:45:52'),(17,'fdsafd','fdsafdsfdds',33,'2017-08-02 23:45:30'),(18,'我是哪吒','很好,给你赞',33,'2017-08-02 23:59:22'),(19,'wo','henhao',33,'2017-08-03 00:08:42'),(20,'突然让人不','通融通融吧',33,'2017-08-03 03:11:11'),(22,'a啊啊啊啊啊啊','aaaaaaaaaaaaaaaaaaaa',51,'2017-08-15 09:00:49'),(23,'a啊啊啊啊啊啊','aaaaaaaaaaaaaaaaaaaa',51,'2017-08-15 09:00:50'),(24,'a啊啊啊啊啊啊','aaaaaaaaaaaaaaaaaaaa',51,'2017-08-15 09:00:51'),(25,'a啊啊啊啊啊啊','aaaaaaaaaaaaaaaaaaaa',51,'2017-08-15 09:00:51'),(26,'a啊啊啊啊啊啊','aaaaaaaaaaaaaaaaaaaa',51,'2017-08-15 09:00:51'),(27,'呃,这是谁','这边文章我觉得还可以,加油',53,'2017-08-20 12:39:34'),(30,'张国福','if里面主要实现三个功能:1.增加等级,2.存入tree数组,3.进入下一级的递归',112,'2017-08-28 11:13:42');
/*!40000 ALTER TABLE `comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `message`
--

DROP TABLE IF EXISTS `message`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `message` (
  `comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `comment_name` char(30) NOT NULL,
  `comment_main` varchar(180) NOT NULL,
  `create_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`comment_id`)
) ENGINE=MyISAM AUTO_INCREMENT=24 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `message`
--

LOCK TABLES `message` WRITE;
/*!40000 ALTER TABLE `message` DISABLE KEYS */;
INSERT INTO `message` VALUES (23,'gfd广泛的各方的各','的是非得失刚发的','2017-08-20 14:24:33');
/*!40000 ALTER TABLE `message` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-08-29 15:39:00
