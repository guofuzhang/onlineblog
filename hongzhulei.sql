-- phpMyAdmin SQL Dump
-- version 3.5.6
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2018 年 03 月 08 日 07:26
-- 服务器版本: 5.1.63-community
-- PHP 版本: 5.2.17

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `hongzhulei`
--

-- --------------------------------------------------------

--
-- 表的结构 `article`
--

CREATE TABLE IF NOT EXISTS `article` (
  `art_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `img` varchar(60) NOT NULL,
  `category_id` tinyint(6) DEFAULT NULL,
  `art_title` varchar(64) NOT NULL COMMENT '专业名称',
  `AUTHORS` varchar(30) NOT NULL,
  `main` varchar(200) NOT NULL,
  `order_id` tinyint(4) NOT NULL,
  `content` text NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`art_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=133 ;

--
-- 转存表中的数据 `article`
--

INSERT INTO `article` (`art_id`, `img`, `category_id`, `art_title`, `AUTHORS`, `main`, `order_id`, `content`, `created_at`) VALUES
(103, './up_image/img_59a0217a33e26.jpg', 2, 'auto_load自动加载机制', '张国福', 'auto_load自动加载机制', 50, '''<pre><span style="color:#f92672;">&lt;?php </span><span style="color:#66d9ef;font-style:italic;">spl_autoload_register</span>(<span style="color:#f92672;">function</span>(<span style="color:#fd971f;font-style:italic;">$classname</span>){ <span style="color:#9876aa;">$arr</span>[]<span style="color:#f92672;">=</span><span style="color:#e6db74;">"./class2/</span><span style="color:#fd971f;font-style:italic;">$classname</span><span style="color:#e6db74;">.class.php"</span><span style="color:#cc7832;">; </span><span style="color:#cc7832;"> </span><span style="color:#9876aa;">$arr</span>[]<span style="color:#f92672;">=</span><span style="color:#e6db74;">"./class1/</span><span style="color:#fd971f;font-style:italic;">$classname</span><span style="color:#e6db74;">.class.php"</span><span style="color:#cc7832;">; </span><span style="color:#cc7832;"> </span><span style="color:#75715e;">//</span><span style="color:#75715e;font-family:''宋体'';">用数组去装载所有的类文件 </span><span style="color:#75715e;font-family:''宋体'';"> </span><span style="color:#75715e;">//</span><span style="color:#75715e;font-family:''宋体'';">不同路径也可以加载进来 </span><span style="color:#75715e;font-family:''宋体'';"> </span><span style="color:#75715e;">//</span><span style="color:#75715e;font-family:''宋体'';">然后循环出每一个类</span><span style="color:#75715e;">,</span><span style="color:#75715e;font-family:''宋体'';">用那一个类 </span><span style="color:#75715e;font-family:''宋体'';"> </span><span style="color:#75715e;">//</span><span style="color:#75715e;font-family:''宋体'';">就加载那个一类</span><span style="color:#75715e;">, </span><span style="color:#75715e;"> </span><span style="color:#f92672;">foreach </span>(<span style="color:#9876aa;">$arr </span><span style="color:#f92672;">as </span><span style="color:#9876aa;">$filename</span>){ <span style="color:#f92672;">if</span>(<span style="color:#66d9ef;font-style:italic;">file_exists</span>(<span style="color:#9876aa;">$filename</span>)) <span style="color:#f92672;">require_once </span><span style="color:#9876aa;">$filename</span><span style="color:#cc7832;">; </span><span style="color:#cc7832;"> </span>}\r\n<p>\r\n	})<span style="color:#cc7832;">; </span><span style="color:#cc7832;"> </span><span style="color:#9876aa;">$obj1</span><span style="color:#f92672;">=new </span>b()<span style="color:#cc7832;">; </span><span style="color:#9876aa;">$obj1</span><span style="color:#f92672;">-&gt;</span><span style="color:#a6e22e;">showmeb</span>()<span style="color:#cc7832;">;</span>\r\n</p>\r\n\r\n<p>\r\n	<span style="color:#cc7832;">原理:在使用spl_autoload_register机制:</span>\r\n</p>\r\n\r\n<p>\r\n	<span style="color:#cc7832;">1.将所有的class.php装进数组,在你使用到某个静态方法或者new类的时候,该类会在循环中寻找是否存在,如果存在该类则加载;</span>\r\n</p>\r\n</pre>''', '2014-11-25 13:09:14'),
(35, './up_image/img_59830ea568466.jpg', 1, '打造我的linux开发环境', '张国福', '打造我的linux开发环境--linux通用技术-linux编程与内核信息，下面是详情阅读。', 50, '<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">之前只是少少的使用过vi,cscope,taglist和sourcenav，用的都不怎么熟悉。这次先了解一下目前linux下流行的开发环境（参考1），最后还是决定以vi为基础构造我的linux开发环境。“vim或emacs做编辑器，gcc做编译器， automake做工程，doxygen做文档，cvs做管理”，这大概也是我希望的吧。另外有人提到svn，说是cvs的替代者。</span><br />\r\n<br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">安装步骤</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">1. 安装gcc等;</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">done in 《ubuntu安装笔记》.</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">2. 升级vi到vim;</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">done in 《ubuntu安装笔记》.</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">3. 安装ctags；</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">#sudo apt-get install ctags</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">4. 安装ctaglist；</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">http://www.vim.org/scripts/script.php?script_id=273</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">5. 安装cscope；</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">#sudo apt-get install cscope</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">6. 安装global；</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">#sudo apt-get install global</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">7. 安装cppcomplete</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">http://www.vim.org/scripts/script.php?script_id=273</span><br />\r\n<br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">工具简介（参考2）</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">--------------------------------------------------------------------------------</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">总体使用的感觉定位查找类型定义基本可以用，但自动补全类型方面由于ctags的功能有限，感觉在大工程时，不一定很好用。</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">大型程序一定要global的参与，它的分析比较全面，但在vim中的提示信息有限。</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">taglist 精干，需要ctags的支撑 ，直接可以在左边列出函数列表，全局参数列表。（可以排序）</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">cscope 比较强大，可以对函数以及部分类型定义进行跳转，但有些bug，好像在某些条件下无法正确找到分析枚举的定义。</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">cppcomplete 需要ctags的支撑，可以补全类型或者函数名（可不是普通ctrl+p/n的那种）</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">global 新版本可以嵌入vim使用，提供比较完整解析和类型索引，和cscope比，稍微差些的就是对类型引用的打印列表中没有标识这个引用在什么函数中进行的。其实我的感觉global可能不是为vim所生，它的主要目的是用html的方式进行表达相关的关联关系和索引，使用起来感觉没有cscope的那么贴切。</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">--------------------------------------------------------------------------------</span><br />\r\n<br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">vim</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">-------------------------</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">vim在本机上被安装到/usr/share/vim/vim70目录下（用$vim代指）。可以通过修改$vim/plugin, $home/.vim下的文件内容和$home/.vimrc来配置vim参数。</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">-------------------------</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">使用gvim或者vim -g可以启动图形界面的vim。</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">-------------------------</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">vim比如ctrl-n可以实现自动补全，[i 可以查看光标所在处的函数的声明，ctrl-]跳转到函数声明所在的文件，gd则是在当前文件跳转到局部变量的声明处。</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">-------------------------</span><br />\r\n<br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">ctaglist</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">-------------------------</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">在vim中用</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">":tlisttoggle" command to open/close the taglist window.&nbsp;</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">":help taglist" command to get more information about using the taglist plugin.&nbsp;</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">-------------------------</span><br />\r\n<br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">ctags</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">-------------------------</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">q：如何看到标准库文件中的定义？</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">a:</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">在你的目录下建一个链接到标准库的源代码，然后</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">ctags -r *</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">vi -t printf</span><br />\r\n<span style="color:#333333;font-family:" font-size:16px;background-color:#ffffff;"="">就可以看见了。</span>', '2015-02-18 11:19:44'),
(110, './up_image/img_59a3a5858f732.jpg', 2, 'php 代码规范简洁之道', '张国福', 'php团队 编码规范 & 代码样式风格规范', 50, '''<h2 style="color:red;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	一、基本约定\r\n</h2>\r\n<span style="font-family:&quot;font-size:15px;background-color:#ffffff;"></span>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>1、源文件</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（1）、纯php代码源文件只使用 &lt;?php 标签，省略关闭标签 ?&gt; ；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（2）、源文件中php代码的编码格式必须是无bom的utf-8格式；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（3）、使用 unix lf(换行符)作为行结束符；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（4）、一个源文件只做一种类型的声明，即，这个文件专门用来声明class, 那个文件专门用来设置配置信息，别混在一起写；\r\n</p>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>2、缩进</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	使用tab键来缩进，每个tab键长度设置为4个空格；\r\n</p>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>3、行</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	一行推荐的是最多写120个字符，多于这个字符就应该换行了，一般的编辑器是可以设置的。\r\n</p>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>4、关键字 和 true/false/null</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	php的关键字，必须小写，boolean值：true，false，null 也必须小写。\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	下面是php的“关键字”，必须小写：\r\n</p>\r\n<blockquote style="background:#eeeeee;color:#333333;font-size:15px;font-family:&quot;">\r\n	<p>\r\n		''__halt_compiler'', ''abstract'', ''and'', ''array'', ''as'', ''break'', ''callable'', ''case'', ''catch'', ''class'', ''clone'', ''const'', ''continue'', ''declare'', ''default'', ''die'', ''do'', ''echo'', ''else'', ''elseif'', ''empty'', ''enddeclare'', ''endfor'', ''endforeach'', ''endif'', ''endswitch'', ''endwhile'', ''eval'', ''exit'', ''extends'', ''final'', ''for'', ''foreach'', ''function'', ''global'', ''goto'', ''if'', ''implements'', ''include'', ''include_once'', ''instanceof'', ''insteadof'', ''interface'', ''isset'', ''list'', ''namespace'', ''new'', ''or'', ''print'', ''private'', ''protected'', ''public'', ''require'', ''require_once'', ''return'', ''static'', ''switch'', ''throw'', ''trait'', ''try'', ''unset'', ''use'', ''var'', ''while'', ''xor''\r\n	</p>\r\n</blockquote>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>5、命名</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（1）、类名 使用大驼峰式（studlycaps）写法；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（2）、（类的）方法名 使用小驼峰（camecase）写法；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（3）、函数名使用 小写字母 + 下划线 写法，如 function http_send_post()；&nbsp;\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（4）、变量名 使用小驼峰写法，如 $username；\r\n</p>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>6、代码注释标签</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	如 函数注释、变量注释等，常用标签有&nbsp;<a href="https://phpdoc.org/docs/latest/references/phpdoc/tags/package.html" target="_blank">@package</a>、<a href="https://phpdoc.org/docs/latest/references/phpdoc/tags/var.html" target="_blank">@var</a>、<a href="https://phpdoc.org/docs/latest/references/phpdoc/tags/param.html" target="_blank">@param</a>、<a href="https://phpdoc.org/docs/latest/references/phpdoc/tags/return.html" target="_blank">@return</a>、<a href="https://phpdoc.org/docs/latest/references/phpdoc/tags/author.html" target="_blank">@author</a>、<a href="https://phpdoc.org/docs/latest/references/phpdoc/tags/todo.html" target="_blank">@todo</a>、<a href="https://phpdoc.org/docs/latest/references/phpdoc/tags/throws.html" target="_blank">@throws</a>\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	必须遵守 phpdocument 标签规则，不要另外去创造新的标签，更多标签查看&nbsp;<a href="https://phpdoc.org/docs/latest/references/phpdoc/tags/param.html" target="_blank">phpdocument官网</a>\r\n</p>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>7、业务模块</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（1）、涉及到多个数据表 更新/添加 操作时，最外层要用事务，保证数据库操作的原子性；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（2）、model层，只做简单的数据表的查询；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（3）、业务逻辑统一封装到 logic层；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（4）、控制器只做url路由，不要当作 业务方法 调用；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（5）、控制器层不能出现sql操作语句，如&nbsp;thinkphp框架的 where()、order()&nbsp;等模型方法，\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	即，控制器中，不要出现类似这样的sql语句：<span style="color:#0000ff;">d(''xxx'')-&gt;where()-&gt;order()-&gt;limit()-&gt;find(); &nbsp;</span>\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	where()、order()、limit()&nbsp;等sql方法只能出现在 model层、业务层！\r\n</p>\r\n<h2 style="color:red;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	二、代码样式风格\r\n</h2>\r\n<span style="font-family:&quot;font-size:15px;background-color:#ffffff;"></span>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>1、命名空间(namespace) 和 导入(use)声明</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	先简单文字描述下：\r\n</p>\r\n<ol style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	<li>\r\n		命名空间(namespace)的声明后面必须有一行空行；\r\n	</li>\r\n	<li>\r\n		所有的导入(use)声明必须放在命名空间(namespace)声明的下面；\r\n	</li>\r\n	<li>\r\n		一句声明中，必须只有一个导入(use)关键字；\r\n	</li>\r\n	<li>\r\n		在导入(use)声明代码块后面必须有一行空行；\r\n	</li>\r\n</ol>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	用代码来说明下：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nnamespace lib\\databases; // 下面必须空格一行\r\n\r\nclass mysql {\r\n\r\n}</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	namespace下空一行，才能使用use，再空一行，才能声明class\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nnamespace lib\\databases; // 下面必须空格一行\r\n\r\nuse foointerface; // use 必须在namespace 后面声明\r\nuse barclass as bar;\r\nuse othervendor\\otherpackage\\bazclass; // 下面必须空格一行\r\n\r\nclass mysql {\r\n\r\n}</pre>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>2、类(class)，属性(property)和方法(method)</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（1）、继承(extends) 和实现(implement) 必须和 class name 写在一行。\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nnamespace lib\\databaes;\r\n\r\nclass mysql extends parentclass implements \\pdo, \\db { // 写一行\r\n\r\n}\r\n</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（2）、属性(property)必须声明其可见性，到底是&nbsp;public&nbsp;还是 protected 还是&nbsp;private，不能省略，也不能使用var, var是php老版本中的什么方式，等用于public。\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nnamespace lib\\databaes;\r\n\r\nclass mysql extends parentclass implements \\pdo, \\db { // 写一行\r\n    public $foo = null;\r\n    private $name = ''yangyi'';\r\n    protected $age = ''17'';\r\n}</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（3）、方法(method)，必须&nbsp;声明其可见性，到底是&nbsp;public&nbsp;还是 protected 还是&nbsp;private，不能省略。如果有多个参数，第一个参数后紧接“,” ，再加一个空格：function_name ($par, $par2, $pa3), 如果参数有默认值，“=”左右各有一个空格分开。\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nnamespace lib\\databaes;\r\n\r\nclass mysql extends parentclass implements \\pdo, \\db { // 写一行\r\n    public getinfo($name, $age, $gender = 1) { // 参数之间有一个空格。默认参数的“=”左右各有一个空格，) 与 { 之间有一个空格\r\n\r\n    }\r\n}\r\n</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（4）、当用到抽象(abstract)和终结(final)来做类声明时，它们必须放在可见性声明 （public&nbsp;还是protected还是private）的前面。而当用到静态(static)来做类声明时，则必须放在可见性声明的后面。\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	直接上代码：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nnamespace vendor\\package;\r\n\r\nabstract class classname {\r\n    protected static $foo; // static放后面\r\n    abstract protected function zim(); // abstract放前面\r\n\r\n    final public static function bar() { // final放前面，static放最后。\r\n        // 方法主体部分\r\n    }\r\n}\r\n</pre>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>3、控制结构</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	控制接口，就是 if&nbsp;else&nbsp;while&nbsp;switch等。这一类的写法规范也是经常容易出现问题的，也要规范一下。\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（1）、if，elseif，else写法，直接上规范代码吧：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nif ($expr1) { // if 与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n\r\n} elseif ($expr2) { // elesif 连着写，与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n\r\n} else { // else 左右各一个空格\r\n\r\n}</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（2）、switch，case&nbsp;注意空格和换行，还是直接上规范代码：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nswitch ($expr) { // switch 与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n    case 0:\r\n        echo ''first case, with a break''; // 对齐\r\n        break; // 换行写break，也对齐。\r\n    case 1:\r\n        echo ''second case, which falls through'';\r\n        // no break\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n        echo ''third case, return instead of break'';\r\n        return;\r\n    default:\r\n        echo ''default case'';\r\n        break;\r\n}</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（3）、while，do while&nbsp;的写法也是类似，上代码：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nwhile ($expr) { // while 与 ( 之间有一个空格， ) 与 { 之间有一个空格\r\n\r\n}\r\n\r\ndo { // do 与 { 之间有一个空格\r\n\r\n} while ($expr); // while 左右各有一个空格</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（4）、for的写法\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nfor ($i = 0; $i &lt; 10; $i++) { // for 与 ( 之间有一个空格，二元操作符 "="、"&lt;" 左右各有一个空格，) 与 { 之间有一个空格\r\n\r\n}</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（5）、foreach的写法\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nforeach ($iterable as $key =&gt; $value) { // foreach 与 ( 之间有一个空格，"=&gt;" 左右各有一个空格，) 与 { 之间有一个空格\r\n\r\n}</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（6）、try catch的写法\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\ntry { // try 右边有一个空格\r\n\r\n} catch (firstexceptiontype $e) { // catch 与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n\r\n} catch (otherexceptiontype $e) { // catch 与 ( 之间有一个空格，) 与 { 之间有一个空格\r\n\r\n}</pre>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>4、注释</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（1）、行注释\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	// 后面需要加一个空格；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	如果 // 前面有非空字符，则 // 前面需要加一个空格；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（2）、函数注释\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	参数名、属性名、标签的文本 上下要对齐；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	在第一个标签前加一个空行；\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\n/**\r\n * this is a sample function to illustrate additional php\r\n * formatter options.\r\n *\r\n * @param        $one   the first parameter\r\n * @param int    $two   the second parameter\r\n * @param string $three the third parameter with a longer\r\n *                      comment to illustrate wrapping.\r\n * @return void\r\n * @author  phpgo.cnblogs.com\r\n * @license gpl\r\n */\r\nfunction foo($one, $two = 0, $three = "string") {\r\n\r\n}\r\n</pre>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>5、空格</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（1）、赋值操作符（=，+= 等）、逻辑操作符（&amp;&amp;，||）、等号操作符（==，!=）、关系运算符（&lt;，&gt;，&lt;=，&gt;=）、按位操作符（&amp;，|，^）、连接符（.） 左右各有一个空格；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（2）、if，else，elseif，while，do，switch，for，foreach，try，catch，finally&nbsp;等 与 紧挨的左括号“(”之间有一个空格；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（3）、函数、方法的各个参数之间，逗号（","）后面有一个空格；\r\n</p>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<span>6、空行</span>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（1）、所有左花括号&nbsp;<span style="color:#ff0000;background-color:#ffff00;">{</span>&nbsp;都不换行，并且&nbsp;<span style="color:#ff0000;background-color:#ffff00;">｛ 紧挨着的下方，一定不是空行；</span>\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（2）、同级代码（缩进相同）的&nbsp;<span style="color:#ff0000;background-color:#ffff00;">注释（行注释/块注释）前面，必须有一个空行；</span>\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（3）、各个方法/函数 之间有一个空行；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（4）、namespace语句、use语句、clase语句 之间有一个空行；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（5）、return语句\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	如果 return 语句之前只有一行php代码，return 语句之前不需要空行；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	如果 return 语句之前有至少二行php代码，return 语句之前加一个空行；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	（5）、if，while，switch，for，foreach、try 等代码块之间 以及&nbsp;与其他代码之间有一个空行；\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<hr />\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	【<strong>参考示例 汇总</strong>】\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	参考1：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nnamespace lib\\databaes;\r\n\r\nclass mysql extends parentclass implements \\pdo, \\db { // 写一行\r\n    public getinfo($name, $age, $gender = 1) { // 参数之间有一个空格。默认参数的“=”左右各有一个空格，) 与 { 之间有一个空格\r\n\r\n    }\r\n}</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	参考2:\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nnamespace vendor\\package;\r\n\r\nabstract class classname {\r\n    protected static $foo; // static放后面\r\n    abstract protected function zim(); // abstract放前面\r\n\r\n    final public static function bar() { // final放前面，static放最后。\r\n        // 方法主体部分\r\n    }\r\n}</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	参考3：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">&lt;?php\r\nnamespace library\\model;\r\n\r\nuse library\\helper\\imagehelper;\r\nuse library\\logic\\usermainlogic;\r\n\r\n/**\r\n * 用户表 数据模型\r\n *\r\n * @package library\\model\r\n */\r\nclass usermainmodel extends basicmodel {\r\n     /**\r\n     * 获得用户统计信息\r\n     *\r\n     * @param int $userid 用户id\r\n     * @return array\r\n     */\r\n    public function getusercard($userid) {\r\n        $userid = intval($userid);\r\n        return usermainlogic::instance()-&gt;getusercard($userid);\r\n    }\r\n\r\n    /**\r\n     * 根据id 获取用户信息\r\n     *\r\n     * @param int    $userid 用户id\r\n     * @param string $field  显示字段\r\n     * @return array\r\n     */\r\n    public function getbyuserid($userid = 0, $field = ''*'') {\r\n        if (empty($userid)) {\r\n            return array();\r\n        }\r\n\r\n        $where = array(''id'' =&gt; $userid);\r\n        $info = $this-&gt;field($field)-&gt;where($where)-&gt;find();\r\n\r\n        if (isset($info[''image'']) &amp;&amp; isset($info[''sex''])) {\r\n            $info[''image''] = imagehelper::getimageurl($info[''image''], $info[''sex'']);\r\n        }\r\n\r\n        return $info;\r\n    }\r\n}</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	参考4：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">$serv = new swoole_server("127.0.0.1", 9502);\r\n\r\n// sets server configuration, we set task_worker_num config greater than 0 to enable task workers support\r\n$serv-&gt;set(array(''task_worker_num'' =&gt; 4));\r\n\r\n// attach handler for receive event, which have explained above.\r\n$serv-&gt;on(''receive'', function($serv, $fd, $from_id, $data) {\r\n    // we dispath a task to task workers by invoke the task() method of $serv\r\n    // this method returns a task id as the identity of ths task\r\n    $task_id = $serv-&gt;task($data);\r\n    echo "dispath asynctask: id=$task_id\\n";\r\n});\r\n\r\n// attach handler for task event, the handler will be executed in task workers.\r\n$serv-&gt;on(''task'', function ($serv, $task_id, $from_id, $data) {\r\n    // handle the task, do what you want with $data\r\n    echo "new asynctask[id=$task_id]".php_eol;\r\n\r\n    // after the task task is handled, we return the results to caller worker.\r\n    $serv-&gt;finish("$data -&gt; ok");\r\n});\r\n\r\n// attach handler for finish event, the handler will be executed in server workers, the same worker dispatched this task before.\r\n$serv-&gt;on(''finish'', function ($serv, $task_id, $data) {\r\n    echo "asynctask[$task_id] finish: $data".php_eol;\r\n});\r\n\r\n$serv-&gt;start();\r\n</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;<img src="http://images2015.cnblogs.com/blog/381128/201609/381128-20160929222300828-1806388753.png" alt="" style="height:auto !important;" />\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	<span style="color:#ff0000;"><strong><span style="font-size:18px;"><span style="background-color:#ffff00;">总结：所有左花括号 { 都不换行，并且 ｛ 紧挨着的下方，一定不是空行！</span></span></strong></span>\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<blockquote style="background:#eeeeee;color:#333333;font-size:15px;font-family:&quot;">\r\n	<p>\r\n		上面的 代码样式规范，参考了 java、javascript、objective-c、go 等开发语言的规范！\r\n	</p>\r\n	<p>\r\n		java语言对中国程序员影响太深，大部分人还是习惯把 左花括号<span style="color:#ff0000;"><span style="background-color:#ffff00;">&nbsp;<strong>{&nbsp;</strong></span></span>不换行！\r\n	</p>\r\n	<p>\r\n		书写原则：做到&nbsp;<span style="color:#ff0000;background-color:#ffff00;">代码紧凑</span>&nbsp;而又不失&nbsp;<span style="color:#ff0000;background-color:#ffff00;">小模块化</span>&nbsp;！\r\n	</p>\r\n</blockquote>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;&nbsp;\r\n</p>\r\n<h2 style="color:red;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	psr-4 规范\r\n</h2>\r\n<span style="font-family:&quot;font-size:15px;background-color:#ffffff;"></span>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	psr-4规范是刚出没多久的一条新的规范，它也是规范 自动加载(autoload)的，是对psr-0的修改，属于补充规范，\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	我简单说下，主要是以下几点：&nbsp;\r\n</p>\r\n<ol style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	<li>\r\n		废除了psr-0中_就是目录分割符的写法，_下划线在完全限定类名中是没有特殊含义了。&nbsp;\r\n	</li>\r\n	<li>\r\n		类文件名要以 .php 结尾。&nbsp;\r\n	</li>\r\n	<li>\r\n		<span style="background-color:#ffff00;">类名必须要和对应的文件名要一模一样，大小写也要一模一样</span>。\r\n	</li>\r\n</ol>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	<strong>参考：</strong>\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	<a href="http://www.cnblogs.com/phpgo/p/5840819.html" target="_blank">代码风格研究：左花括号 是否换行？？？</a>\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	<a href="http://www.cnblogs.com/phpgo/p/5852572.html" target="_blank">php中psr-[0-4]代码规范</a>\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	<a href="http://www.cnblogs.com/phpgo/p/5657846.html" target="_blank">【荐】javascript编码风格</a>\r\n</p>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<hr />\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<h3 style="font-size:1.25em;color:#0000ff;vertical-align:middle;font-family:&quot;background-color:#ffffff;">\r\n	<strong>【补充】数组 的书写格式</strong>\r\n</h3>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	只有一个键值对时，就写成一行：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">$where = array(''id'' =&gt; 789);</pre>\r\n<p style="font-family:&quot;font-size:15px;background-color:#ffffff;">\r\n	有多个（二个或二个以上）键值对时，就换行：\r\n</p>\r\n<pre class="cnblogs_highlighter brush:php;">$where = array(\r\n    ''id'' =&gt; 789,\r\n    ''user_name'' =&gt; ''phpgo''\r\n);</pre>''', '2015-09-24 05:09:25'),
(56, './up_image/img_599d9b95dfdb8.jpg', 0, ' 浅谈 php 与手机 app 开发（api 接口开发）', '张国福', '这篇文章主要介绍了php反射机制原理与用法,结合实例形式分析了php反射机制的原理、用法及相关注意事', 50, '<b>一、先简单回答两个问题：</b><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">1、php 可以开发客户端？</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">答：不可以，因为php是脚本语言，是负责完成 b/s架构 或 c/s架构 的s部分，即：服务端的开发。（别去纠结 gtk、winbinder）</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">2、为什么选择 php 作为开发服务端的首选？</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">答：跨平台（可以运行在unix、linux、windows、mac os下）、低消耗（php消耗相当少的系统资源）、运行效率高（相对而言）、mysql的完美搭档，本身是免费开源的，......</span><br />\r\n<br />\r\n<b>二、如何使用 php 开发 api（application programming interface，应用程序编程接口） 呢？</b><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">做过 api 的人应该了解，其实开发 api 比开发 web 更简洁，但可能逻辑更复杂，因为 api 其实就是数据输出，不用呈现页面，所以也就不存在 mvc（api 只有 m 和 c），</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">1、和 web 开发一样，首先需要一些相关的参数，这些参数，都会由客户端传过来，也许是 get 也许是 post，这个需要开发团队相互之间约定好，或者制定统一规范。</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">2、有了参数，根据应用需求，完成数据处理，例如：任务进度更新、app内购、一局游戏结束数据提交等等</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">3、数据逻辑处理完之后，返回客户端所需要用到的相关数据，例如：任务状态、内购结果、玩家信息等等</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">数据怎么返给客户端？</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">直接输出的形式，如：json、xm</span>l、text 等等。<br />\r\n4、客户端获取到你返回的数据后，在客户端本地和用户进行交互<br />\r\n<br />\r\n<p>\r\n	<b>临时写的一个简单 api 例子：</b> \r\n</p>\r\n<p>\r\n	<b><br />\r\n</b> \r\n</p>\r\n<p>\r\n	<b> </b>\r\n</p>\r\n<pre class="prettyprint lang-php">\r\n</pre>\r\n<b> <br />\r\n</b> \r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<b><b>三、实际项目中，我们在开发 api 应该注意的几个事项（仅供参考）：</b><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">1、单文件实现多接口的形式有很多种，例如：if..elseif.. 或 switch 或 动态方法 (也就是tp的这种访问函数体的形式)</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">2、对于数据的输出最好用json，json具有相当强大的跨平台性，市场上各大主流编程语言都支持json解析，json正在逐步取代xm</span>l，成为网络数据的通用格式<br />\r\n3、接口安全，一定要增加接口验证。例如，客户端和服务端针对不同接口统一做好加密方式，服务端在对于每次接口需要都要进行验证。以保证防止接口被恶意刷新或黑客恶意调用，尤其是大型商业应用。<br />\r\n4、对于线上的 api 必须保证所有接口正常且关闭所有的错误信息 =&gt; error_reporting(0)，在输出json 时，不能有任何其它输出，否则，客户端将解析数据失败，直接 crash！<br />\r\n5、开发 api 和 web 有一定的区别，如果是 web 的话，可能代码出错了，不会导致特别严重的错误，也许只是导致数据写入和查询失败，也许导致 web 的某个部分错位或乱码。但如果是 api，直接 crash！<br />\r\n6、做接口开发，不建议使用框架开发，原因概括起来有两点（其实我有点冒风险的，本人也是 tper 一枚，毕竟这是tp的官网）：<br />\r\n　　1）客户端一般对服务端的响应速度有极高要求，因此，使用最原生态的 php 完成接口开发，是最高效的，假如用到了框架，还需要加载各种不需要多余的文件，就好比夏天穿了件冬天的衣服。试想，你在玩手机的时候，使用一个应用随便一个操作，等半天才有动静，你受的了吗？<br />\r\n<br />\r\n　　2）就是上面第4点提到的，框架对于web开发，是件很幸福的事，但对于 api 而言，你实在不敢想象它会给你出什么岔子！最后你将痛苦不堪~~因为很多框架都是为 web 诞生的（我也很期待有一天能看到专门为开发 api 而生的框架或者扩展）<br />\r\n<br />\r\n　　这个也有人纠结，接口效率与稳定性，还得看编码的人，有的人可能写的还不如框架跑的快，也有人觉得用框架没什么问题，这里只是建议，关键看自己的实际情况，同时建议代码上线前压测一下<br />\r\n<br />\r\n　　说到这，不得不说扯一下，腾讯微博淘宝等开放平台。其实那些开放平台，所谓的开放，就是给你提供一个这样的接口，你根据他们提供的技术文档，按他们制定的格式和要求，调它们提供的接口文件（一般都是返回json或者xml），你就可以获取到他们的相关信息，例如：qq用户基本信息、淘宝店铺、商品消息等等。然后在根据这些消息，在你的应用里完成交互。<br />\r\n<br />\r\n　　其实，ajax 也是调用 api 的一种体现形式，你觉得呢？ 呵呵~~<br />\r\n</b> \r\n</p>\r\n<span></span>', '2016-03-23 15:13:25'),
(51, './up_image/img_5986fee9c3d24.jpg', 1, '修复时间更改', '张国福', '修复时间更改', 50, '<div style="font-size:14px;">\r\n	如何设置时区\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">&lt;?php&nbsp;</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">function_exists(date_default_timezone_set);//在这他总是返回1,这函数是判断这里面的字符是不是一个定义了的函数名&nbsp;</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">date_default_timezone_set("etc/gmt");//这是格林威治标准时间,得到的时间和默认时区是一样的&nbsp;</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">date_default_timezone_set("etc/gmt+8");//这里比林威治标准时间慢8小时&nbsp;</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">date_default_timezone_set("etc/gmt-8");//这里比林威治标准时间快8小时&nbsp;</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">date_default_timezone_set(''prc''); //设置中国时区&nbsp;</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">?&gt;&nbsp;</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ffffff;">可以在文件开头加入 ini_set(''date.timezone'',''asia/shanghai''); // ''asia/shanghai'' 为上海时区&nbsp;</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ffffff;">ini_set(k,v);</span>\r\n</div>', '2015-03-25 06:11:10'),
(52, './up_image/img_598af69ab92b8.jpg', 2, '访问网站出现eof', '张国福', '今天访问本地的项目，全部提示上面的那些信息eof，不知道咋回事？  之前都都能正常访问，所以我猜想本', 50, '<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	今天访问本地的项目，全部提示上面的那些信息eof，不知道咋回事？\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	之前都都能正常访问，所以我猜想本地的项目本身肯定是没有问题的。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	原因：<span style="line-height:1.8;color:#ff0000;"><strong>代理软件-蓝灯</strong></span>(由于自己经常上google，所以下载使用了蓝灯免费版使用)\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	我的解决方法：\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　1.关掉代理软件即可\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　2.给你本地的项目更换域名，重新绑定host即可\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	延伸(windows的自动更新程序以及其他软件的自动更新、打补丁，都可能引起503的问题)：\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　1.关闭windows 自动更新程序，或改为手动安装，或选择性的更新程序。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　2.打补丁可以使你的系统更加稳定、安全，但也可以让你的系统出现一些莫名其妙的事儿，让你丈二和尚摸不着头脑，所以一定要打补丁时要清楚打了哪些补丁，以便出现故障后可以还原\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　3.尽量关闭所有软件的自动更新功能，因为这或许将成为某软件的后门。\r\n</p>', '2017-08-09 11:48:42');
INSERT INTO `article` (`art_id`, `img`, `category_id`, `art_title`, `AUTHORS`, `main`, `order_id`, `content`, `created_at`) VALUES
(53, './up_image/img_5990129a74617.jpg', 0, '各大前端框架介绍', '张国福', '各大前端框架介绍', 50, '<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<p>\r\n		<strong>目录</strong> \r\n	</p>\r\n	<ul>\r\n		<li>\r\n			一、easyui\r\n		</li>\r\n		<li>\r\n			二、dwz jui\r\n		</li>\r\n		<li>\r\n			三、hui\r\n		</li>\r\n		<li>\r\n			四、bui\r\n		</li>\r\n		<li>\r\n			五、ace admin\r\n		</li>\r\n		<li>\r\n			六、metronic\r\n		</li>\r\n		<li>\r\n			七、h+ ui\r\n		</li>\r\n		<li>\r\n			八、其它ui\r\n		</li>\r\n		<li>\r\n			九、总结\r\n		</li>\r\n	</ul>\r\n</div>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	最近要做一个企业的oa系统，以前一直使用easyui，一切都好，但感觉有点土了，想换成现在流行的bootstrap为基础的后台ui风格，想满足的条件应该达到如下几个：\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	1、美观、大方、简洁\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	2、兼容ie8、不考虑兼容ie6/ie7，因为现在还有很多公司在使用win7系统，系统内置了ie8\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	3、能通过选项卡打开多个页面，不想做单页，iframe也没关系\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	4、性能好，不要太笨重\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	5、最好以bootstrap为基础\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	6、还希望在以后别的系统中能够复用。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	一次次反复纠结的选择开始了，给大家介绍下我考虑过的ui，也给大家一个参考。\r\n</p>\r\n<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</div>\r\n<h1 style="font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;">\r\n	一、easyui\r\n</h1>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	easyui是一种基于jquery的用户界面插件集合。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	easyui为创建现代化，互动，javascript应用程序，提供必要的功能。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	使用easyui你不需要写很多代码，你只需要通过编写一些简单html标记，就可以定义用户界面。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	easyui是个完美支持html5网页的完整框架。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	easyui节省您网页开发的时间和规模。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	easyui很简单但功能强大的。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818093202687-33512256.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818092517046-485277410.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	优点：轻量、功能强大、免费、兼容性好、帮助详细、使用的人多生态好\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	缺点：非响应式布局、某些系统看起来有点土（客户与老板的感觉、确实与最新的那些ui有差距）\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	获得：上网搜索、网盘搜索大把被搭建好了基础功能的框架。下载\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	下载后大家可以替换成最新的1.5版的easyui\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	官网：http://www.jeasyui.com/，有免费版，有商业版，商业版收费，帮助非常详尽\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	资源：http://www.jeasyui.net/，easy是国外的产品，这个网站类似官网的中文版\r\n</p>\r\n<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</div>\r\n<h1 style="font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;">\r\n	二、dwz jui\r\n</h1>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	特点：dwz富客户端框架(jquery ria framework), 是中国人自己开发的基于jquery实现的ajax ria开源框架. 设计目标是简单实用,快速开发,降低ajax开发成本。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818095614812-1128311466.jpg" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	官网：http://jui.org/\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	下载：https://github.com/dwzteam/\r\n</p>\r\n<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</div>\r\n<h1 style="font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;">\r\n	三、hui\r\n</h1>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	h-ui前端框架是在bootstrap的思想基础上基于 html、css、javascript开发的轻量级web前端框架,开源免费,简单灵活,兼容性好,满足大多数中国网站。分了前端ui与后端ui。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818100512734-956757087.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818101219437-1416619873.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	官网：http://www.h-ui.net/h-ui.admin.shtml&nbsp;后台，http://www.h-ui.net/&nbsp;前台\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	下载：https://github.com/jackying/\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	缺点：感觉用的人少，名气小，资料不全，配套组件不多，但国人的产品符合国人的口味。\r\n</p>\r\n<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</div>\r\n<h1 style="font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;">\r\n	四、bui\r\n</h1>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	bui她是基于jquery,兼容kissy的ui类库，专致于解决后台系统的框架方案，bui提供了丰富的dpl含有强大的控件库对业务做了精细的分析。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818101105062-1243824719.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	官网：http://www.builive.com/\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	下载：https://github.com/dxq613/bui\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	感觉也比较冷、与hui有点类似的优点整体框架符合我的要求，但风格有种说不出的感觉。\r\n</p>\r\n<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</div>\r\n<h1 style="font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;">\r\n	五、ace admin\r\n</h1>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	响应式bootstrap网站后台管理系统模板ace admin，非常不错的轻量级易用的admin后台管理系统，基于bootstrap3，拥有强大的功能组件以及ui组件，基本能满足后台管理系统的需求，而且能根据不同设备适配显示，而且还有四个主题可以切换。以前收费，好像最新版不再收费了。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818134607046-1173544375.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818134701781-149050802.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818134740593-814554555.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818134824828-1136492981.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	下载：https://github.com/bopoda/ace\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	官网：http://ace.jeka.by/\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	感觉比较全，功能强大,组件多，美观，只是用了很多不同的插件，兼容性不错。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	兼容的浏览器：\r\n</p>\r\n<ul style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<li>\r\n		internet explorer 10\r\n	</li>\r\n	<li>\r\n		internet explorer 11\r\n	</li>\r\n	<li>\r\n		internet explorer 8\r\n	</li>\r\n	<li>\r\n		internet explorer 9\r\n	</li>\r\n	<li>\r\n		latest chrome\r\n	</li>\r\n	<li>\r\n		latest firefox\r\n	</li>\r\n	<li>\r\n		latest opera\r\n	</li>\r\n	<li>\r\n		latest safari\r\n	</li>\r\n</ul>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	使用的插件：\r\n</p>\r\n<div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:5px;margin:5px 0px;font-family:;">\r\n	<img src="http://images.cnblogs.com/outliningindicators/contractedblock.gif" alt="" />&nbsp;<span style="background-color:#ffffff;line-height:1.5 !important;">view code</span> \r\n</div>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	使用到的插件并没有分开存放，使用起来会麻烦一些。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	另外该插件也被很多人简化、修改成选项卡+iframe风格了。\r\n</p>\r\n<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</div>\r\n<h1 style="font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;">\r\n	六、metronic\r\n</h1>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	metronic 是一套精美的响应式后台管理模板，基于强大的 twitter bootstrap 框架实现。metronic 拥有简洁优雅的 metro ui 风格界面，6 种颜色可选，76 个模板页面，包括图表、表格、地图、消息中心、监控面板等后台管理项目所需的各种组件。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818135553687-290869200.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818135723062-1908450132.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818135814765-89085450.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	页面规范、精致、细腻、美观大方；功能强大、非常全；在所有我看到过的基于bootstrap的网站模版中，metronic是我认为最优秀的，其外观之友好、功能之全面让人惊叹。metronic 是一个自适应的html模版，提供后台管理模版和前端内容网页模版两种风格。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<strong>优点：</strong> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	支持html5 和 css3<br />\r\n自适应，基于响应式 twitter bootstrap框架，同时面向桌面电脑、平板、手机等终端。<br />\r\n整合angularjs 框架。<br />\r\n可自定义管理面板，包括灵活的布局、主题、导航菜单、侧边栏等。<br />\r\n提供了部分电子商务模块：cms, crm, saas。<br />\r\n多风格，提供了3个前端风格，7个后端管理面板风格。<br />\r\n简洁扁平风格设计。<br />\r\n700多个网页模版，1500多个ui小组件，100多个表单，80多个jquery插件。<br />\r\n提供说明文档。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<strong>缺点：</strong> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	太大了，真的不知道从那里开始\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	对ie的兼容不好，虽然官方声称支持ie8，但我测试结果不支持\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	收费，今天的价格是$28\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818141318265-82340293.png" alt="" /> \r\n</p>\r\n<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</div>\r\n<h1 style="font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;">\r\n	七、h+ ui\r\n</h1>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	官网的介绍：h+是一个完全响应式，基于bootstrap3.3.6最新版本开发的扁平化主题，她采用了主流的左右两栏式布局，使用了html5+css3等现代技术，她提供了诸多的强大的可以重新组合的ui组件，并集成了最新的jquery版本(v2.1.4)，当然，也集成了很多功能强大，用途广泛的jquery插件，她可以用于所有的web应用程序，如网站管理后台，网站会员中心，cms，crm，oa等等，当然，您也可以对她进行深度定制，以做出更强系统。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818141637125-696613682.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	官网：http://www.zi-han.net/theme/hplus/\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	与metronic非常像，插件非常多，收费998人民币。\r\n</p>\r\n<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</div>\r\n<h1 style="font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;">\r\n	八、其它ui\r\n</h1>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818142203609-550636659.png" alt="" /> \r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	<img src="http://images2015.cnblogs.com/blog/63651/201608/63651-20160818142531718-1781554856.png" alt="" /> \r\n</p>\r\n<div style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</div>\r\n<h1 style="font-size:28px;color:#444444;font-family:tahoma, arial, helvetica, sans-serif;background-color:#ffffff;">\r\n	九、总结\r\n</h1>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	没有形式就没有内容、ui重要，特别是当客户与老板不懂太多关于代码、功能、性能的时候。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	上面的ui你也许可以通过各种途径获得，但商业应用请慎重。\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	想来想去还是拿不定主意，不过有点想法：\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	1、使用hui和bootstrap\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	2、使用easyui的框架，内容页使用hui+bootstrap，iframe选项卡\r\n</p>\r\n<p style="color:#444444;font-family:tahoma, arial, helvetica, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	3、从各个功能强大的页面中拿一些插件过来\r\n</p>', '2016-04-20 03:45:03'),
(44, './up_image/img_5983182510882.jpg', 2, 'php开发者的linux学习之路', '张国福', '谈起一个高效动态网站的构建，那就不得不提到lamp，即linux操作系统、apache网络服务器、m', 50, '<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);">谈起一个高效动态网站的构建，那就不得不提到lamp，即linux操作系统、apache网络服务器、mysql数据库、perl、php或python编程语言等开源产品所组成的网站架构框架，其最大的优势是开放性强，安全性高，且成本低廉。因此，lamp成为了国际流行的网站构建方案。而作为一名php开发人员，在工作中，普遍也使用lamp来开发一个高性能的网站，当然，也有其他构建方案，如lnmp，wamp等。因此，linux系统不仅是一个高性能网站的构建基础，也是一名php开发人员的必修课。\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);">开始学习linux系统，书籍教程方面，我选择的是这本语言精练，更易上手的《linux就该这么学》，它是一本注重实用性的linux自学书籍，其作者刘遄从事于linux运维技术行业多年，通过红帽架构师认证rhca认证，学习生态圈较完善，有完备的书籍、网站、专业培训、论坛和其他社区的linux学习生态圈。当然，对于慢节奏的同学，也可以通过网络上的教学视频进行学习；那么，跟随教程，我在windows下使用了vmware安装了一个虚拟机，配置好centos系统，第一步当然是熟悉linux的基本操作命令，如文档管理项的rm、mv、cat等，磁盘管理的cd、ls、fdisk等。当然，在熟悉其基本命令的同时，也会学习到linux的目录结构，权限管理，进程管理等基础知识，我就不一一赘述了。在这里我推荐几个关于进程管理的命令：ps，用于显示当前进程状态，常用的搭配有ps aux 、ps ef、 ps efh。dstat：动态系统资源统计命令。top：动态显示inux进程。htop：交互式进程查看器。这几个命令对于我们的进程管理有相当大的帮助。\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);"><br />\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);"><br />\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);">如何搭建lamp环境？第一步当然是下载安装必要的产品，顺序一般是：apache、mysql、php，当然，linux下每一个软件都有各种依赖，人工安装依赖是一项很复杂的工作，于是，包管理器便应运而生，centos使用的是yum包管理器，它会自动帮我们把需要安装的依赖包自动安装，只需输入此命令：yum y install httpd mysql mysqlserver php phpmysql postgresql postgresqlserver phppostgresql phppgsql phpdevel，安装过程大概几分钟，安装完成。\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);">第二步便是测试环境是否正常运行（run），首先，我们启动apache服务器：/etc/rc.d/init.d/httpd start，启动之后检测启动结果：ps aux | grep httpd，如过出现一堆进程，那么apache网络服务器已正常运转，然后，我用ifconfig命令查看服务器的ip并进入网站根目录下创建一个phpinfo.php的程序，用于查看php的配置信息，如果配置信息正常显示，那么php模块已配置完成，接下来就进行数据库的配置，当然第一步是启动数据库：/etc/rc.d/init.d/mysqld start，然后检查启动结果：netstat tulnp | grep ：3306，结果为正常启动，接下来我进入mysql数据库，新建了一个用于测试的表，并简单的插入了几条数据，然后再写了一个用php连接mysql数据库的测试代码：\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);">运行后如能正常查询数据，那么，我们的lamp环境便搭建完成。\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);">为了进一步熟悉linux系统，我决定安装另一款linux os进行日常开发，流行的发行版有很多，诸如debian，红帽(redhat)<u>http://www.linuxprobe.com/chapter00.html</u>、ubuntu(包括kubuntu,xubuntu等)、opensuse(原suse)、mandriva(原mandrake)、centos、fedora、veket等，各有其优缺点，我就不对其深入讨论了。我最终选择安装的是ubuntu，选择的原因是其友好的界面以及许多常用软件的集成。\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);">安装好ubuntu后，我第一步是搭建php的开发环境，直接使用aptget安装软件，当然，还有deb包的安装方式以及独具ubuntu特色的新立得软件包管理等方法。安装谷歌浏览器时，发现缺少依赖包，这时候，这条命令就能帮你自动安装依赖包：sudo aptget install f。当然，在ubuntu系统下有许多好用的软件，比如浏览器有：firefox，谷歌，opera，音乐播放器有：audacious、rhythmbox。我个人推荐几款实用的软件：谷歌浏览器，wps文件处理器，atom代码编辑器，thunderbird邮件，filezilla等。\r\n	</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);">在安装完必备的软件后，我决定对我的桌面进行一次美化，ubuntu有许多很精美的主题，你甚至可以将其打造为mac的界面风格，可以参考网上资料，调整桌面环境，我推荐使用unitytweaktool，这是一个非常好用的unity图形化管理工具，可以修改工作区，热区数量等。主题我推荐使用flatabulous，它是一款ubuntu下扁平化主题，也是我试过众多主题中最喜欢的一个！\r\n</p>\r\n<p fontsize:18px;backgroundcolor:#f4f4f4;"="" style="margin-top: 15px; margin-bottom: 0px; padding: 0px; word-break: break-all; font-family: &quot;microsoft yahei&quot;; font-size: 16px; text-align: justify; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(26, 26, 26);">至此，一个个性化的linux os 便打造成功,不过也推荐你看下书籍《linux就该这么学》来学习rhel7系统，迎合更多的发行版系统。至今，linux系统已经成为我开发工作的一部分，简单的指令操作，完全开放的权限，稳定的运行效率，以前在windows下很繁琐的操作，在linux下只需要一条命令，在开发工作中极大的节约了时间成本。我想，对于开发者而言，不仅仅是php开发者，linux系统对于我们来说都是不可缺少的工作平台！\r\n	</p>', '2016-11-24 04:33:41'),
(55, './up_image/img_599a5582abe80.jpg', 1, '怎么解决vmware中虚拟机中无法使用键盘的故障', '张国福', '当我们使用vmware时，在折腾虚拟机系统后，下次开启虚拟机系统却发现键盘不能用，无法输入，这让人很', 50, '<ol style="color:#333333;font-family:&quot;font-size:16px;text-align:justify;background-color:#ffffff;">\r\n	<li>\r\n		<div>\r\n			<p>\r\n				打开vmware，定位到故障机的标签，切记这时是在关闭电源状态下，这一点很重要。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style="padding:10px 0px;">\r\n				<a href="http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=1" target="_self"><img alt="怎么解决vmware中虚拟机中无法使用键盘的故障" src="http://e.hiphotos.baidu.com/exp/w=500/sign=eee0700a768da9774e2f862b8051f872/63d0f703918fa0ecac8ad734239759ee3d6ddbbe.jpg" /><span style="background:#333333;"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style="color:#eeffee;text-align:center;background:url(&quot;">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				点击“编辑虚拟机设置”，会弹出个新的窗口中，点击“选项”。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style="padding:10px 0px;">\r\n				<a href="http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=2" target="_self"><img alt="怎么解决vmware中虚拟机中无法使用键盘的故障" src="http://h.hiphotos.baidu.com/exp/w=500/sign=72a913c3d4c8a786be2a4a0e5708c9c7/aa18972bd40735fab17bfd809b510fb30f24087b.jpg" /><span style="background:#333333;"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style="color:#eeffee;text-align:center;background:url(&quot;">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				在选项下，点击“常规”，在窗口右下角找到“增强型虚拟键盘”。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style="padding:10px 0px;">\r\n				<a href="http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=3" target="_self"><img alt="怎么解决vmware中虚拟机中无法使用键盘的故障" src="http://e.hiphotos.baidu.com/exp/w=500/sign=81d835f246166d223877159476230945/3b87e950352ac65cc41bd44afef2b21193138ae9.jpg" /><span style="background:#333333;"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style="color:#eeffee;text-align:center;background:url(&quot;">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				点击“增强型虚拟键盘”的小三角形，这时就会展开它的选项有三个，分别是关闭、如果可用请使用、需要，你可以选择你想要的。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style="padding:10px 0px;">\r\n				<a href="http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=4" target="_self"><img alt="怎么解决vmware中虚拟机中无法使用键盘的故障" src="http://a.hiphotos.baidu.com/exp/w=500/sign=b8e0fecfa2efce1bea2bc8ca9f51f3e8/a9d3fd1f4134970a1841ad1690cad1c8a7865ddc.jpg" /><span style="background:#333333;"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style="color:#eeffee;text-align:center;background:url(&quot;">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				这里选择了“如果可用请使用”，并点“确定”保存。这是修改好的。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style="padding:10px 0px;">\r\n				<a href="http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=5" target="_self"><img alt="怎么解决vmware中虚拟机中无法使用键盘的故障" src="http://a.hiphotos.baidu.com/exp/w=500/sign=42bbeb2e67d0f703e6b295dc38fb5148/d52a2834349b033b931d41e310ce36d3d539bd76.jpg" /><span style="background:#333333;"></span></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style="color:#eeffee;text-align:center;background:url(&quot;">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				删除虚拟机系统目录下的 后缀名为“.vmdk.lck”的文件或文件夹，为确保无误，可以先备份出来。\r\n			</p>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div style="color:#eeffee;text-align:center;background:url(&quot;">\r\n		</div>\r\n		<div>\r\n			<p>\r\n				启动虚拟机，虚拟机键盘就可以正常使用了。\r\n			</p>\r\n		</div>\r\n		<div>\r\n			<div style="padding:10px 0px;">\r\n				<a href="http://jingyan.baidu.com/album/d713063525f54113fdf475ed.html?picindex=6" target="_self"><img alt="怎么解决vmware中虚拟机中无法使用键盘的故障" src="http://c.hiphotos.baidu.com/exp/w=500/sign=f6c3e40f18950a7b75354ec43ad0625c/6a63f6246b600c333d8f61f11f4c510fd9f9a111.jpg" /></a>\r\n			</div>\r\n		</div>\r\n	</li>\r\n	<li>\r\n		<div>\r\n			<br />\r\n		</div>\r\n	</li>\r\n</ol>', '2017-01-25 03:37:38'),
(104, './up_image/img_59a0226ec8c17.jpg', 0, 'smarty模板如何清除编译过的缓存文件', '张国福', '', 50, '''<div style="font-size:14px;">\r\n	<span style="font-size:16px;color:#333333;background-color:#ffffff;">clear_all_cache();//清除所有缓存</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-size:16px;color:#333333;background-color:#ffffff;">clear_cache(''index.tpl'');//清除index.tpl的缓存</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-size:16px;color:#333333;background-color:#ffffff;">clear_cache(''index.tpl'',cache_id);//清除指定id的缓存</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<br />\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">$smarty-&gt;cache_dir=''./cache/''; //设置存放缓存文件的文件夹</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">$smarty-&gt;caching=1;//开启缓存 0、false代表关闭|非0数字、true代表开启</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">$smarty-&gt;cache_lifetime=3600//单位为秒(如果填写-1为永不过期)</span>\r\n</div>\r\n<div style="font-size:14px;">\r\n	<span style="font-family:tahoma;background-color:#ddedfb;">$smarty-&gt;display(''list2.html'',md5($_server[''request_uri'']));//将当前页面的url(包含?后面的所有参数)进行md5加密然后设置缓存文件名</span>\r\n</div>''', '2017-02-14 13:13:18');
INSERT INTO `article` (`art_id`, `img`, `category_id`, `art_title`, `AUTHORS`, `main`, `order_id`, `content`, `created_at`) VALUES
(105, './up_image/img_59a022f8c1109.jpg', 0, '常用的http状态码', '张国福', '常用的http状态码', 50, '''<div style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	<ol>\r\n		<li>\r\n			<span style="line-height:21px;background-color:#dfc5a4;">成功的状态码： &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>200</span></span><span style="line-height:21px;">&nbsp;–&nbsp;服务器成功返回网页 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>304</span></span><span style="line-height:21px;">&nbsp;–&nbsp;未修改 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;">失败的状态码： &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>404</span></span><span style="line-height:21px;">&nbsp;–&nbsp;请求的网页不存在 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>503</span></span><span style="line-height:21px;">&nbsp;–&nbsp;服务器暂时不可用 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>500</span></span><span style="line-height:21px;">&nbsp;–&nbsp;服务器内部错误&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;">\r\n	下面的不是很常用，记住上面那几个就ok了，有bug了再补充\r\n</p>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;">\r\n	其他的状态码如下：\r\n</p>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;">\r\n	1xx（临时响应）\r\n</p>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;text-indent:2em;">\r\n	用于表示临时响应并需要请求者执行操作才能继续的状态代码。\r\n</p>\r\n<div style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	<ol>\r\n		<li>\r\n			<span style="line-height:21px;"><span style="line-height:21px;"><span>100</span></span><span style="line-height:21px;">（continue继续）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求者应当继续提出请求。服务器返回此代码则意味着，服务器已收到了请求的第一部分，现正在等待接收其余部分。（http&nbsp;</span><span style="line-height:21px;"><span>1.1</span></span><span style="line-height:21px;">新） &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>101</span></span><span style="line-height:21px;">（switching&nbsp;protocols切换协议）&nbsp;&nbsp;&nbsp;&nbsp;请求者已要求服务器切换协议，服务器已确认并准备进行切换。（http&nbsp;</span><span style="line-height:21px;"><span>1.1</span></span><span style="line-height:21px;">新）&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">&nbsp;</span><span style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;"></span>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	2xx（成功）\r\n</p>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	用于表示服务器已成功处理了请求的状态代码。\r\n</p>\r\n<div style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	<div>\r\n		<a></a>&nbsp;\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			<span style="line-height:21px;"><span style="line-height:21px;"><span>200</span></span><span style="line-height:21px;">（成功）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器已成功处理了请求。通常，这表示服务器提供了请求的网页。 &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>201</span></span><span style="line-height:21px;">（已创建）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求成功且服务器已创建了新的资源。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>202</span></span><span style="line-height:21px;">（已接受）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器已接受了请求，但尚未对其进行处理。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>203</span></span><span style="line-height:21px;">（非授权信息）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器已成功处理了请求，但返回了可能来自另一来源的信息。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>204</span></span><span style="line-height:21px;">（无内容）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器成功处理了请求，但未返回任何内容。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>205</span></span><span style="line-height:21px;">（重置内容）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器成功处理了请求，但未返回任何内容。与&nbsp;</span><span style="line-height:21px;"><span>204</span></span><span style="line-height:21px;">&nbsp;响应不同，此响应要求请求者重置文档视图（例如清除表单内容以输入新内容）。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>206</span></span><span style="line-height:21px;">（部分内容）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器成功处理了部分&nbsp;get&nbsp;请求。&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">&nbsp;</span><span style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">3xx（已重定向）</span>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	要完成请求，您需要进一步进行操作。通常，这些状态代码是永远重定向的。google 建议每次请求时使用的重定向要少于 5 个。\r\n</p>\r\n<div style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	<div>\r\n		<a></a>&nbsp;\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			<span style="line-height:21px;"><span style="line-height:21px;"><span>300</span></span><span style="line-height:21px;">（多种选择）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器根据请求可执行多种操作。服务器可根据请求者&nbsp;(user&nbsp;agent)&nbsp;来选择一项操作，或提供操作列表供请求者选择。 &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>301</span></span><span style="line-height:21px;">（永久移动）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求的网页已被永久移动到新位置。服务器返回此响应（作为对&nbsp;get&nbsp;或&nbsp;head&nbsp;请求的响应）时，会自动将请求者转到新位置。您应使用此代码通知&nbsp;googlebot&nbsp;某个网页或网站已被永久移动到新位置。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>302</span></span><span style="line-height:21px;">（临时移动）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器目前正从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。此代码与响应&nbsp;get&nbsp;和&nbsp;head&nbsp;请求的&nbsp;</span><span style="line-height:21px;"><span>301</span></span><span style="line-height:21px;">&nbsp;代码类似，会自动将请求者转到不同的位置。但由于&nbsp;googlebot&nbsp;会继续抓取原有位置并将其编入索引，因此您不应使用此代码来通知&nbsp;googlebot&nbsp;某个页面或网站已被移动。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>303</span></span><span style="line-height:21px;">（查看其他位置）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当请求者应对不同的位置进行单独的&nbsp;get&nbsp;请求以检索响应时，服务器会返回此代码。对于除&nbsp;head&nbsp;请求之外的所有请求，服务器会自动转到其他位置。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>304</span></span><span style="line-height:21px;">（未修改）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;自从上次请求后，请求的网页未被修改过。服务器返回此响应时，不会返回网页内容。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>305</span></span><span style="line-height:21px;">（使用代理）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求者只能使用代理访问请求的网页。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>307</span></span><span style="line-height:21px;">（临时重定向）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器目前正从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。此代码与响应&nbsp;get&nbsp;和&nbsp;head&nbsp;请求的&nbsp;</span><span style="line-height:21px;"><span>301</span></span><span style="line-height:21px;">&nbsp;代码类似，会自动将请求者转到不同的位置。但由于&nbsp;googlebot&nbsp;会继续抓取原有位置并将其编入索引，因此您不应使用此代码来通知&nbsp;googlebot&nbsp;某个页面或网站已被移动。&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">&nbsp;</span><span style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">4xx（请求错误）</span>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	这些状态代码表示，请求可能出错，已妨碍了服务器对请求的处理。\r\n</p>\r\n<div style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	<div>\r\n		<a></a>&nbsp;\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			<span style="line-height:21px;"><span style="line-height:21px;"><span>400</span></span><span style="line-height:21px;">（错误请求）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器不理解请求的语法。 &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>401</span></span><span style="line-height:21px;">（未授权）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求要求进行身份验证。登录后，服务器可能会返回对页面的此响应。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>403</span></span><span style="line-height:21px;">（已禁止）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器拒绝请求。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>404</span></span><span style="line-height:21px;">（未找到）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器找不到请求的网页。例如，如果请求是针对服务器上不存在的网页进行的，那么，服务器通常会返回此代码。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>405</span></span><span style="line-height:21px;">（方法禁用）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;禁用请求中所指定的方法。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>406</span></span><span style="line-height:21px;">（不接受）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;无法使用请求的内容特性来响应请求的网页。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>407</span></span><span style="line-height:21px;">（需要代理授权）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此状态代码与&nbsp;</span><span style="line-height:21px;"><span>401</span></span><span style="line-height:21px;">（未授权）类似，但却指定了请求者应当使用代理进行授权。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>408</span></span><span style="line-height:21px;">（请求超时）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器等候请求时超时。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>409</span></span><span style="line-height:21px;">（冲突）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器在完成请求时发生冲突。服务器必须包含有关响应中所发生的冲突的信息。服务器在响应与前一个请求相冲突的&nbsp;put&nbsp;请求时可能会返回此代码，同时会提供两个请求的差异列表。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>410</span></span><span style="line-height:21px;">（已删除）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果请求的资源已被永久删除，那么，服务器会返回此响应。该代码与&nbsp;</span><span style="line-height:21px;"><span>404</span></span><span style="line-height:21px;">（未找到）代码类似，但在资源以前有但现在已经不复存在的情况下，有时会替代&nbsp;</span><span style="line-height:21px;"><span>404</span></span><span style="line-height:21px;">&nbsp;代码出现。如果资源已被永久删除，那么，您应当使用&nbsp;</span><span style="line-height:21px;"><span>301</span></span><span style="line-height:21px;">&nbsp;代码指定该资源的新位置。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>411</span></span><span style="line-height:21px;">（需要有效长度）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器不会接受包含无效内容长度标头字段的请求。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>412</span></span><span style="line-height:21px;">（未满足前提条件）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器未满足请求者在请求中设置的其中一个前提条件。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>413</span></span><span style="line-height:21px;">（请求实体过大）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器无法处理请求，因为请求实体过大，已超出服务器的处理能力。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>414</span></span><span style="line-height:21px;">（请求的&nbsp;uri&nbsp;过长）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求的&nbsp;uri（通常为网址）过长，服务器无法进行处理。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>415</span></span><span style="line-height:21px;">（不支持的媒体类型）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请求的格式不受请求页面的支持。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>416</span></span><span style="line-height:21px;">（请求范围不符合要求）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果请求是针对网页的无效范围进行的，那么，服务器会返回此状态代码。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>417</span></span><span style="line-height:21px;">（未满足期望值）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器未满足”期望”请求标头字段的要求。&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>\r\n<span style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">&nbsp;</span><span style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">5xx（服务器错误）</span>\r\n<p style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	这些状态代码表示，服务器在尝试处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。\r\n</p>\r\n<div style="color:#494949;font-family:simsun;font-size:14px;background-color:#e2e2e2;">\r\n	<div>\r\n		<a></a>&nbsp;\r\n	</div>\r\n	<ol>\r\n		<li>\r\n			<span style="line-height:21px;"><span style="line-height:21px;"><span>500</span></span><span style="line-height:21px;">（服务器内部错误）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器遇到错误，无法完成请求。 &nbsp;&nbsp;</span></span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>501</span></span><span style="line-height:21px;">（尚未实施）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器不具备完成请求的功能。例如，当服务器无法识别请求方法时，服务器可能会返回此代码。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>502</span></span><span style="line-height:21px;">（错误网关）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器作为网关或代理，从上游服务器收到了无效的响应。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>503</span></span><span style="line-height:21px;">（服务不可用）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;目前无法使用服务器（由于超载或进行停机维护）。通常，这只是一种暂时的状态。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>504</span></span><span style="line-height:21px;">（网关超时）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器作为网关或代理，未及时从上游服务器接收请求。 &nbsp;&nbsp;</span>\r\n		</li>\r\n		<li>\r\n			<span style="line-height:21px;"><span>505</span></span><span style="line-height:21px;">（http&nbsp;版本不受支持）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器不支持请求中所使用的&nbsp;http&nbsp;协议版本。&nbsp;&nbsp;</span>\r\n		</li>\r\n	</ol>\r\n</div>''', '2017-03-25 13:15:36'),
(106, './up_image/img_59a044436946f.jpg', 0, '浅谈http中get与post的区别', '张国福', 'http定义了与服务器交互的不同方法，最基本的方法有4种，分别是get，post，put，delet', 50, '''<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　<span style="line-height:1.8;color:#0000ff;"><span style="line-height:1.8;font-size:large;"><b>1</b></span>.根据http规范，get用于信息获取，而且应该是安全的和幂等的</span>。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　(1).所谓安全的意味着该操作用于获取信息而非修改信息。换句话说，get 请求一般不应产生副作用。就是说，它仅仅是获取资源信息，就像数据库查询一样，不会修改，增加数据，不会影响资源的状态。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　* 注意：这里安全的含义仅仅是指是非修改信息。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　(2).幂等的意味着对同一url的多个请求应该返回同样的结果。这里我再解释一下<b><span style="line-height:1.8;color:#0000ff;">幂等</span></b>这个概念：\r\n</p>\r\n<div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:5px;margin:5px 0px;font-family:&quot;">\r\n	<div>\r\n		<span style="line-height:1.5 !important;"><a><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span>\r\n	</div>\r\n<span style="line-height:1.5 !important;">　　<b><span style="color:#0000ff;line-height:1.5 !important;">幂等</span></b>（idempotent、idempotence）是一个数学或计算机学概念，常见于抽象代数中。<br />\r\n　　幂等有一下几种定义：<br />\r\n　　对于单目运算，如果一个运算对于在范围内的所有的一个数多次进行该运算所得的结果和进行一次该运算所得的结果是一样的，那么我们就称该运算是幂等的。比如绝对值运算就是一个例子，在实数集中，有<span style="color:#0000ff;line-height:1.5 !important;">abs(a)</span></span><span style="color:#0000ff;line-height:1.5 !important;">=</span><span style="line-height:1.5 !important;"><span style="color:#0000ff;line-height:1.5 !important;">abs(abs(a))</span>。<br />\r\n　　对于双目运算，则要求当参与运算的两个值是等值的情况下，如果满足运算结果与参与运算的两个值相等，则称该运算幂等，如求两个数的最大值的函数，有在在实数集中幂等，即<span style="color:#0000ff;line-height:1.5 !important;">max(x,x)&nbsp;</span></span><span style="color:#0000ff;line-height:1.5 !important;">=</span><span style="line-height:1.5 !important;"><span style="color:#0000ff;line-height:1.5 !important;">&nbsp;x</span>。</span>\r\n	<div>\r\n		<span style="line-height:1.5 !important;"><a><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span>\r\n	</div>\r\n</div>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	看完上述解释后，应该可以理解get幂等的含义了。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　但在实际应用中，以上2条规定并没有这么严格。引用别人文章的例子：比如，新闻站点的头版不断更新。虽然第二次请求会返回不同的一批新闻，该操作仍然被认为是安全的和幂等的，因为它总是返回当前的新闻。从根本上说，如果目标是当用户打开一个链接时，他可以确信从自身的角度来看没有改变资源即可。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　<span style="line-height:1.8;color:#0000ff;"><span style="line-height:1.8;font-size:large;"><b>2</b></span>.</span><span style="line-height:1.8;color:#0000ff;">根据http规范，post表示可能修改变服务器上的资源的请求</span>。继续引用上面的例子：还是新闻以网站为例，读者对新闻发表自己的评论应该通过post实现，因为在评论提交后站点的资源已经不同了，或者说资源被修改了。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　上面大概说了一下http规范中get和post的一些原理性的问题。但在实际的做的时候，很多人却没有按照http规范去做，导致这个问题的原因有很多，比如说：\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　<span style="line-height:1.8;font-size:large;"><b>1</b></span>.很多人贪方便，更新资源时用了get，因为用post必须要到form（表单），这样会麻烦一点。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　<span style="line-height:1.8;font-size:large;"><b>2</b></span>.对资源的增，删，改，查操作，其实都可以通过get/post完成，不需要用到put和delete。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　<span style="line-height:1.8;font-size:large;"><b>3</b></span>.另外一个是，早期的web mvc框架设计者们并<span style="line-height:1.8;color:#ff0000;">没有有意识地将url当作抽象的资源来看待和设计</span>，所以导致一个比较严重的问题是传统的web mvc框架基本上都只支持get和post两种http方法，而不支持put和delete方法。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;　　* 简单解释一下mvc：mvc本来是存在于desktop程序中的，m是指数据模型，v是指用户界面，c则是控制器。使用mvc的目的是将m和v的实现代码分离，从而使同一个程序可以使用不同的表现形式。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　以上3点典型地描述了老一套的风格（没有严格遵守http规范），随着架构的发展，现在出现rest(representational state transfer)，一套支持http规范的新风格，这里不多说了，可以参考《restful web services》。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　说完原理性的问题，我们再从<span style="line-height:1.8;color:#0000ff;">表面现像上面看看get和post的区别</span>：\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　<span style="line-height:1.8;font-size:large;"><b>1</b></span>.get请求的数据会附在url之后（就是把数据放置在http协议头中），以?分割url和传输数据，参数之间以&amp;相连，如：login.action?name=hyddd&amp;password=idontknow&amp;verify=%e4%bd%a0%e5%a5%bd。如果数据是英文字母/数字，原样发送，如果是空格，转换为+，如果是中文/其他字符，则直接把字符串用base64加密，得出如：%e4%bd%a0%e5%a5%bd，其中％xx中的xx为该符号以16进制表示的ascii。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　post把提交的数据则放置在是http包的包体中。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　<span style="line-height:1.8;font-size:large;"><b>2</b></span>."get方式提交的数据最多只能是1024字节，理论上post没有限制，可传较大量的数据，iis4中最大为80kb，iis5中为100kb"？？！\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　以上这句是我从其他文章转过来的，其实这样说是错误的，不准确的：\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　(1).首先是"get方式提交的数据最多只能是1024字节"，因为get是通过url提交数据，那么get可提交的数据量就跟url的长度有直接关系了。而实际上，<span style="line-height:1.8;color:#0000ff;">url不存在参数上限的问题</span>，<span style="line-height:1.8;color:#0000ff;">http协议规范没有对url长度进行限制</span>。这个限制是特定的浏览器及服务器对它的限制。ie对url长度的限制是2083字节(2k+35)。对于其他浏览器，如netscape、firefox等，理论上没有长度限制，其限制取决于操作系统的支持。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　注意这是限制是整个url长度，而不仅仅是你的参数值数据长度。[见参考资料5]\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　(2).理论上讲，<span style="line-height:1.8;color:#0000ff;">post是没有大小限制的</span>，<span style="line-height:1.8;color:#0000ff;">http协议规范也没有进行大小限制</span>，说“post数据量存在80k/100k的大小限制”是不准确的，post数据是没有限制的，起限制作用的是服务器的处理程序的处理能力。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　对于asp程序，request对象处理每个表单域时存在100k的数据长度限制。但如果使用request.binaryread则没有这个限制。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　由这个延伸出去，对于iis 6.0，微软出于安全考虑，加大了限制。我们还需要注意：\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　　　 1).iis 6.0默认asp post数据量最大为200kb，每个表单域限制是100kb。<br />\r\n　　　　 2).iis 6.0默认上传文件的最大大小是4mb。<br />\r\n　　　　 3).iis 6.0默认最大请求头是16kb。<br />\r\n　　iis 6.0之前没有这些限制。[见参考资料5]\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　所以上面的80k，100k可能只是默认值而已(注：关于iis4和iis5的参数，我还没有确认)，但肯定是可以自己设置的。由于每个版本的iis对这些参数的默认值都不一样，具体请参考相关的iis配置文档。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　<span style="line-height:1.8;font-size:large;"><b>3</b></span>.在asp中，服务端获取get请求参数用request.querystring，获取post请求参数用request.form。在jsp中，用request.getparameter(\\"xxxx\\")来获取，虽然jsp中也有request.getquerystring()方法，但使用起来比较麻烦，比如：传一个test.jsp?name=hyddd&amp;password=hyddd，用request.getquerystring()得到的是：name=hyddd&amp;password=hyddd。在php中，可以用$_get和$_post分别获取get和post中的数据，而$_request则可以获取get和post两种请求中的数据。值得注意的是，jsp中使用request和php中使用$_request都会有隐患，这个下次再写个文章总结。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　<span style="line-height:1.8;font-size:medium;"><b>4</b></span>.post的安全性要比get的安全性高。注意：这里所说的安全性和上面get提到的“安全”不是同个概念。上面“安全”的含义仅仅是不作数据修改，而这里安全的含义是真正的security的含义，比如：通过get提交数据，用户名和密码将明文出现在url上，因为(1)登录页面有可能被浏览器缓存，(2)其他人查看浏览器的历史纪录，那么别人就可以拿到你的账号和密码了，除此之外，使用get提交数据还可能会造成cross-site request forgery攻击。\r\n</p>\r\n<p style="color:#333333;font-family:georgia, &quot;font-size:14px;background-color:#ffffff;">\r\n	　　总结一下，<span style="line-height:1.8;color:#0000ff;">get</span>是向服务器发索取数据的一种<span style="line-height:1.8;color:#0000ff;">请求</span>，而<span style="line-height:1.8;color:#0000ff;">post</span>是向服务器提交数据的一种<span style="line-height:1.8;color:#0000ff;">请求</span>，在form（表单）中，method默认为"get"，实质上，get和post只是发送机制不同，并不是一个取一个发！\r\n</p>''', '2017-04-25 15:37:39');
INSERT INTO `article` (`art_id`, `img`, `category_id`, `art_title`, `AUTHORS`, `main`, `order_id`, `content`, `created_at`) VALUES
(111, './up_image/img_59a3a733657f2.jpg', 0, 'http post get 本质区别详解 (转)', '张国福', '请求类型 三种最常见的请求类型是：get，post 和 head', 50, '''<p style="font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	请求类型<br />\r\n三种最常见的请求类型是：get，post 和 head\r\n</p>\r\n<p style="font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	get：获取一个文档<br />\r\n大部分被传输到浏览器的html，images，js，css, … 都是通过get方法发出请求的。它是获取数据的主要方法。\r\n</p>\r\n<p style="font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	例如，要获取nettuts+ 的文章，http request的第一行通常看起来是这样的：\r\n</p>\r\n<p style="font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	get /tutorials/other/top-20-mysql-best-practices/ http/1.1\r\n</p>\r\n<p style="font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	一旦html加载完成，浏览器将会发送get 请求去获取图片，就像下面这样：\r\n</p>\r\n<p style="font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	get /wp-content/themes/tuts_theme/images/header_bg_tall.png http/1.1\r\n</p>\r\n<p style="font-family:helvetica, tahoma, arial, sans-serif;font-size:14px;background-color:#ffffff;">\r\n	&nbsp;\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="color:#ff0000;"><strong>一 原理区别</strong></span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp;&nbsp;&nbsp; 一般在浏览器中输入网址访问资源都是通过get方式；在form提交中，可以通过method指定提交方式为get或者post，默认为get提交\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	http定义了与服务器交互的不同方法，最基本的方法有4种，分别是<span style="color:#ff0000;"><strong>get，post，put，delete</strong></span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	url全称是资源描述符，我们可以这样认 为：一个url地址，它用于描述一个网络上的资源，而http中的get，post，put，delete就对应着对这个资源的<span style="color:#ff6600;">查</span>&nbsp;，<span style="color:#ff6600;">改</span>&nbsp;，<span style="color:#ff6600;">增</span>&nbsp;，<span style="color:#ff6600;">删</span>&nbsp;4个操作。到这里，大家应该有个大概的了解了，get一般用于<span style="color:#ff6600;">获取/查询</span>&nbsp;资源信息，而post一般用于<span style="color:#ff6600;">更新</span>&nbsp;资源信息(<span style="color:#ff0000;"><strong>个人认为这是get和post的本质区别，也是协议设计者的本意，其它区别都是具体表现形式的差异</strong>&nbsp;</span>)。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　<span style="color:#0000ff;">根据http规范，get用于信息获取，而且应该是安全的和幂等的</span>&nbsp;。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　1.所谓安全的意味着该操作用于获取信息而非修改信息。换句话说，get请求一般不应产生副作用。就是说，它仅仅是获取资源信息，就像数据库查询一样，不会修改，增加数据，不会影响资源的状态。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　* 注意：这里安全的含义仅仅是指是非修改信息。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　2.幂等的意味着对同一url的多个请求应该返回同样的结果。这里我再解释一下<strong><span style="color:#0000ff;">幂等</span>&nbsp;</strong>这个概念：\r\n</p>\r\n<div style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="color:#000000;">　　<strong><span style="color:#0000ff;">幂等</span>&nbsp;</strong>（idempotent、idempotence）是一个数学或计算机学概念，常见于抽象代数中。<br />\r\n　　<span style="background-color:#00ffff;">幂等有以下几种定义：<br />\r\n　　对于单目运算，如果一个运算对于在范围内的所有的一个数多次进行该运算所得的结果和进行一次该运算所得的结果是一样的，那么我们就称该运算是幂等的。比如绝对值运算就是一个例子，在实数集中，有<span style="color:#0000ff;">abs(a)</span>&nbsp;</span></span><span style="background-color:#00ffff;"><span style="color:#0000ff;">=</span><span style="color:#000000;"><span style="color:#0000ff;">abs(abs(a))</span>&nbsp;。<br />\r\n　　对于双目运算，则要求当参与运算的两个值是等值的情况下，如果满足运算结果与参与运算的两个值相等，则称该运算幂等，如求两个数的最大值的函数，有在在实数集中幂等，即<span style="color:#0000ff;">max(x,x)&nbsp;</span>&nbsp;</span><span style="color:#0000ff;">=</span>&nbsp;<span style="color:#000000;"><span style="color:#0000ff;">&nbsp;x</span>&nbsp;。</span></span>\r\n</div>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="background-color:#00ffff;">看完上述解释后，应该可以理解get幂等的含义了。</span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　但在实际应用中，以上2条规定并没有这么严格。引用别人文章的例子：比如，新闻站点的头版不断更新。虽然第二次请求会返回不同的一批新闻，该操 作仍然被认为是安全的和幂等的，因为它总是返回当前的新闻。从根本上说，如果目标是当用户打开一个链接时，他可以确信从自身的角度来看没有改变资源即可。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　<span style="color:#0000ff;">根据http规范，post表示可能修改变服务器上的资源的请求</span>&nbsp;。继续引用上面的例子：还是新闻以网站为例，读者对新闻发表自己的评论应该通过post实现，因为在评论提交后站点的资源已经不同了，或者说资源被修改了。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　上面大概说了一下http规范中，get和post的一些原理性的问题。但在实际的做的时候，很多人却没有按照http规范去做，导致这个问题的原因有很多，比如说：\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　1.很多人贪方便，更新资源时用了get，因为用post必须要到form（表单），这样会麻烦一点。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　2.对资源的增，删，改，查操作，其实都可以通过get/post完成，不需要用到put和delete。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　3.另外一个是，早期的但是web mvc框架设计者们并<span style="color:#ff6600;">没有有意识地将url当作抽象的资源来看待和设计</span>&nbsp;。还有一个较为严重的问题是传统的web mvc框架基本上都只支持get和post两种http方法，而不支持put和delete方法。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp;　　* 简单解释一下mvc：mvc本来是存在于desktop程序中的，m是指数据模型，v是指用户界面，c则是控制器。使用mvc的目的是将m和v的实现代码分离，从而使同一个程序可以使用不同的表现形式。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　以上3点典型地描述了老一套的风格（没有严格遵守http规范），随着架构的发展，现在出现rest(representational state transfer)，一套支持http规范的新风格，这里不多说了，可以参考《restful web services》。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<strong><span style="color:#ff0000;">二 表现形式区别</span></strong>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp;&nbsp; 搞清了两者的原理区别，我们再来看一下他们实际应用中的区别：\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp;&nbsp;&nbsp; 为了理解两者在传输过程中的不同，我们先看一下http协议的格式：\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp;&nbsp;&nbsp; http请求：\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;">\r\n	&lt;request line&gt;\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;">\r\n	&lt;headers&gt;\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;">\r\n	<span style="color:red;">&lt;blank line&gt;</span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;">\r\n	&lt;request-body&gt;]\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;">\r\n	在http请求中，第一行必须是一个请求行（request line），用来说明请求类型、要访问的资源以及使用的http版本。紧接着是一个首部（header）小节，用来说明服务器要使用的附加信息。在首部之 后是一个空行，再此之后可以添加任意的其他数据[称之为主体（body）]。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;">\r\n	get与post方法实例：<br />\r\nget&nbsp;<span style="color:#ff0000;">/books/?sex=man&amp;name=professional</span>&nbsp;http/1.1<br />\r\nhost: www.wrox.com<br />\r\nuser-agent: mozilla/5.0 (windows; u; windows nt 5.1; en-us; rv:1.7.6)<br />\r\ngecko/20050225 firefox/1.0.1<br />\r\nconnection: keep-alive<br />\r\n<br />\r\npost / http/1.1<br />\r\nhost: www.wrox.com<br />\r\nuser-agent: mozilla/5.0 (windows; u; windows nt 5.1; en-us; rv:1.7.6)<br />\r\ngecko/20050225 firefox/1.0.1<br />\r\ncontent-type: application/x-www-form-urlencoded<br />\r\ncontent-length: 40<br />\r\nconnection: keep-alive<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; （----此处空一行----）<br />\r\n<span style="color:#ff0000;">name=professional%20ajax&amp;publisher=wiley</span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;">\r\n	&nbsp;\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;text-indent:21pt;">\r\n	有了以上对http请求的了解和示例，我们再来看两种提交方式的区别：\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp;&nbsp; （1）get提交，请求的数据会附在url之后（就是把数据放置在<span style="line-height:26px;">请求行（request line）中</span>），以?分割url和传输数据，多个参数用&amp;连接；例如：login.action?name=hyddd&amp;password=idontknow&amp;verify=%e4%bd%a0 %e5%a5%bd。<span style="color:#232323;font-family:verdana, arial, helvetica, sans-serif;line-height:28px;background-color:#faffff;">url的编码格式采用的是ascii码，而不是unicode，这也就是说你不能在url中包含任何非ascii字符，所有非ascii字符均需要编码再传输，关于url编码可参考：<a target="_blank" href="http://kb.cnblogs.com/page/133765/">http://kb.cnblogs.com/page/133765/</a></span>。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	　　post提交：把提交的数据放置在是http包的包体中。上文示例中红色字体标明的就是实际的传输数据\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp;&nbsp;&nbsp;&nbsp; 因此，get提交的数据会在地址栏中显示出来，而post提交，地址栏不会改变\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp; &nbsp; (2)传输数据的大小：首先声明：http协议没有对传输的数据大小进行限制，<span style="font-family:宋体;">http协议规范也没有对url长度进行限制。</span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="font-family:宋体;">而在实际开发中存在的限制主要有：</span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="font-family:宋体;">get:特定浏览器和服务器对url长度有限制，例如ie对url长度的限制是2083字节(2k+35)。对于其他浏览器，如netscape、firefox等，理论上没有长度限制，其限制取决于操作系统的支持。</span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="font-family:宋体;">因此对于get提交时，传输数据就会受到url长度的限制。</span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="font-family:宋体;">post:由于不是通过url传值，理论上数据不受限。但实际各个web服务器会规定对post提交数据大小进行限制，apache、iis6都有各自的配置。</span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="font-family:宋体;">&nbsp;(3)安全性：</span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	.post的安全性要比get的安全性高。注意：这里所说的安全性和上面get提到的“安全”不是同个概念。上面“安全”的含义仅仅是不作数据修改，而这 里安全的含义是真正的security的含义，比如：通过get提交数据，用户名和密码将明文出现在url上，因为(1)登录页面有可能被浏览器缓存， (2)其他人查看浏览器的历史纪录，那么别人就可以拿到你的账号和密码了，除此之外，使用get提交数据还可能会造成cross-site request forgery攻击\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	（4）http get,post,soap协议都是在http上运行的<br />\r\n1）get：请求参数是作为一个key/value对的序列（查询字符串）附加到url上的<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 查询字符串的长度受到web浏览器和web服务器的限制（如ie最多支持2048个字符），不适合传输大型数据集同时，它很不安全<br />\r\n2）post：请求参数是在http标题的一个不同部分（名为entity body）传输的，这一部分用来传输表单信息，因此必须将content-type设置为:application/x-www-form- urlencoded。post设计用来支持web窗体上的用户字段，其参数也是作为key/value对传输。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 但是：它不支持复杂数据类型，因为post没有定义传输数据结构的语义和规则。<br />\r\n3）soap：是http post的一个专用版本，遵循一种特殊的xml消息格式<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; content-type设置为: text/xml&nbsp;&nbsp; 任何数据都可以xml化\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp;\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="color:#ff0000;"><strong><span style="font-family:宋体;">三 http响应</span>&nbsp;</strong></span><br />\r\n1．http响应格式：\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&lt;status line&gt;<br />\r\n&lt;headers&gt;<br />\r\n&lt;blank line&gt;<br />\r\n[&lt;response-body&gt;]<br />\r\n<br />\r\n在响应中唯一真正的区别在于第一行中用状态信息代替了请求信息。状态行（status line）通过提供一个状态码来说明所请求的资源情况。&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;http响应实例：<br />\r\n<br />\r\nhttp/1.1 200 ok<br />\r\ndate: sat, 31 dec 2005 23:59:59 gmt<br />\r\ncontent-type: text/html;charset=iso-8859-1<br />\r\ncontent-length: 122<br />\r\n＜html＞<br />\r\n＜head＞<br />\r\n＜title＞wrox homepage＜/title＞<br />\r\n＜/head＞<br />\r\n＜body＞<br />\r\n＜!-- body goes here --＞<br />\r\n＜/body＞<br />\r\n＜/html＞<br />\r\n2．最常用的状态码有：<br />\r\n<br />\r\n◆200 (ok): 找到了该资源，并且一切正常。<br />\r\n◆304 (not modified): 该资源在上次请求之后没有任何修改。这通常用于浏览器的缓存机制。<br />\r\n◆401 (unauthorized): 客户端无权访问该资源。这通常会使得浏览器要求用户输入用户名和密码，以登录到服务器。<br />\r\n◆403 (forbidden): 客户端未能获得授权。这通常是在401之后输入了不正确的用户名或密码。<br />\r\n◆404 (not found): 在指定的位置不存在所申请的资源。\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	&nbsp;\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<span style="color:#ff0000;"><strong>四 完整示例：</strong></span>\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	例子：\r\n</p>\r\n<p style="font-size:14px;background-color:#ffffff;color:#333333;font-family:arial;">\r\n	<br />\r\n<span style="color:#ff0000;"><strong>http get</strong>&nbsp;<br />\r\n</span><br />\r\n发送<br />\r\n<br />\r\nget /demowebservices2.8/service.asmx/cancelorder?userid=string&amp;pwd=string&amp;orderconfirmation=string http/1.1<br />\r\nhost: api.efxnow.com<br />\r\n<br />\r\n回复<br />\r\n<br />\r\nhttp/1.1 200 ok<br />\r\ncontent-type: text/xml; charset=utf-8<br />\r\ncontent-length: length<br />\r\n<br />\r\n&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />\r\n&lt;objplaceorderresponse xmlns="https://api.efxnow.com/webservices2.3"&gt;<br />\r\n&lt;success&gt;boolean&lt;/success&gt;<br />\r\n&lt;errordescription&gt;string&lt;/errordescription&gt;<br />\r\n&lt;errornumber&gt;int&lt;/errornumber&gt;<br />\r\n&lt;customerorderreference&gt;long&lt;/customerorderreference&gt;<br />\r\n&lt;orderconfirmation&gt;string&lt;/orderconfirmation&gt;<br />\r\n&lt;customerdealref&gt;string&lt;/customerdealref&gt;<br />\r\n&lt;/objplaceorderresponse&gt;<br />\r\n<br />\r\n<br />\r\n<br />\r\n<span style="color:#ff0000;"><strong>http post</strong>&nbsp;</span><br />\r\n<br />\r\n发送<br />\r\n<br />\r\npost /demowebservices2.8/service.asmx/cancelorder http/1.1<br />\r\nhost: api.efxnow.com<br />\r\ncontent-type: application/x-www-form-urlencoded<br />\r\ncontent-length: length<br />\r\n<br />\r\nuserid=string&amp;pwd=string&amp;orderconfirmation=string<br />\r\n<br />\r\n回复<br />\r\n<br />\r\nhttp/1.1 200 ok<br />\r\ncontent-type: text/xml; charset=utf-8<br />\r\ncontent-length: length<br />\r\n<br />\r\n&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />\r\n&lt;objplaceorderresponse xmlns="https://api.efxnow.com/webservices2.3"&gt;<br />\r\n&lt;success&gt;boolean&lt;/success&gt;<br />\r\n&lt;errordescription&gt;string&lt;/errordescription&gt;<br />\r\n&lt;errornumber&gt;int&lt;/errornumber&gt;<br />\r\n&lt;customerorderreference&gt;long&lt;/customerorderreference&gt;<br />\r\n&lt;orderconfirmation&gt;string&lt;/orderconfirmation&gt;<br />\r\n&lt;customerdealref&gt;string&lt;/customerdealref&gt;<br />\r\n&lt;/objplaceorderresponse&gt;<br />\r\n<br />\r\n<br />\r\n<br />\r\n<span style="color:#ff0000;"><strong>soap 1.2</strong>&nbsp;</span><br />\r\n<br />\r\n发送<br />\r\n<br />\r\npost /demowebservices2.8/service.asmx http/1.1<br />\r\nhost: api.efxnow.com<br />\r\ncontent-type: application/soap+xml; charset=utf-8<br />\r\ncontent-length: length<br />\r\n<br />\r\n&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />\r\n&lt;soap12:envelope xmlns:xsi="http://www.w3.org/2001/xmlschema-instance" xmlns:xsd="http://www.w3.org/2001/xmlschema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope"&gt;<br />\r\n&lt;soap12:body&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;cancelorder xmlns="https://api.efxnow.com/webservices2.3"&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;userid&gt;string&lt;/userid&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;pwd&gt;string&lt;/pwd&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;orderconfirmation&gt;string&lt;/orderconfirmation&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/cancelorder&gt;<br />\r\n&lt;/soap12:body&gt;<br />\r\n&lt;/soap12:envelope&gt;<br />\r\n<br />\r\n回复<br />\r\n<br />\r\nhttp/1.1 200 ok<br />\r\ncontent-type: application/soap+xml; charset=utf-8<br />\r\ncontent-length: length<br />\r\n<br />\r\n&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />\r\n&lt;soap12:envelope xmlns:xsi="http://www.w3.org/2001/xmlschema-instance" xmlns:xsd="http://www.w3.org/2001/xmlschema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope"&gt;<br />\r\n&lt;soap12:body&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;cancelorderresponse xmlns="https://api.efxnow.com/webservices2.3"&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;cancelorderresult&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;success&gt;boolean&lt;/success&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;errordescription&gt;string&lt;/errordescription&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;errornumber&gt;int&lt;/errornumber&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;customerorderreference&gt;long&lt;/customerorderreference&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;orderconfirmation&gt;string&lt;/orderconfirmation&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;customerdealref&gt;string&lt;/customerdealref&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/cancelorderresult&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/cancelorderresponse&gt;<br />\r\n&lt;/soap12:body&gt;<br />\r\n&lt;/soap12:envelope&gt;\r\n</p>''', '2017-05-28 05:16:35'),
(112, './up_image/img_59a3a8699eb54.jpg', 0, 'php无限极递归代码', '张国福', '', 50, '''&lt;?php<br />\r\n$a=@mysql_connect("localhost","root","root");<br />\r\nif (!$a) {<br />\r\n<span> </span>echo "mysql is wrong";<br />\r\n}<br />\r\n$b=@mysql_select_db("test");<br />\r\nif (!$b) {<br />\r\n<span> </span>echo "db is wrong";<br />\r\n}<br />\r\n<br />\r\n<br />\r\nmysql_query("set names utf8");<br />\r\n$sql="select * from test";<br />\r\n$res=mysql_query($sql);<br />\r\n&nbsp;// var_dump($res);<br />\r\n$arrs=array();<br />\r\nwhile ($row=mysql_fetch_assoc($res)) {<br />\r\n<span> </span>$arrs[]=$row;<br />\r\n}<br />\r\n&nbsp;// print_r($arrs);<br />\r\n<br />\r\n<br />\r\nfunction digui($arrs,$level=0,$pid=0){<br />\r\n<span> </span>static $re_arr=array();<br />\r\n<span> </span>foreach ($arrs as &nbsp;$arr) {<br />\r\n<span> </span>if ($arr[''pid'']==$pid) {<br />\r\n<br />\r\n<br />\r\n<span> </span>$arr[''level'']=$level;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $re_arr[]=$arr;<br />\r\n<span> </span>digui($arrs,$level+1,$arr[''id'']);<br />\r\n<span> </span>}<br />\r\n<br />\r\n<br />\r\n<span> </span>}<br />\r\n&nbsp; &nbsp; return $re_arr;<br />\r\n<br />\r\n<br />\r\n<span> </span>}<br />\r\n<br />\r\n<br />\r\n<span> </span>$l_arr=digui($arrs);<br />\r\nprint_r($l_arr);<br />\r\n?&gt;<br />\r\n&lt;!doctype html&gt;<br />\r\n&lt;html lang="en"&gt;<br />\r\n&lt;head&gt;<br />\r\n&nbsp; &nbsp; &lt;meta charset="utf-8"&gt;<br />\r\n&nbsp; &nbsp; &lt;meta name="viewport"<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt;<br />\r\n&nbsp; &nbsp; &lt;meta http-equiv="x-ua-compatible" content="ie=edge"&gt;<br />\r\n&nbsp; &nbsp; &lt;title&gt;document&lt;/title&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;table align="center" width="600px" bgcolor="pink"&gt;<br />\r\n&nbsp; &nbsp; &lt;?php &nbsp;foreach ($l_arr as $v){?&gt;<br />\r\n&nbsp; &nbsp; &lt;tr&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;td height="20px"&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;?php echo str_repeat("----",$v[''level''])?&gt;<br />\r\n<br />\r\n<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;?php echo $v[''name'']?&gt;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &lt;/td&gt;<br />\r\n&nbsp; &nbsp; &lt;/tr&gt;<br />\r\n&nbsp; &nbsp; &lt;?php &nbsp;} ?&gt;<br />\r\n&lt;/table&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />''', '2017-06-28 05:21:45'),
(113, './up_image/img_59a4018ec10b7.jpg', 0, 'php 中字符串翻转的方法实例代码', '张国福', '本文主要介绍了实现php字符串翻转的方法，具有很好的参考价值', 50, '''<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	<strong>方法一（直接使用php自带函数strrev($str)）</strong>\r\n</p>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	print_r(strrev($str));\r\n</p>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	<strong>使用for循环方式,str_split($str)</strong>\r\n</p>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<table border="0" cellpadding="0" cellspacing="0" style="font-family:monaco, menlo, consolas, &quot;width:797px;color:#333333;border-collapse:separate !important;background:none #f5f5f5 !important;border:1px solid #cccccc !important;margin:0.3em 0px !important;padding:0px !important;font-size:13px !important;">\r\n	<tbody>\r\n		<tr>\r\n			<td style="font-family:monaco, menlo, consolas, &quot;background:none #f7f7f9 !important;vertical-align:baseline !important;font-size:13px !important;color:#afafaf !important;">\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					1\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					2\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					3\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					4\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					5\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					6\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					7\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					8\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					9\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					10\r\n				</div>\r\n			</td>\r\n			<td style="font-family:monaco, menlo, consolas, &quot;background:none !important;border:0px !important;vertical-align:baseline !important;font-size:13px !important;">\r\n				<div style="margin:0px !important;padding:0px !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						$newarrone&nbsp;= [];//初始化一个新的数组\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;$newstrone&nbsp;=&nbsp;'''';//初始化一个新的字符串\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;$newarrone&nbsp;=&nbsp;str_split($str);\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;$arrcount&nbsp;=&nbsp;count($newarrone);\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;for&nbsp;($i=0;&nbsp;$i&nbsp;&lt;&nbsp;$arrcount;&nbsp;$i++) {\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;$newstrone.=$newarrone[$i];\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;}\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;echo&nbsp;"&lt;pre&gt;";\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;print_r($newstrone);\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;echo&nbsp;"&lt;/pre&gt;";\r\n					</div>\r\n				</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	<strong>使用for循环方式,strlen($substr)</strong>\r\n</p>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<table border="0" cellpadding="0" cellspacing="0" style="font-family:monaco, menlo, consolas, &quot;width:797px;color:#333333;border-collapse:separate !important;background:none #f5f5f5 !important;border:1px solid #cccccc !important;margin:0.3em 0px !important;padding:0px !important;font-size:13px !important;">\r\n	<tbody>\r\n		<tr>\r\n			<td style="font-family:monaco, menlo, consolas, &quot;background:none #f7f7f9 !important;vertical-align:baseline !important;font-size:13px !important;color:#afafaf !important;">\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					1\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					2\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					3\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					4\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					5\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					6\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					7\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					8\r\n				</div>\r\n			</td>\r\n			<td style="font-family:monaco, menlo, consolas, &quot;background:none !important;border:0px !important;vertical-align:baseline !important;font-size:13px !important;">\r\n				<div style="margin:0px !important;padding:0px !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						$newstrtwo&nbsp;=&nbsp;'''';//初始化一个新的字符串\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;$arrcounttwo&nbsp;=&nbsp;strlen($str);\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;for&nbsp;($i=1;&nbsp;$i&nbsp;&lt;=&nbsp;$arrcounttwo;&nbsp;$i++) {\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;$newstrtwo.=substr($str, -$i, 1);\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;}\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;echo&nbsp;"&lt;pre&gt;";\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;print_r($newstrtwo)."\\n";\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;echo&nbsp;"&lt;/pre&gt;";\r\n					</div>\r\n				</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	<strong>使用for循环方式,strlen($substr)</strong>\r\n</p>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<table border="0" cellpadding="0" cellspacing="0" style="font-family:monaco, menlo, consolas, &quot;width:797px;color:#333333;border-collapse:separate !important;background:none #f5f5f5 !important;border:1px solid #cccccc !important;margin:0.3em 0px !important;padding:0px !important;font-size:13px !important;">\r\n	<tbody>\r\n		<tr>\r\n			<td style="font-family:monaco, menlo, consolas, &quot;background:none #f7f7f9 !important;vertical-align:baseline !important;font-size:13px !important;color:#afafaf !important;">\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					1\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					2\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					3\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					4\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					5\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					6\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					7\r\n				</div>\r\n				<div style="margin:0px !important;padding:0px 0.5em 0px 1em !important;background:none !important;border:0px !important;text-align:right !important;vertical-align:baseline !important;">\r\n					8\r\n				</div>\r\n			</td>\r\n			<td style="font-family:monaco, menlo, consolas, &quot;background:none !important;border:0px !important;vertical-align:baseline !important;font-size:13px !important;">\r\n				<div style="margin:0px !important;padding:0px !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						$newstrthree&nbsp;=&nbsp;'''';//初始化一个新的字符串\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						$arrcountthree&nbsp;=&nbsp;strlen($str);\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						for&nbsp;($i&nbsp;=&nbsp;$arrcountthree;&nbsp;$i&gt;=0;$i--) {\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						&nbsp;@$newstrthree.=$str[$i];\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						}\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						echo&nbsp;"&lt;pre&gt;";\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						print_r($newstrthree)."\\n";\r\n					</div>\r\n					<div style="margin:0px !important;padding:0px 1em !important;background:none !important;border:0px !important;vertical-align:baseline !important;">\r\n						echo&nbsp;"&lt;/pre&gt;";　\r\n					</div>\r\n				</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;">\r\n	以上就是php 中字符串翻转的方法实例代码的详细内容，更多请关注php中文网其它相关文章！\r\n</p>''', '2017-07-28 11:42:06'),
(114, './up_image/img_59a4242ed42f6.jpg', 0, 'php 中字符串翻转的方法实例代码三种亲测及中文字符串翻转示例代码', '张国福', 'php 中字符串翻转的方法实例代码三种亲测', 50, '''<!--?php<br /--> <br />\r\n<br />\r\n$str=''abcefg'';<br />\r\necho substr($str, 0,1);<br />\r\n$str1='''';<br />\r\n// echo strlen($str);<br />\r\nfor ($i=1;$i&lt;=strlen($str);$i++) {&nbsp;<br />\r\n<span> </span>$str1.=substr($str, -$i,1);<br />\r\n<span> </span>// echo "$i";<br />\r\n}<br />\r\necho "$str1";<br />\r\n// for ($i=0; $i &lt; ; $i++) {&nbsp;<br />\r\n// <span> </span># code...<br />\r\n// }<br />\r\n<br />\r\n<br />\r\nfunction rev($str){<br />\r\n<span> </span>$len=strlen($str);<br />\r\n<span> </span>$str1="";<br />\r\n<span> </span>for ($i=$len; $i &gt;=0 ; $i--) {&nbsp;<br />\r\n<span> </span>$str1.=substr($str, $i,1);<br />\r\n<span> </span>}<br />\r\n<span> </span>return $str1;<br />\r\n}<br />\r\n<br />\r\n<br />\r\n// echo rev($str);<br />\r\n// 注:array_pop从数组 末尾退出,array_push 将数据加载到数组末尾<br />\r\n// array_shif 从数组头部推出 &nbsp; &nbsp;array_unshift将数据加载到头部<br />\r\n$arr=str_split($str,1);<br />\r\n$str1="";<br />\r\nwhile ($v=array_pop($arr)) {<br />\r\n<span> </span>$str1.= $v;<br />\r\n}<br />\r\n<br />\r\n<br />\r\n// print_r($arr1);<br />\r\necho $str1;<br />\r\n<p>\r\n	''\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	<!--?php<br /--> header("content-type:text/html;charset=utf-8");<br />\r\n$str="我是中国的saaa";<br />\r\n// echo "$str";<br />\r\n$len=mb_strlen($str);<br />\r\n// echo "$len";<br />\r\n// $arr=str_split($str);<br />\r\n// print_r($arr);<br />\r\n// echo mb_substr($str, 0,1);<br />\r\nfor ($i=1; $i &lt;$len+1 ; $i++) {&nbsp;<br />\r\n<span> </span><br />\r\n<span> </span>echo $i;<br />\r\n<span> </span>echo mb_substr($str,-$i,1)."<br />\r\n";<br />\r\n}\r\n</p>\r\n<p>\r\n	<br />\r\n</p>\r\n<p>\r\n	for ($i=$len-1; $i &gt;=0 ; $i--) {&nbsp;<br />\r\n<span> </span>echo mb_substr($str, $i,1);<br />\r\n<span> </span>}<br />\r\n</p>', '2017-01-28 14:44:42');
INSERT INTO `article` (`art_id`, `img`, `category_id`, `art_title`, `AUTHORS`, `main`, `order_id`, `content`, `created_at`) VALUES
(115, './up_image/img_59a43cca69508.jpg', 0, 'php闭包(closure)使用详解', '张国福', '本篇文章介绍了，php闭包(closure)的使用介绍，需要的朋友参考下', 50, '''<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	不知不觉发现php已经出到了5.5版本，而自己一直在用php5.2，让我看起来像深山出来的小伙子一样，又土又落后。在我习惯在javascript中使用闭包之后，忽然间对php的闭包打起了兴趣。\r\n</p>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	于是乎在网上下了个wamp集成开发环境，是php5.3版本的（php5.3开始引入了闭包的特性），不得不说wamp安装使用真的很方便。简单配置了一下，开始动手。<br />\r\n&nbsp;\r\n</p>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<strong>匿名函数<br />\r\n</strong>提到闭包就不得不想起匿名函数，也叫闭包函数（closures），貌似php闭包实现主要就是靠它。声明一个匿名函数是这样：\r\n</p>\r\n<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n	<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n	<br />\r\n$func = function() {<br />\r\n<br />\r\n}; //带结束符<br />\r\n</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">可以看到，匿名函数因为没有名字，如果要使用它，需要将其返回给一个变量。匿名函数也像普通函数一样可以声明参数，调用方法也相同：</span><br />\r\n<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n	<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n	<br />\r\n$func = function( $param ) {<br />\r\n&nbsp;&nbsp;&nbsp; echo $param;<br />\r\n};\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		$func( ''some string'' );\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//some string\r\n	</p>\r\n</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">顺便提一下，php在引入闭包之前，也有一个可以创建匿名函数的函数：create function，但是代码逻辑只能写成字符串，这样看起来很晦涩并且不好维护，所以很少有人用。</span><br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">&nbsp;</span>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<strong>实现闭包<br />\r\n</strong>将匿名函数在普通函数中当做参数传入，也可以被返回。这就实现了一个简单的闭包。\r\n</p>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<strong>下边有三个例子<br />\r\n</strong>\r\n</p>\r\n<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n	<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n	<br />\r\n//例一<br />\r\n//在函数里定义一个匿名函数，并且调用它<br />\r\nfunction printstr() {<br />\r\n&nbsp;&nbsp;&nbsp; $func = function( $str ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $str;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; $func( ''some string'' );<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		printstr();\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<p>\r\n		//例二<br />\r\n//在函数中把匿名函数返回，并且调用它<br />\r\nfunction getprintstrfunc() {<br />\r\n&nbsp;&nbsp;&nbsp; $func = function( $str ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $str;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; return $func;<br />\r\n}\r\n	</p>\r\n	<p>\r\n		$printstrfunc = getprintstrfunc();<br />\r\n$printstrfunc( ''some string'' );\r\n	</p>\r\n	<p>\r\n		&nbsp;\r\n	</p>\r\n	<p>\r\n		<br />\r\n//例三<br />\r\n//把匿名函数当做参数传递，并且调用它<br />\r\nfunction callfunc( $func ) {<br />\r\n&nbsp;&nbsp;&nbsp; $func( ''some string'' );<br />\r\n}\r\n	</p>\r\n	<p>\r\n		$printstrfunc = function( $str ) {<br />\r\n&nbsp;&nbsp;&nbsp; echo $str;<br />\r\n};<br />\r\ncallfunc( $printstrfunc );\r\n	</p>\r\n	<p>\r\n		//也可以直接将匿名函数进行传递。如果你了解js，这种写法可能会很熟悉<br />\r\ncallfunc( function( $str ) {<br />\r\n&nbsp;&nbsp;&nbsp; echo $str;<br />\r\n} );\r\n	</p>\r\n</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">连接闭包和外界变量的关键字：use</span><br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">闭包可以保存所在代码块上下文的一些变量和值。php在默认情况下，匿名函数不能调用所在代码块的上下文变量，而需要通过使用use关键字。</span>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	换一个例子看看：\r\n</p>\r\n<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n	<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n	<br />\r\nfunction getmoney() {<br />\r\n&nbsp;&nbsp;&nbsp; $rmb = 1;<br />\r\n&nbsp;&nbsp;&nbsp; $dollar = 6;<br />\r\n&nbsp;&nbsp;&nbsp; $func = function() use ( $rmb ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $dollar;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; $func();<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		getmoney();\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//1<br />\r\n//报错，找不到dorllar变量\r\n	</p>\r\n</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">可以看到，dollar没有在use关键字中声明，在这个匿名函数里也就不能获取到它，所以开发中要注意这个问题。</span><br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">&nbsp;</span>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	有人可能会想到，是否可以在匿名函数中改变上下文的变量，但我发现是不可以的：\r\n</p>\r\n<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n	<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n	<br />\r\nfunction getmoney() {<br />\r\n&nbsp;&nbsp;&nbsp; $rmb = 1;<br />\r\n&nbsp;&nbsp;&nbsp; $func = function() use ( $rmb ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //把$rmb的值加1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $rmb++;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; $func();<br />\r\n&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		getmoney();\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//1<br />\r\n//1\r\n	</p>\r\n</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">啊，原来use所引用的也只不过是变量的一个副本而已。但是我想要完全引用变量，而不是复制。</span>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	要达到这种效果，其实在变量前加一个 &amp; 符号就可以了：\r\n</p>\r\n<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n	<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n	<br />\r\nfunction getmoney() {<br />\r\n&nbsp;&nbsp;&nbsp; $rmb = 1;<br />\r\n&nbsp;&nbsp;&nbsp; $func = function() use ( &amp;$rmb ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //把$rmb的值加1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $rmb++;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; $func();<br />\r\n&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		getmoney();\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//1<br />\r\n//2\r\n	</p>\r\n</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">好，这样匿名函数就可以引用上下文的变量了。如果将匿名函数返回给外界，匿名函数会保存use所引用的变量，而外界则不能得到这些变量，这样形成‘闭包''这个概念可能会更清晰一些。</span>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<strong>根据描述改变一下上面的例子：<br />\r\n</strong>\r\n</p>\r\n<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n	<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n</div>\r\n<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n	<br />\r\nfunction getmoneyfunc() {<br />\r\n&nbsp;&nbsp;&nbsp; $rmb = 1;<br />\r\n&nbsp;&nbsp;&nbsp; $func = function() use ( &amp;$rmb ) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo $rmb;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //把$rmb的值加1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $rmb++;<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp;&nbsp;&nbsp; return $func;<br />\r\n}\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		$getmoney = getmoneyfunc();<br />\r\n$getmoney();<br />\r\n$getmoney();<br />\r\n$getmoney();\r\n	</p>\r\n	<p>\r\n		//输出：<br />\r\n//1<br />\r\n//2<br />\r\n//3\r\n	</p>\r\n</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">总结</span><br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">php闭包的特性并没有太大惊喜，其实用class就可以实现类似甚至强大得多的功能，更不能和js的闭包相提并论，只能期待php以后对闭包支持的改进。不过匿名函数还是挺有用的，比如在使用preg_replace_callback等之类的函数可以不用在外部声明回调函数了。</span>''', '2016-11-28 15:54:50'),
(116, './up_image/img_59a4cc3d9ec17.jpg', 0, 'sql书写规范', '张国福', '', 50, '''\r\n<div style="margin:20px 0px 0px;font-size:14px;font-family:arial;background-color:#ffffff;">\r\n	<p>\r\n		<span style="font-size:18px;">1.使用大小写规范提高词义识别能力</span> \r\n	</p>\r\n	<p>\r\n		&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<span style="font-size:13px;">a.在名称中仅适用字母，数字和下划线<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;b.列名，参数和变量等标量小写<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;c.模式对象名首字母大写</span> \r\n	</p>\r\n	<p>\r\n		<span style="font-size:13px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 模式对象包括表，视图和存储过程等，在创建这些名称时，应当将首字母大写，表示为专有名称。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.保留关键字大写</span> \r\n	</p>\r\n<span style="font-size:13px;"></span> \r\n	<p>\r\n		<br />\r\n<span style="font-size:16px;">2.使用空格提供更好的语言标记区分</span><span style="font-size:16px;"><br />\r\n</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a.等号两边使用空格\r\n	</p>\r\n	<p>\r\n		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在书写赋值语句时，应当在等号两边使用空格分隔，如set @i = 1 比 set @i=1更容易阅读&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.逗号后面使用空格\r\n	</p>\r\n	<p>\r\n		<span style="font-size:18px;">3.使用缩进提高语句的逻辑层次表达能力</span> \r\n	</p>\r\n	<p>\r\n		<span style="font-size:18px;">&nbsp;&nbsp;&nbsp; &nbsp;select *<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from test<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where id=''12''<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; and name=''fred''</span> \r\n	</p>\r\n	<p>\r\n		<span style="font-size:18px;">4. 使用垂直空白道提高关键字与参数的区分能力<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select distinct custname<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; from customers as c&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; where not exists<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select *<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; from orderheader<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; where custid=customers.custid<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )</span> \r\n	</p>\r\n	<p>\r\n		<span style="font-size:18px;">5.使用分组进行语句的段落划分<br />\r\n</span>&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 存在多行sql的情况下，相关语句之间可以直接换行书写，而对于两个步骤之间的语句应当间隔一个空行，需要的话 ，也可以加入一些适当\r\n	</p>\r\n	<p>\r\n		的注释语句.:\r\n	</p>\r\n	<p>\r\n		&nbsp;<br />\r\n<span style="font-size:16px;">&nbsp;use test<br />\r\n&nbsp;<a href="http://lib.csdn.net/base/go" target="_blank">go</a></span> \r\n	</p>\r\n	<p>\r\n		<br />\r\n<span style="font-size:16px;">-- 读取test表的数据<br />\r\nselect *&nbsp;<br />\r\nfrom test<br />\r\n<a href="http://lib.csdn.net/base/go" target="_blank">go</a><br />\r\n</span> \r\n	</p>\r\n</div>\r\n<div style="font-family:arial, console, verdana, " background-color:#ffffff;"=""> <a href="http://blog.csdn.net/fengqingtao2008/article/details/6924613#" target="_blank"></a><a href="http://blog.csdn.net/fengqingtao2008/article/details/6924613#" target="_blank"></a><a href="http://blog.csdn.net/fengqingtao2008/article/details/6924613#" target="_blank"></a><a href="http://blog.csdn.net/fengqingtao2008/article/details/6924613#" target="_blank"></a><a href="http://blog.csdn.net/fengqingtao2008/article/details/6924613#" target="_blank"></a><a href="http://blog.csdn.net/fengqingtao2008/article/details/6924613#" target="_blank"></a> \r\n	</div>\r\n<div style="margin:0px auto;padding:30px 0px 15px;text-align:center;font-family:arial, console, verdana, " background-color:#ffffff;"="">\r\n</div>\r\n''', '2016-11-17 05:04:44'),
(117, './up_image/img_59a517c3b1c1f.jpg', 0, 'json.parse问题解析', '张国福', 'json.parse问题解析', 50, '''\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="background-color:#eeebe7;"><span style="font-size:13px;">parse用于从一个字符串中解析出json对象,如</span></span> \r\n</p>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-size:13px;color:#666666;"><span style="color:#0080ff;font-family:;">var str = ''{"name":"huangxiaojian","age":"23"}''</span><br />\r\n</span> \r\n</p>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-family:" font-size:13px;color:#0080ff;"=""><span>结果：</span></span> \r\n</p>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-family:" font-size:13px;color:#0080ff;"=""><span>json.parse(str)<br />\r\n</span></span> \r\n</p>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-family:" font-size:13px;"=""><span></span></span> \r\n</p>\r\n<div style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<div>\r\n		object\r\n	</div>\r\n</div>\r\n<ol style="font-size:14px;background-color:#ffffff;color:#0080ff;font-family:;">\r\n	<li>\r\n		<span style="color:#881391;">age</span><span>:&nbsp;</span><span style="color:#c41a16;">"23"</span> \r\n	</li>\r\n	<li>\r\n		<span style="color:#881391;">name</span><span>:&nbsp;</span><span style="color:#c41a16;">"huangxiaojian"</span> \r\n	</li>\r\n	<li>\r\n		<span style="color:#881391;">__proto__</span><span>:&nbsp;</span><span style="vertical-align:top;">object</span> \r\n	</li>\r\n</ol>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<br />\r\n</p>\r\n<p style="font-family:arial;font-size:14px;background-color:#ffffff;color:#0080ff;">\r\n	<span style="font-family:" font-size:13px;"=""><span><br />\r\n</span></span> \r\n</p>\r\n<span style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">注意：单引号写在{}外，每个属性名都必须用双引号，否则会抛出异常。</span> \r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-family:" font-size:13px;"=""><span><br />\r\n</span></span> \r\n</p>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-family:" font-size:13px;"=""><span>stringify()用于从一个对象解析出字符串，如<br />\r\n</span></span> \r\n</p>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-family:" font-size:13px;"=""><span><span style="color:#0080ff;">var\r\n a = {a:1,b:2}</span></span></span> \r\n</p>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-family:" font-size:13px;color:#0080ff;"=""><span>结果：</span></span> \r\n</p>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-family:" font-size:13px;color:#0080ff;"=""><span>json.stringify(a)<br />\r\n</span></span> \r\n</p>\r\n<p style="color:#333333;font-family:arial;font-size:14px;background-color:#ffffff;">\r\n	<span style="font-family:" font-size:13px;color:#0080ff;"=""><span>"<span style="color:#c41a16;">{"a":1,"b":2}</span>"</span></span> \r\n</p>\r\n''', '2016-03-28 05:04:25'),
(118, './up_image/img_59a7c0636918c.jpg', 2, '常见面试题', '张国福', '常见面试题', 50, '''<p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">1</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、写出如下程序的输出结果？</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p>\r\n		<span></span>\r\n	</p>\r\n	<p>\r\n		<span style="font-family:宋体;">答案：</span><span>aaaaa</span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">2</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、说明</span></b><b><span style="font-size:14.0pt;">php</span></b><b><span style="font-size:14.0pt;font-family:宋体;">中值传递和引用传递的区别？什么时候使用引用传递比较好？</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">值传递：将变量的<span style="background:yellow;">值</span>复制一份，传给另一个变量，两个变量之间没有联系，修改其中一个变量，另一个变量不会受影响。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">引用传递：将变量的数据地址</span><span>(</span><span style="font-family:宋体;">内存地址</span><span>)</span><span style="font-family:宋体;">，复制一份，传给另一个变量，两个变量指向同一份数据，改变其中任何一个变量的值，另一个变量也会改变。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">什么时候使用“引用传递”？<span style="background:yellow;">在使用较大数据时</span>，使用“引用传递”，可以节省内存开销。</span><span></span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">3</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、写出如下程序的输出结果？</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span><img width="603" height="210" src="file://c:/users/zhangq~1/appdata/local/temp/msohtmlclip1/01/clip_image002.png" /></span>\r\n	</p>\r\n	<p>\r\n		<span style="font-family:宋体;">答案：</span><span>5</span><span style="font-family:宋体;">、</span><span>0</span><span style="font-family:宋体;">、</span><span>1</span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">4</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、什么是面向对象？主要特性是什么？</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">面向对象是一种编程的思想，是软件设计的典范。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">面向对象是可以提高程序的重用性，使程序结构更加清晰。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">主要特性：封装性、继承性、多态性。</span><span></span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">5</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、</span></b><b><span style="font-size:14.0pt;">sessiont</span></b><b><span style="font-size:14.0pt;font-family:宋体;">和</span></b><b><span style="font-size:14.0pt;">cookie</span></b><b><span style="font-size:14.0pt;font-family:宋体;">的区别？请从协议、产生的原因与作用说明？</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>http</span><span style="font-family:宋体;">协议是<span style="background:yellow;">无状态</span>、<span style="background:yellow;">无链接</span>的协议。不能区分客户是从同一个客户端发送的请求。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>session</span><span style="font-family:宋体;">和</span><span>cookie</span><span style="font-family:宋体;">都可以存储用户状态数据；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>session</span><span style="font-family:宋体;">是将用户状态数据存储在<span style="background:yellow;">服务器</span>，</span><span>cookie</span><span style="font-family:宋体;">将用户状态数据存储在<span style="background:yellow;">客户端</span>；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>session</span><span style="font-family:宋体;">相对安全，</span><span>cookie</span><span style="font-family:宋体;">相对不太安全，通过某些手段可以修改</span><span>cookie</span><span style="font-family:宋体;">数据；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>session</span><span style="font-family:宋体;">存储的数据量比较大，</span><span>cookie</span><span style="font-family:宋体;">只能存储</span><span>4k</span><span style="font-family:宋体;">左右的数据；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>session</span><span style="font-family:宋体;">存储的数据类型比较多，</span><span>cookie</span><span style="font-family:宋体;">只能存储字符串数据。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>session</span><span style="font-family:宋体;">依赖</span><span>cookie</span><span style="font-family:宋体;">才能存在；如果</span><span>cookie</span><span style="font-family:宋体;">被禁用，</span><span>session</span><span style="font-family:宋体;">将不能正常使用；</span><span></span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">6</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、</span></b><b><span style="font-size:14.0pt;">http</span></b><b><span style="font-size:14.0pt;font-family:宋体;">协议中常用状态码的含义：</span></b><b><span style="font-size:14.0pt;">200</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、</span></b><b><span style="font-size:14.0pt;">302</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、</span></b><b><span style="font-size:14.0pt;">403</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、</span></b><b><span style="font-size:14.0pt;">404</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、</span></b><b><span style="font-size:14.0pt;">500</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、</span></b><b><span style="font-size:14.0pt;">502</span></b>\r\n	</p>\r\n	<p>\r\n		<span style="font-family:宋体;">一二三四五原则：消息系列、成功系列、重定向系列、请求错误系列、服务器端错误系列。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>200</span><span style="font-family:宋体;">：（成功）服务器已成功处理了请求；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>301</span><span style="font-family:宋体;">：（永久移动）请求的网页已永久移动到新位置；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>302</span><span style="font-family:宋体;">：（临时移动）请求的内容已临时转移到新位置；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>304</span><span style="font-family:宋体;">：（未修改）自从上次请求后，请求的网页未修改过。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>401</span><span style="font-family:宋体;">：（未授权）请求要求身份验证；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>403</span><span style="font-family:宋体;">：（禁止）服务器拒绝请求；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>404</span><span style="font-family:宋体;">：（未找到）服务器找不到请求的网页；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>500</span><span style="font-family:宋体;">：（服务器内部错误）服务器遇到错误，无法完成请求；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>502</span><span style="font-family:宋体;">：（错误网关）服务器作为网关或代理，从上游服务器收到无效响应；</span><span></span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">7</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、</span></b><b><span style="font-size:14.0pt;">include</span></b><b><span style="font-size:14.0pt;font-family:宋体;">和</span></b><b><span style="font-size:14.0pt;">require</span></b><b><span style="font-size:14.0pt;font-family:宋体;">的区别？</span></b><b><span style="font-size:14.0pt;">include</span></b><b><span style="font-size:14.0pt;font-family:宋体;">和</span></b><b><span style="font-size:14.0pt;">include_once</span></b><b><span style="font-size:14.0pt;font-family:宋体;">的区别？</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>include</span><span style="font-family:宋体;">和</span><span>require</span><span style="font-family:宋体;">都是包含文件，当包含的文件不存在时，</span><span>include</span><span style="font-family:宋体;">产生一个警告错误，程序继续向下运行；而</span><span>require</span><span style="font-family:宋体;">产生一个致命错误，程序中止向下运行。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>include_once</span><span style="font-family:宋体;">只包含一次，如果曾经包含过，不再包含。对于函数或类的定义代码非常有用。</span><span></span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">8</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、超全局数组变量</span></b><b><span style="font-size:14.0pt;">$_server</span></b><b><span style="font-size:14.0pt;font-family:宋体;">的应用</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>$_server[‘remote_addr’]</span><span style="font-family:宋体;">，客户端</span><span>ip</span><span style="font-family:宋体;">地址；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>$_server[‘server_addr’]</span><span style="font-family:宋体;">，服务器端</span><span>ip</span><span style="font-family:宋体;">地址；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>$_server[‘server_name’]</span><span style="font-family:宋体;">，服务器域名；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>$_server[‘server_port’]</span><span style="font-family:宋体;">，服务器端口号；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>$_server[‘script_filename’]</span><span style="font-family:宋体;">，获取当前执行的脚本文件名</span><span>(</span><span style="font-family:宋体;">绝对路径</span><span>)</span><span style="font-family:宋体;">；</span><span>e:/a/b/c.html</span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>__file__</span><span style="font-family:宋体;">，获取当前执行的脚本文件名</span><span>(</span><span style="font-family:宋体;">绝对路径</span><span>)</span><span style="font-family:宋体;">；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>$_server[‘script_name’]</span><span style="font-family:宋体;">，获取当前执行的脚本文件名</span><span>(</span><span style="font-family:宋体;">相对路径</span><span>)</span><span style="font-family:宋体;">；</span><span>&nbsp; ./abc/a.html</span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>$_server[‘query_string’]</span><span style="font-family:宋体;">，获取</span><span>?</span><span style="font-family:宋体;">之后的参数字符串；</span><span>index.php?p=home&amp;c=student</span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">9</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、谈谈你对</span></b><b><span style="font-size:14.0pt;">php</span></b><b><span style="font-size:14.0pt;font-family:宋体;">命名空间的理解</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">命名空间是一种<span style="background:yellow;">封装事物</span>的方法；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">命名空间定义的空间是<span style="background:yellow;">虚拟的</span>，不是真实存在的。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">命名空间主要用来解决<span style="background:yellow;">类、函数、常量名</span>称冲突问题。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>php</span><span style="font-family:宋体;">从</span><span>5.3.0</span><span style="font-family:宋体;">及以后的版本才开始支持命名空间。</span><span></span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">10</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、谈谈你对</span></b><b><span style="font-size:14.0pt;">mvc</span></b><b><span style="font-size:14.0pt;font-family:宋体;">的理解？</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>mvc</span><span style="font-family:宋体;">是一种软件设计的典范；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>mvc</span><span style="font-family:宋体;">是一种设计模式，它强制性的将用户的输入、处理和输出分开来；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>mvc</span><span style="font-family:宋体;">是由</span><span>model(</span><span style="font-family:宋体;">模型</span><span>)</span><span style="font-family:宋体;">、</span><span>view(</span><span style="font-family:宋体;">视图</span><span>)</span><span style="font-family:宋体;">、</span><span>controller(</span><span style="font-family:宋体;">控制器</span><span>)</span><span style="font-family:宋体;">三个模块构成；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>model</span><span style="font-family:宋体;">主要负责处理数据，与数据库打交道；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>view</span><span style="font-family:宋体;">主要负责格式化用户数据；</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span>controller</span><span style="font-family:宋体;">主要负责与客户打交道，获取用户请求，并返回结果给用户。</span><span></span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">11</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、请口答以下</span></b><b><span style="font-size:14.0pt;">js</span></b><b><span style="font-size:14.0pt;font-family:宋体;">代码的结果？</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p>\r\n		<span><img width="532" height="123" src="file://c:/users/zhangq~1/appdata/local/temp/msohtmlclip1/01/clip_image004.jpg" /></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">只要“</span><span>||</span><span style="font-family:宋体;">”前面为</span><span>false,</span><span style="font-family:宋体;">不管“</span><span>||</span><span style="font-family:宋体;">”后面是</span><span>true</span><span style="font-family:宋体;">还是</span><span>false</span><span style="font-family:宋体;">，都返回“</span><span>||</span><span style="font-family:宋体;">”后面的值。</span><span></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">只要“</span><span>||</span><span style="font-family:宋体;">”前面为</span><span>true,</span><span style="font-family:宋体;">不管“</span><span>||</span><span style="font-family:宋体;">”后面是</span><span>true</span><span style="font-family:宋体;">还是</span><span>false</span><span style="font-family:宋体;">，都返回“</span><span>||</span><span style="font-family:宋体;">”前面的值。</span><span></span>\r\n	</p>\r\n	<p>\r\n		<span><img width="469" height="128" src="file://c:/users/zhangq~1/appdata/local/temp/msohtmlclip1/01/clip_image006.jpg" /></span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">只要“</span><span>&amp;&amp;</span><span style="font-family:宋体;">”前面是</span><span>false</span><span style="font-family:宋体;">，无论“</span><span>&amp;&amp;</span><span style="font-family:宋体;">”后面是</span><span>true</span><span style="font-family:宋体;">还是</span><span>false</span><span style="font-family:宋体;">，结果都将返“</span><span>&amp;&amp;</span><span style="font-family:宋体;">”前面的值</span><span>;</span>\r\n	</p>\r\n	<p style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n		<span style="font-family:wingdings;">ü<span style="font-size:7pt;line-height:normal;font-family:&quot;">&nbsp; </span></span><span style="font-family:宋体;">只要“</span><span>&amp;&amp;</span><span style="font-family:宋体;">”前面是</span><span>true</span><span style="font-family:宋体;">，无论“</span><span>&amp;&amp;</span><span style="font-family:宋体;">”后面是</span><span>true</span><span style="font-family:宋体;">还是</span><span>false</span><span style="font-family:宋体;">，结果都将返“</span><span>&amp;&amp;</span><span style="font-family:宋体;">”后面的值</span><span>;</span>\r\n	</p>\r\n	<p>\r\n		<span style="font-family:宋体;">提示：由上两个测试可知，逻辑运算符，“</span><span>||</span><span style="font-family:宋体;">”和“</span><span>&amp;&amp;</span><span style="font-family:宋体;">”都是遵行<span style="background:yellow;">短路原则</span>，只要确定符号前面的真假，既可确定返回值。</span><span></span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n	<p>\r\n		<b><span style="font-size:14.0pt;">12</span></b><b><span style="font-size:14.0pt;font-family:宋体;">、请口答以下</span></b><b><span style="font-size:14.0pt;">php</span></b><b><span style="font-size:14.0pt;font-family:宋体;">结果的代码？</span></b><b><span style="font-size:14.0pt;"></span></b>\r\n	</p>\r\n	<p>\r\n		<span><img width="642" height="164" src="file://c:/users/zhangq~1/appdata/local/temp/msohtmlclip1/01/clip_image007.png" /></span>\r\n	</p>\r\n	<p>\r\n		<span>&nbsp;</span>\r\n	</p>\r\n</p>''', '2014-11-28 07:53:07');
INSERT INTO `article` (`art_id`, `img`, `category_id`, `art_title`, `AUTHORS`, `main`, `order_id`, `content`, `created_at`) VALUES
(119, './up_image/img_59aa3add4a887.jpg', 0, 'thinkphp的curd和查询方式介绍', '张国福', '这篇文章主要介绍了thinkphp的curd和查询方式，有需要的朋友可以参考一下', 50, '''<div style="margin:0px 10px;padding:20px 5px 0px;font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<p>\r\n		对数据的读取 read\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$m=new model(''user'');\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$m=m(''user'');\r\n		</p>\r\n		<p>\r\n			select\r\n		</p>\r\n		<p>\r\n			$m-&gt;select();//获取所有数据，以数组形式返回\r\n		</p>\r\n		<p>\r\n			find\r\n		</p>\r\n		<p>\r\n			$m-&gt;find($id);//获取单条数据\r\n		</p>\r\n		<p>\r\n			getfield(字段名)//获取一个具体的字段值\r\n		</p>\r\n		<p>\r\n			$arr=$m-&gt;where(''id=2'')-&gt;getfield(''username'');\r\n		</p>\r\n	</div>\r\n<br />\r\n三、thinkphp 3 创建数据&nbsp;&nbsp;&nbsp; （重点）\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		对数据的添加 create\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$m=new model(''user'');\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$m=m(''user'');\r\n		</p>\r\n		<p>\r\n			$m-&gt;字段名=值\r\n		</p>\r\n		<p>\r\n			$m-&gt;add();\r\n		</p>\r\n	</div>\r\n<br />\r\n返回值是新增的id号\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		四、thinkphp 3 删除数据&nbsp;&nbsp;&nbsp; （重点）\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$m=m(''user'');\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$m-&gt;delete(2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //删除id为2的数据\r\n		</p>\r\n		<p>\r\n			$m-&gt;where(''id=2'')-&gt;delete(); //与上面效果相同，也是删除id为2的数据\r\n		</p>\r\n	</div>\r\n<br />\r\n返回值是受影响行数\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		五、thinkphp 3 更新数据&nbsp;&nbsp;&nbsp; （重点）\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$m=m(''user'');\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$data[''id'']=1;\r\n		</p>\r\n		<p>\r\n			$data[''username'']=''ztz2'';\r\n		</p>\r\n		<p>\r\n			$m-&gt;save($data);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n		</p>\r\n	</div>\r\n<br />\r\n返回值是受影响行数\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		============================================\r\n	</p>\r\n	<p>\r\n		一、普通查询方式\r\n	</p>\r\n	<p>\r\n		二、表达式查询方式\r\n	</p>\r\n	<p>\r\n		三、区间查询\r\n	</p>\r\n	<p>\r\n		四、统计查询\r\n	</p>\r\n	<p>\r\n		五、sql直接查询\r\n	</p>\r\n	<p>\r\n		一、普通查询方式\r\n	</p>\r\n	<p>\r\n		a、字符串\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$arr=$m-&gt;where("sex=0 and username=''gege''")-&gt;find();<br />\r\n	</div>\r\n<br />\r\nb、数组<br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$data[''sex'']=0;\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$data[''username'']=''gege'';\r\n		</p>\r\n		<p>\r\n			$arr=$m-&gt;where($data)-&gt;find();\r\n		</p>\r\n	</div>\r\n<br />\r\n注意：这种方式默认是and的关系，如果使用or关系，需要添加数组值<br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$data[''sex'']=0;\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$data[''username'']=''gege'';\r\n		</p>\r\n		<p>\r\n			$data[''_logic'']=''or'';\r\n		</p>\r\n	</div>\r\n<br />\r\n二、表达式查询方式<br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$data[''id'']=array(''lt'',6);\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$arr=$m-&gt;where($data)-&gt;select();\r\n		</p>\r\n	</div>\r\n<br />\r\neq 等于\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		neq不等于\r\n	</p>\r\n	<p>\r\n		gt 大于\r\n	</p>\r\n	<p>\r\n		egt大于等于\r\n	</p>\r\n	<p>\r\n		lt 小于\r\n	</p>\r\n	<p>\r\n		elt小于等于\r\n	</p>\r\n	<p>\r\n		like 模糊查询\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$data[''username'']=array(''like'',''%ge'');\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$arr=$m-&gt;where($data)-&gt;select();\r\n		</p>\r\n		<p>\r\n			notlike\r\n		</p>\r\n		<p>\r\n			$data[''username'']=array(''notlike'',''%ge%''); //notlike中间没有空格\r\n		</p>\r\n		<p>\r\n			&nbsp;&nbsp;&nbsp; $arr=$m-&gt;where($data)-&gt;select();\r\n		</p>\r\n	</div>\r\n<br />\r\n&nbsp;\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		注意：如果一个字段要匹配多个通配符\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$data[''username'']=array(''like'',array(''%ge%'',''%2%'',''%五%''),''and'');//如果没有第三个值，默认关系是or关系\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$arr=$m-&gt;where($data)-&gt;select();\r\n		</p>\r\n		<p>\r\n			between\r\n		</p>\r\n		<p>\r\n			$data[''id'']=array(''between'',array(5,7));\r\n		</p>\r\n		<p>\r\n			$arr=$m-&gt;where($data)-&gt;select();\r\n		</p>\r\n		<p>\r\n			//select * from `tp_user` where ( (`id` between 5 and 7 ) )\r\n		</p>\r\n		<p>\r\n			$data[''id'']=array(''not between'',array(5,7));//注意，not 和 between中间一定要有空格\r\n		</p>\r\n		<p>\r\n			$arr=$m-&gt;where($data)-&gt;select();\r\n		</p>\r\n		<p>\r\n			in\r\n		</p>\r\n		<p>\r\n			$data[''id'']=array(''in'',array(4,6,7));\r\n		</p>\r\n		<p>\r\n			$arr=$m-&gt;where($data)-&gt;select();\r\n		</p>\r\n		<p>\r\n			//select * from `tp_user` where ( `id` in (4,6,7) )\r\n		</p>\r\n		<p>\r\n			$data[''id'']=array(''not in'',array(4,6,7));\r\n		</p>\r\n		<p>\r\n			$arr=$m-&gt;where($data)-&gt;select();\r\n		</p>\r\n		<p>\r\n			//select * from `tp_user` where ( `id` not in (4,6,7) )\r\n		</p>\r\n	</div>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		三、区间查询\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$data[''id'']=array(array(''gt'',4),array(''lt'',10));//默认关系是 and 的关系\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			//select * from `tp_user` where ( (`id` &gt; 4) and (`id` &lt; 10) )\r\n		</p>\r\n		<p>\r\n			$data[''id'']=array(array(''gt'',4),array(''lt'',10),''or'') //关系就是or的关系\r\n		</p>\r\n		<p>\r\n			$data[''name'']=array(array(''like'',''%2%''),array(''like'',''%五%''),''gege'',''or'');\r\n		</p>\r\n	</div>\r\n<br />\r\n四、统计查询\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		count //获取个数\r\n	</p>\r\n	<p>\r\n		max&nbsp;&nbsp; //获取最大数\r\n	</p>\r\n	<p>\r\n		min&nbsp;&nbsp; //获取最小数\r\n	</p>\r\n	<p>\r\n		avg&nbsp;&nbsp; //获取平均数\r\n	</p>\r\n	<p>\r\n		sum&nbsp;&nbsp; //获取总和\r\n	</p>\r\n	<p>\r\n		五、sql直接查询\r\n	</p>\r\n	<p>\r\n		a、query 主要数处理读取数据的\r\n	</p>\r\n	<p>\r\n		成功返回数据的结果集\r\n	</p>\r\n	<p>\r\n		失败返回boolean false\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$m=m();\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$result=$m-&gt;query("select *&nbsp; from t_user where id &gt;50");\r\n		</p>\r\n		<p>\r\n			var_dump($result);\r\n		</p>\r\n	</div>\r\n<br />\r\nb、execute 用于更新个写入操作\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<p>\r\n		成功返回影响行数\r\n	</p>\r\n	<p>\r\n		失败返回boolean false\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n$m=m();\r\n		<p>\r\n			<br />\r\n		</p>\r\n		<p>\r\n			$result=$m-&gt;execute("insert into t_user(`username`) values(''ztz3'')");\r\n		</p>\r\n		<p>\r\n			var_dump($result);\r\n		</p>\r\n	</div>\r\n	<p>\r\n		<br />\r\n	</p>\r\n</div>\r\n<div style="margin:0px;padding:10px 20px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<h4 style="font-size:14px;color:#006699;">\r\n		您可能感兴趣的文章:\r\n	</h4>\r\n	<ul>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/51538.htm" target="_blank">thinkphp多表联合查询的常用方法</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/56846.htm" target="_blank">thinkphp实现like模糊查询实例</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/52811.htm" target="_blank">thinkphp学习笔记之多表查询</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/56983.htm" target="_blank">thinkphp查询语句与关联查询用法实例</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/51674.htm" target="_blank">thinkphp视图查询详解</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/54294.htm" target="_blank">thinkphp查询返回简单字段数组的方法</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/57927.htm" target="_blank">thinkphp数据查询和遍历数组实例</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/54207.htm" target="_blank">thinkphp中的常用查询语言汇总</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/51579.htm" target="_blank">thinkphp采用get方式获取中文参数查询无结果的解决方法</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/51566.htm" target="_blank">thinkphp使用mongodb数据库实现多条件查询方法</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/58104.htm" target="_blank">thinkphp中关联查询实例</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/99144.htm" target="_blank">thinkphp简单实现多个子查询语句的方法</a>\r\n		</li>\r\n	</ul>\r\n</div>''', '2015-05-08 05:18:23'),
(120, './up_image/img_59aa3b25c49ed.jpg', 0, ' tp5.0框架中简单curd操作和查询方式介绍', '张国福', '这篇文章主要介绍了thinkphp的curd和查询方式，有需要的朋友可以参考一下', 50, '''<div style="margin:0px 10px;padding:20px 5px 0px;font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<p>\r\n		<div style="margin:35px 0px;font-size:15px;color:#555555;font-family:&quot;">\r\n			<p>\r\n				第一步：在浏览器中运行框架，完毕后。在application/index中新建model目录和view目录(view目录里并建index目录)。然后在application里的database.<a href="http://lib.csdn.net/base/php" target="_blank">php</a>里配置<a href="http://lib.csdn.net/base/mysql" target="_blank">数据库</a>名 用户名 密码。\r\n			</p>\r\n			<p>\r\n				第二步:在model目录里新建user.<a href="http://lib.csdn.net/base/php" target="_blank">php</a>模型层.\r\n			</p>\r\n			<p>\r\n				user.php中内容为:\r\n			</p>\r\n			<p>\r\n				&lt;?php&nbsp;<br />\r\nnamespace app\\index\\model;<br />\r\n<br />\r\n<br />\r\n<br />\r\nuse think\\db;//引入db<br />\r\nuse think\\model;//引入model<br />\r\n<br />\r\n<br />\r\n<br />\r\nclass user extends model<br />\r\n{<br />\r\n<br />\r\nprotected $table=''user'';//表名<br />\r\n<br />\r\n<br />\r\n//增加<br />\r\nfunction insertdata($data)<br />\r\n{<br />\r\n<br />\r\nreturn db::table($this-&gt;table)-&gt;insertgetid($data);<br />\r\n}<br />\r\n//查询<br />\r\nfunction show()<br />\r\n{<br />\r\nreturn db::table($this-&gt;table)-&gt;select();&nbsp;&nbsp; &nbsp;<br />\r\n}<br />\r\n//删除<br />\r\nfunction deletedata($id)<br />\r\n{<br />\r\nreturn db::table($this-&gt;table)-&gt;where(''uid'',''='',$id)-&gt;delete();&nbsp;&nbsp; &nbsp;<br />\r\n}<br />\r\n//查询单条<br />\r\nfunction finddata($id)<br />\r\n{<br />\r\nreturn db::table($this-&gt;table)-&gt;where(''uid'',''='',$id)-&gt;find();&nbsp;&nbsp; &nbsp;<br />\r\n}<br />\r\n//修改<br />\r\nfunction updatedata($data,$id)<br />\r\n{<br />\r\nreturn db::table($this-&gt;table)-&gt;where(''uid'',''='',$id)-&gt;update($data);&nbsp;&nbsp; &nbsp;<br />\r\n}<br />\r\n}<br />\r\n?&gt;\r\n			</p>\r\n			<p>\r\n				第三步:controller目录里控制器index.php里面内容为:\r\n			</p>\r\n			<p>\r\n				&lt;?php<br />\r\nnamespace app\\index\\controller;<br />\r\n<br />\r\n<br />\r\nuse think\\controller;//引入控制器<br />\r\nuse think\\request;//引入request<br />\r\nuse app\\index\\model\\user;//引入模型层<br />\r\nheader("content-type:text/html;charset=utf-8");//防乱码<br />\r\nclass index<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; //表单页面<br />\r\n&nbsp;&nbsp;&nbsp; public function index()<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //echo 123;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //return ''&lt;style type="text/css"&gt;*{ padding: 0; margin: 0; } .think_default_text{ padding: 4px 48px;} a{color:#2e5cd5;cursor: pointer;text-decoration: none} a:hover{text-decoration:underline; } body{ background: #fff; font-family: "century gothic","microsoft yahei"; color: #333;font-size:18px} h1{ font-size: 100px; font-weight: normal; margin-bottom: 12px; } p{ line-height: 1.6em; font-size: 42px }&lt;/style&gt;&lt;div style="padding: 24px 48px;"&gt; &lt;h1&gt;:)&lt;/h1&gt;&lt;p&gt; thinkphp v5&lt;br/&gt;&lt;span style="font-size:30px"&gt;十年磨一剑 - 为api开发设计的高性能框架&lt;/span&gt;&lt;/p&gt;&lt;span style="font-size:22px;"&gt;[ v5.0 版本由 &lt;a href="http://www.qiniu.com" target="qiniu"&gt;七牛云&lt;/a&gt; 独家赞助发布 ]&lt;/span&gt;&lt;/div&gt;&lt;script type="text/<a href="http://lib.csdn.net/base/javascript" target="_blank">javascript</a>" src="http://tajs.qq.com/stats?sid=9347272" charset="utf-8"&gt;&lt;/script&gt;&lt;script type="text/<a href="http://lib.csdn.net/base/javascript" target="_blank">javascript</a>" src="http://ad.topthink.com/public/static/client.<a href="http://lib.csdn.net/base/javascript" target="_blank">js</a>"&gt;&lt;/script&gt;&lt;thinkad id="ad_bd568ce7058a1091"&gt;&lt;/thinkad&gt;'';<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return view();<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; //添加<br />\r\n&nbsp;&nbsp;&nbsp; public function insert()<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $request=request::instance();//调用request中instance方法<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $data=$request-&gt;post();//接值<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //print_r($data);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $user=new user;//实例化model<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $result=$user-&gt;insertdata($data);//执行添加语句<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if($result)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return redirect(''index/show'');<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //echo "&lt;script&gt;alert(''新增成功'');localtion.href=''{:url(''index/show'')}''&lt;/script&gt;";<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //$this-&gt;success(''新增成功'',''index/show'');<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;error(''新增失败'');<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; //展示<br />\r\n&nbsp;&nbsp; public function show()<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; $user=new user;//实例化model<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; $arr=$user-&gt;show();//执行查询<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; return view(''show'',[''arr''=&gt;$arr]);<br />\r\n&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; //删除<br />\r\n&nbsp;&nbsp; public function delete()<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp; $request=request::instance();<br />\r\n&nbsp;&nbsp; $id=$request-&gt;get(''id'');<br />\r\n&nbsp;&nbsp; $user=new user;<br />\r\n&nbsp;&nbsp; $result=$user-&gt;deletedata($id);<br />\r\n&nbsp;&nbsp; if($result)<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; return redirect(''index/show'');<br />\r\n&nbsp;&nbsp; }else{<br />\r\n&nbsp;&nbsp;&nbsp; $this-&gt;error(''删除失败'');<br />\r\n&nbsp;&nbsp; }&nbsp;<br />\r\n&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; //修改页面<br />\r\n&nbsp;&nbsp; public function update()<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; $request=request::instance();<br />\r\n&nbsp;&nbsp;&nbsp; $id=$request-&gt;get(''id'');<br />\r\n&nbsp;&nbsp;&nbsp; $user=new user;<br />\r\n&nbsp;&nbsp;&nbsp; $res=$user-&gt;finddata($id);//查询单条<br />\r\n&nbsp;&nbsp;&nbsp; //print_r($res);die;<br />\r\n&nbsp;&nbsp;&nbsp; return view(''update'',[''res''=&gt;$res]);<br />\r\n&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; //执行修改<br />\r\n&nbsp;&nbsp; public function save()<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; $request=request::instance();<br />\r\n&nbsp;&nbsp;&nbsp; $id=$request-&gt;post(''uid'');<br />\r\n&nbsp;&nbsp;&nbsp; $request=request::instance();<br />\r\n&nbsp;&nbsp;&nbsp; $data=$request-&gt;post();//接修改之后的数据<br />\r\n&nbsp;&nbsp;&nbsp; $user=new user;<br />\r\n&nbsp;&nbsp;&nbsp; $result=$user-&gt;updatedata($data,$id);//修该语句<br />\r\n&nbsp;&nbsp;&nbsp; if($result)<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; return redirect(''index/show'');<br />\r\n&nbsp;&nbsp;&nbsp; }else{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;error(''修改失败'');<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n<br />\r\n<br />\r\n&nbsp;&nbsp; }<br />\r\n<br />\r\n}<br />\r\n<br />\r\n&nbsp;第四步:在视图层index目录里新建index.html show.html update.html里面内容分别为:\r\n			</p>\r\n			<p>\r\n				index.html中:\r\n			</p>\r\n			<p>\r\n				&lt;!doctype html public "-//w3c//dtd xhtml 1.0 transitional//en" "http://www.w3.org/tr/xhtml1/dtd/xhtml1-transitional.dtd"&gt;<br />\r\n&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt;<br />\r\n&lt;head&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;title&gt;用户注册&lt;/title&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;center&gt;<br />\r\n&lt;form action="{:url(''index/insert'')}" method="post"&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;table&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;用户名&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;input type="text" name="username"/&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;密码&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;input type="password" name="password" /&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;input type="submit" value="提交" /&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/table&gt;<br />\r\n&lt;/form&gt;<br />\r\n&lt;/center&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;\r\n			</p>\r\n			<p>\r\n				show.html中:\r\n			</p>\r\n			<p>\r\n				&lt;!doctype html public "-//w3c//dtd xhtml 1.0 transitional//en" "http://www.w3.org/tr/xhtml1/dtd/xhtml1-transitional.dtd"&gt;<br />\r\n&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt;<br />\r\n&lt;head&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;title&gt;用户列表&lt;/title&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;center&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;table&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;id&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;用户名&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;密码&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;操作&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {volist name="arr" id="vo"}<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;{$vo.uid}&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;{$vo.username}&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;{$vo.password}&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;a href="delete?id={$vo.uid}"&gt;删除&lt;/a&gt;||&lt;a href="update?id={$vo.uid}"&gt;修改&lt;/a&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {/volist}<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/table&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/center&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;\r\n			</p>\r\n			<p>\r\n				update.html中:\r\n			</p>\r\n			<p>\r\n				&lt;!doctype html public "-//w3c//dtd xhtml 1.0 transitional//en" "http://www.w3.org/tr/xhtml1/dtd/xhtml1-transitional.dtd"&gt;<br />\r\n&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt;<br />\r\n&lt;head&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;title&gt;修改信息&lt;/title&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&nbsp;&lt;center&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;form action="{:url(''index/save'')}" method="post"&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;input type="hidden" name="uid" value="{$res[''uid'']}"/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;table&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;input type="text" name="uid" value="{$res[''uid'']}"/&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;&nbsp; --&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;用户名&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;input type="text" name="username" value="{$res[''username'']}"/&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;密码&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;input type="password" name="password" value="{$res[''password'']}" /&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;input type="submit" value="修改" /&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/table&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;/form&gt;<br />\r\n&nbsp;&lt;/center&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;\r\n			</p>\r\n			<p>\r\n				注意:tp5.0中路由配置规则是在route.php中写入return[''hello/[:name]''=&gt;''index/hello'',]//其中index是控制器名，hello是方法名\r\n			</p>\r\n		</div>\r\n		<div style="font-family:&quot;">\r\n			<a href="http://blog.csdn.net/tianjingang1/article/details/65998921#" target="_blank"></a><a href="http://blog.csdn.net/tianjingang1/article/details/65998921#" target="_blank"></a><a href="http://blog.csdn.net/tianjingang1/article/details/65998921#" target="_blank"></a><a href="http://blog.csdn.net/tianjingang1/article/details/65998921#" target="_blank"></a><a href="http://blog.csdn.net/tianjingang1/article/details/65998921#" target="_blank"></a><a href="http://blog.csdn.net/tianjingang1/article/details/65998921#" target="_blank"></a>\r\n		</div>\r\n		<div style="text-align:center;font-family:&quot;">\r\n			顶0&nbsp;踩0\r\n		</div>\r\n	</p>\r\n</div>\r\n<div style="margin:0px;padding:10px 20px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<h4 style="font-size:14px;color:#006699;">\r\n	</h4>\r\n	<ul>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/51538.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/56846.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/52811.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/56983.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/51674.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/54294.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/57927.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/54207.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/51579.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/51566.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/58104.htm" target="_blank"></a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/99144.htm" target="_blank"></a> \r\n		</li>\r\n	</ul>\r\n</div>''', '2017-02-02 05:01:25');
INSERT INTO `article` (`art_id`, `img`, `category_id`, `art_title`, `AUTHORS`, `main`, `order_id`, `content`, `created_at`) VALUES
(121, './up_image/img_59aa3b93bcf8f.jpg', 0, ' laravel数据库操作之-增删改查curd操作', '张国福', '数据库增删改查curd操作', 50, '''<div style="margin:0px auto;padding:30px 0px 15px;text-align:center;font-family:arial, console, verdana, &quot;background-color:#ffffff;">\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>一、selects</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		检索表中的所有行\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;get();<br />\r\nforeach ($users as $user)<br />\r\n{<br />\r\nvar_dump($user-&gt;name);<br />\r\n}\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>从表检索单个行<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$user = db::table(''users'')-&gt;where(''name'', ''john'')-&gt;first();<br />\r\nvar_dump($user-&gt;name);<br />\r\n	</div>\r\n<br />\r\n<strong>检索单个列的行<br />\r\n</strong>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$name = db::table(''users'')-&gt;where(''name'', ''john'')-&gt;pluck(''name'');<br />\r\n	</div>\r\n<br />\r\n<strong>检索一个列值列表<br />\r\n</strong>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$roles = db::table(''roles'')-&gt;lists(''title'');<br />\r\n	</div>\r\n<br />\r\n<strong>该方法将返回一个数组标题的作用。你也可以指定一个自定义的键列返回的数组<br />\r\n</strong>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$roles = db::table(''roles'')-&gt;lists(''title'', ''name'');<br />\r\n	</div>\r\n<br />\r\n<strong>指定一个select子句<br />\r\n</strong>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;select(''name'', ''email'')-&gt;get();<br />\r\n　$users = db::table(''users'')-&gt;distinct()-&gt;get();<br />\r\n　$users = db::table(''users'')-&gt;select(''name as user_name'')-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>select子句添加到一个现有的查询$query = db::table(''users'')-&gt;select(''name'');<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = $query-&gt;addselect(''age'')-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>where<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;where(''votes'', ''&gt;'', 100)-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>or<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;where(''votes'', ''&gt;'', 100)-&gt;orwhere(''name'', ''john'')-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>where between</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;wherebetween(''votes'', array(1, 100))-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>where not between</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;wherenotbetween(''votes'', array(1, 100))-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>where in with an array</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;wherein(''id'', array(1, 2, 3))-&gt;get();<br />\r\n$users = db::table(''users'')-&gt;wherenotin(''id'', array(1, 2, 3))-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>using where null to find records with unset values<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;wherenull(''updated_at'')-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>order by, group by, and having<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;orderby(''name'', ''desc'')-&gt;groupby(''count'')-&gt;having(''count'', ''&gt;'', 100)-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>offset &amp; limit</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;skip(10)-&gt;take(5)-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>二、连接</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>joins</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		查询构建器也可以用来编写连接语句。看看下面的例子:\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>basic join statement</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')<br />\r\n　　-&gt;join(''contacts'', ''users.id'', ''='', ''contacts.user_id'')<br />\r\n　　-&gt;join(''orders'', ''users.id'', ''='', ''orders.user_id'')<br />\r\n　　-&gt;select(''users.id'', ''contacts.phone'', ''orders.price'')<br />\r\n　　-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>左连接语句</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')<br />\r\n　　-&gt;leftjoin(''posts'', ''users.id'', ''='', ''posts.user_id'')<br />\r\n　　-&gt;get();<br />\r\n　　db::table(''users'')<br />\r\n　　-&gt;join(''contacts'', function($join)<br />\r\n　　{<br />\r\n　　$join-&gt;on(''users.id'', ''='', ''contacts.user_id'')-&gt;oron(...);<br />\r\n　　})<br />\r\n　　-&gt;get();<br />\r\n　　db::table(''users'')<br />\r\n　　-&gt;join(''contacts'', function($join)<br />\r\n　　{<br />\r\n　　$join-&gt;on(''users.id'', ''='', ''contacts.user_id'')<br />\r\n　　-&gt;where(''contacts.user_id'', ''&gt;'', 5);<br />\r\n　　})<br />\r\n　　-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>三、分组</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		　　有时候,您可能需要创建更高级的where子句,如“存在”或嵌套参数分组。laravel query builder可以处理这些:\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')<br />\r\n-&gt;where(''name'', ''='', ''john'')<br />\r\n-&gt;orwhere(function($query)<br />\r\n{<br />\r\n$query-&gt;where(''votes'', ''&gt;'', 100)<br />\r\n-&gt;where(''title'', ''&lt;&gt;'', ''admin'');<br />\r\n})<br />\r\n-&gt;get();<br />\r\n	</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">　　上面的查询将产生以下sql:</span><br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n　　select * from users where name = ''john'' or (votes &gt; 100 and title&nbsp;<br />\r\n&lt;&gt; ''admin'')<br />\r\n　　exists statements<br />\r\n　　db::table(''users'')<br />\r\n　　-&gt;whereexists(function($query)<br />\r\n　　{<br />\r\n　　$query-&gt;select(db::raw(1))<br />\r\n　　-&gt;from(''orders'')<br />\r\n　　-&gt;whereraw(''orders.user_id = users.id'');<br />\r\n　　})<br />\r\n　　-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		上面的查询将产生以下sql:\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\nselect * from userswhere exists (<br />\r\nselect 1 from orders where orders.user_id = users.id<br />\r\n)<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>四、聚合</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		查询构建器还提供了各种聚合方法,如统计,马克斯,min,avg和总和。\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		using aggregate methods\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;count();<br />\r\n$price = db::table(''orders'')-&gt;max(''price'');<br />\r\n$price = db::table(''orders'')-&gt;min(''price'');<br />\r\n$price = db::table(''orders'')-&gt;avg(''price'');<br />\r\n$total = db::table(''users'')-&gt;sum(''votes'');<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>raw expressions</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		有时您可能需要使用一个原始表达式的查询。这些表达式将注入的查询字符串,所以小心不要创建任何sql注入点!创建一个原始表达式,可以使用db:rawmethod:\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>using a raw expression</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')<br />\r\n-&gt;select(db::raw(''count(*) as user_count, status''))<br />\r\n-&gt;where(''status'', ''&lt;&gt;'', 1)<br />\r\n-&gt;groupby(''status'')<br />\r\n-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>递增或递减一个列的值<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')-&gt;increment(''votes'');<br />\r\ndb::table(''users'')-&gt;increment(''votes'', 5);<br />\r\ndb::table(''users'')-&gt;decrement(''votes'');<br />\r\ndb::table(''users'')-&gt;decrement(''votes'', 5);<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>您还可以指定额外的列更新:<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n　　db::table(''users'')-&gt;increment(''votes'', 1, array(''name'' =&gt; ''john''));<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		inserts\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>将记录插入表</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')-&gt;insert(<br />\r\narray(''email'' =&gt; ''john@example.com'', ''votes'' =&gt; 0)<br />\r\n);<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>将记录插入表自动增加的id</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		如果表,有一个自动递增的id字段使用insertgetid插入一个记录和检索id:\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$id = db::table(''users'')-&gt;insertgetid(<br />\r\narray(''email'' =&gt; ''john@example.com'', ''votes'' =&gt; 0)<br />\r\n);<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		注意:当使用postgresql insertgetid方法预计,自增列被命名为“id”。\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>多个记录插入到表中<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')-&gt;insert(array(<br />\r\narray(''email'' =&gt; ''taylor@example.com'', ''votes'' =&gt; 0),<br />\r\narray(''email'' =&gt; ''dayle@example.com'', ''votes'' =&gt; 0),<br />\r\n));<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>四、updates</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		更新一个表中的记录\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')<br />\r\n-&gt;where(''id'', 1)<br />\r\n-&gt;update(array(''votes'' =&gt; 1));<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>五、　deletes</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>删除表中的记录<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')-&gt;where(''votes'', ''&lt;'', 100)-&gt;delete();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>删除表中的所有记录<br />\r\n</strong>\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')-&gt;delete();<br />\r\n	</div>\r\n<br />\r\n<strong>删除一个表<br />\r\n</strong>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')-&gt;truncate();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>六、unions</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		查询构建器还提供了一种快速的方法来“联盟”两个查询:\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n　　$first = db::table(''users'')-&gt;wherenull(''first_name'');<br />\r\n　　$users =&nbsp;<br />\r\ndb::table(''users'')-&gt;wherenull(''last_name'')-&gt;union($first)-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		　　unionall方法也可以,有相同的方法签名。\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		　　pessimistic locking\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		　　查询构建器包括一些“悲观锁定”功能来帮助你做你的select语句。　　运行select语句“共享锁”,你可以使用sharedlock方法查询:\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\ndb::table(''users'')-&gt;where(''votes'', ''&gt;'',&nbsp;<br />\r\n100)-&gt;sharedlock()-&gt;get();<br />\r\n	</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">更新“锁”在一个select语句,您可以使用lockforupdate方法查询:</span><br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n　db::table(''users'')-&gt;where(''votes'', ''&gt;'', 100)-&gt;lockforupdate()-&gt;get();<br />\r\n	</div>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		<strong>七、缓存查询</strong>\r\n	</p>\r\n	<p style="font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n		　　你可以轻松地缓存查询的结果使用记忆法:\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;remember(10)-&gt;get();<br />\r\n	</div>\r\n<br />\r\n<span style="font-family:tahoma, arial, 宋体;font-size:14px;background-color:#ffffff;">　　在本例中,查询的结果将为十分钟被缓存。查询结果缓存时,不会对数据库运行,结果将从默认的缓存加载驱动程序指定您的应用程序。　　如果您使用的是支持缓存的司机,还可以添加标签来缓存:</span><br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;font-size:14px;font-family:tahoma, arial, 宋体;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;font-size:14px;background:#ddedfb;border:1px solid #0099cc;font-family:tahoma, arial, 宋体;">\r\n		<br />\r\n$users = db::table(''users'')-&gt;cachetags(array(''people'', ''authors''))-&gt;remember(10)-&gt;get();\r\n	</div>\r\n<br />\r\n</div>''', '2017-05-02 05:03:15'),
(122, './up_image/img_59aa75159e728.jpg', 2, '利用sql注入漏洞登录后台的实现方法', '张国福', '工作需要，得好好补习下关于web安全方面的相关知识，故撰此文，权当总结，别无它意。读这篇文章，我假设', 50, '''<div style="margin:0px 10px;padding:20px 5px 0px;font-size:14px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<strong>一、sql注入的步骤</strong>&nbsp;<br />\r\na) 寻找注入点(如：登录界面、留言板等)&nbsp;<br />\r\nb) 用户自己构造sql语句(如：'' or 1=1#，后面会讲解)&nbsp;<br />\r\nc) 将sql语句发送给数据库管理系统(dbms)&nbsp;<br />\r\nd) dbms接收请求，并将该请求解释成机器代码指令，执行必要的存取操作&nbsp;<br />\r\ne) dbms接受返回的结果，并处理，返回给用户&nbsp;<br />\r\n因为用户构造了特殊的sql语句，必定返回特殊的结果(只要你的sql语句够灵活的话)。&nbsp;<br />\r\n下面，我通过一个实例具体来演示下sql注入&nbsp;<br />\r\n<strong>二、sql注入实例详解(以上测试均假设服务器未开启magic_quote_gpc)&nbsp;<br />\r\n</strong>1) 前期准备工作&nbsp;<br />\r\n先来演示通过sql注入漏洞，登入后台管理员界面&nbsp;<br />\r\n首先，创建一张试验用的数据表：&nbsp;<br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\ncreate table `users` (&nbsp;<br />\r\n`id` int(11) not null auto_increment,&nbsp;<br />\r\n`username` varchar(64) not null,&nbsp;<br />\r\n`password` varchar(64) not null,&nbsp;<br />\r\n`email` varchar(64) not null,&nbsp;<br />\r\nprimary key (`id`),&nbsp;<br />\r\nunique key `username` (`username`)&nbsp;<br />\r\n) engine=myisam auto_increment=3 default charset=latin1;&nbsp;<br />\r\n	</div>\r\n<br />\r\n添加一条记录用于测试：&nbsp;<br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\ninsert into users (username,password,email)&nbsp;<br />\r\nvalues(''marcofly'',md5(''test''),''marcofly@test.com'');&nbsp;<br />\r\n	</div>\r\n<br />\r\n接下来，贴上登录界面的源代码：&nbsp;<br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n&lt;html&gt;&nbsp;<br />\r\n&lt;head&gt;&nbsp;<br />\r\n&lt;title&gt;sql注入演示&lt;/title&gt;&nbsp;<br />\r\n&lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;&nbsp;<br />\r\n&lt;/head&gt;&nbsp;<br />\r\n&lt;body &gt;&nbsp;<br />\r\n&lt;form action="validate.php" method="post"&gt;&nbsp;<br />\r\n&lt;fieldset &gt;&nbsp;<br />\r\n&lt;legend&gt;sql注入演示&lt;/legend&gt;&nbsp;<br />\r\n&lt;table&gt;&nbsp;<br />\r\n&lt;tr&gt;&nbsp;<br />\r\n&lt;td&gt;用户名：&lt;/td&gt;&lt;td&gt;&lt;input type="text" name="username"&gt;&lt;/td&gt;&nbsp;<br />\r\n&lt;/tr&gt;&nbsp;<br />\r\n&lt;tr&gt;&nbsp;<br />\r\n&lt;td&gt;密&nbsp;&nbsp;码：&lt;/td&gt;&lt;td&gt;&lt;input type="text" name="password"&gt;&lt;/td&gt;&nbsp;<br />\r\n&lt;/tr&gt;&nbsp;<br />\r\n&lt;tr&gt;&nbsp;<br />\r\n&lt;td&gt;&lt;input type="submit" value="提交"&gt;&lt;/td&gt;&lt;td&gt;&lt;input type="reset" value="重置"&gt;&lt;/td&gt;&nbsp;<br />\r\n&lt;/tr&gt;&nbsp;<br />\r\n&lt;/table&gt;&nbsp;<br />\r\n&lt;/fieldset&gt;&nbsp;<br />\r\n&lt;/form&gt;&nbsp;<br />\r\n&lt;/body&gt;&nbsp;<br />\r\n&lt;/html&gt;&nbsp;<br />\r\n	</div>\r\n<br />\r\n附上效果图：&nbsp;<br />\r\n	<p>\r\n		<img alt="" src="http://files.jb51.net/upload/201201/20120112214252290.png" />\r\n	</p>\r\n当用户点击提交按钮的时候，将会把表单数据提交给validate.php页面，validate.php页面用来判断用户输入的用户名和密码有没有都符合要求（这一步至关重要，也往往是sql漏洞所在）&nbsp;<br />\r\n代码如下：&nbsp;<br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\n&lt;html&gt;&nbsp;<br />\r\n&lt;head&gt;&nbsp;<br />\r\n&lt;title&gt;登录验证&lt;/title&gt;&nbsp;<br />\r\n&lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;&nbsp;<br />\r\n&lt;/head&gt;&nbsp;<br />\r\n&lt;body&gt;&nbsp;<br />\r\n&lt;?php&nbsp;<br />\r\n$conn=@mysql_connect("localhost",''root'','''') or die("数据库连接失败！");;&nbsp;<br />\r\nmysql_select_db("injection",$conn) or die("您要选择的数据库不存在");&nbsp;<br />\r\n$name=$_post[''username''];&nbsp;<br />\r\n$pwd=$_post[''password''];&nbsp;<br />\r\n$sql="select * from users where username=''$name'' and password=''$pwd''";&nbsp;<br />\r\n$query=mysql_query($sql);&nbsp;<br />\r\n$arr=mysql_fetch_array($query);&nbsp;<br />\r\nif(is_array($arr)){&nbsp;<br />\r\nheader("location:manager.php");&nbsp;<br />\r\n}else{&nbsp;<br />\r\necho "您的用户名或密码输入有误，&lt;a href=\\"login.php\\"&gt;请重新登录！&lt;/a&gt;";&nbsp;<br />\r\n}&nbsp;<br />\r\n?&gt;&nbsp;<br />\r\n&lt;/body&gt;&nbsp;<br />\r\n&lt;/html&gt;&nbsp;<br />\r\n	</div>\r\n<br />\r\n注意到了没有，我们直接将用户提交过来的数据(用户名和密码)直接拿去执行，并没有实现进行特殊字符过滤，待会你们将明白，这是致命的。&nbsp;<br />\r\n代码分析：如果，用户名和密码都匹配成功的话，将跳转到管理员操作界面(manager.php)，不成功，则给出友好提示信息。&nbsp;<br />\r\n登录成功的界面：&nbsp;<br />\r\n	<p>\r\n		<img alt="" src="http://files.jb51.net/upload/201201/20120112214252525.png" />\r\n	</p>\r\n	<p>\r\n		登录失败的提示：\r\n	</p>\r\n	<div style="margin:0px;padding:0px;">\r\n		<p>\r\n			<img alt="" src="http://files.jb51.net/upload/201201/20120112214252383.png" />\r\n		</p>\r\n	</div>\r\n	<p>\r\n		到这里，前期工作已经做好了，接下来将展开我们的重头戏：sql注入<br />\r\n2) 构造sql语句&nbsp;<br />\r\n填好正确的用户名(marcofly)和密码(test)后，点击提交，将会返回给我们“欢迎管理员”的界面。&nbsp;<br />\r\n因为根据我们提交的用户名和密码被合成到sql查询语句当中之后是这样的：&nbsp;<br />\r\nselect * from users where username=''marcofly'' and password=md5(''test'')&nbsp;<br />\r\n很明显，用户名和密码都和我们之前给出的一样，肯定能够成功登陆。但是，如果我们输入一个错误的用户名或密码呢？很明显，肯定登入不了吧。恩，正常情况下是如此，但是对于有sql注入漏洞的网站来说，只要构造个特殊的“字符串”，照样能够成功登录。&nbsp;<br />\r\n比如：在用户名输入框中输入:'' or 1=1#,密码随便输入，这时候的合成后的sql查询语句为：&nbsp;<br />\r\nselect * from users where username='''' or 1=1#'' and password=md5('''')&nbsp;<br />\r\n语义分析：“#”在mysql中是注释符，这样井号后面的内容将被mysql视为注释内容，这样就不会去执行了，换句话说，以下的两句sql语句等价：&nbsp;\r\n	</p>\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\nselect * from users where username='''' or 1=1#'' and password=md5('''')&nbsp;<br />\r\n	</div>\r\n<br />\r\n等价于&nbsp;<br />\r\n	<div style="margin:3px auto 0px;padding:0px 3px;background:#f2f6fb;">\r\n		<span style="line-height:21.6px;font-size:12px;"><a><u>复制代码</u></a></span>代码如下:\r\n	</div>\r\n	<div style="margin:0px auto 3px;padding:0px 3px 0px 5px;background:#ddedfb;border:1px solid #0099cc;">\r\n		<br />\r\nselect * from users where username='''' or 1=1&nbsp;<br />\r\n	</div>\r\n<br />\r\n因为1=1永远是都是成立的，即where子句总是为真，将该sql进一步简化之后，等价于如下select语句：&nbsp;<br />\r\nselect * from users&nbsp;<br />\r\n没错，该sql语句的作用是检索users表中的所有字段&nbsp;<br />\r\n小技巧：如果不知道'' or 1=1#中的单引号的作用，可以自己echo 下sql语句，就一目了然了。&nbsp;<br />\r\n看到了吧，一个经构造后的sql语句竟有如此可怕的破坏力，相信你看到这后，开始对sql注入有了一个理性的认识了吧~&nbsp;<br />\r\n没错，sql注入就是这么容易。但是，要根据实际情况构造灵活的sql语句却不是那么容易的。有了基础之后，自己再去慢慢摸索吧。&nbsp;<br />\r\n有没有想过，如果经由后台登录窗口提交的数据都被管理员过滤掉特殊字符之后呢？这样的话，我们的万能用户名'' or 1=1#就无法使用了。但这并不是说我们就毫无对策，要知道用户和数据库打交道的途径不止这一条。&nbsp;<br />\r\n更多关于sql注入的信息请看我的另一篇博文：<a href="http://www.jb51.net/article/29445.htm" target="_blank">利用sql注入漏洞拖库</a>&nbsp;<br />\r\n原创文章：web开发_小飞&nbsp;<br />\r\n转载请注明：http://www.cnblogs.com/hongfei/archive/2012/01/12/sql-injection-tuoku.html\r\n	<p>\r\n		<br />\r\n	</p>\r\n</div>\r\n<div style="margin:0px;padding:10px 20px;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<h4 style="font-size:14px;color:#006699;">\r\n		您可能感兴趣的文章:\r\n	</h4>\r\n	<ul>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/32664.htm" target="_blank">网站存在啊d注入工具的sql注入点的修复方法</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/26297.htm" target="_blank">php中防止sql注入实现代码</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/36042.htm" target="_blank">php中防止sql注入的最佳解决方法</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/20675.htm" target="_blank">php+mysql 手工注入语句大全 推荐</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/43087.htm" target="_blank">php防止sql注入详解及防范</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/14600.htm" target="_blank">整理比较全的access sql注入参考</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/29445.htm" target="_blank">利用sql注入漏洞拖库的方法</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/23092.htm" target="_blank">php中防止sql注入攻击和xss攻击的两个简单方法</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/26069.htm" target="_blank">discuz的php防止sql注入函数</a>\r\n		</li>\r\n		<li style="background:url(&quot;text-align:left;color:#006699;font-size:14px;">\r\n			<a href="http://www.jb51.net/article/121511.htm" target="_blank">sql注入工具</a>\r\n		</li>\r\n		<div>\r\n			<br />\r\n		</div>\r\n	</ul>\r\n</div>\r\n<div style="margin:5px auto;padding:0px;text-align:center;font-family:tahoma, arial, 宋体;background-color:#ffffff;">\r\n	<span></span>\r\n</div>''', '2017-09-02 09:08:37'),
(123, './up_image/img_59ad2930617cb.jpg', 0, 'ajax跨域问题', '张国福', '我对跨域的一些认识', 50, '''<h3>\r\n	之前对跨域不是很了解,今天总结一下;\r\n</h3>\r\n<p>\r\n	1.当我们访问一个页面;如,www.abc.com/index.html\r\n</p>\r\n<p>\r\n	我们去访问,而且访问到了;但是这个页面的js去请求了另一个网站的资源//这个过程就叫做跨域\r\n</p>\r\n<p>\r\n	<img src="/admin/view/js/editor/attached/image/20170904/20170904095258_13996.jpg" alt="" />\r\n</p>''', '2017-09-04 10:21:36'),
(124, './up_image/img_59b00f209fbb3.jpg', 2, 'phpstorm激活码', '张国福', 'phpstorm激活码', 50, '''\r\n<p>\r\n	http://idea.qinxi1992.cn/ 这个网址生成,\r\n</p>\r\n<p>\r\n	或者code:\r\n</p>\r\n<p>\r\n<pre class="prettyprint lang-html">cnekjpqzex-eyjsawnlbnnlswqioijdtkvlslbrwkvyiiwibgljzw5zzwvoyw1lijoibgfuihl1iiwiyxnzawduzwvoyw1lijoiiiwiyxnzawduzwvfbwfpbci6iiisimxpy2vuc2vszxn0cmljdglvbii6ikzvciblzhvjyxrpb25hbcb1c2ugb25sesisimnozwnrq29uy3vycmvudfvzzsi6zmfsc2usinbyb2r1y3rzijpbeyjjb2rlijoiqumilcjwywlkvxbubyi6ijiwmtgtmdetmzaifsx7imnvzguioijetsisinbhawrvcfrvijoimjaxoc0wms0zmcj9lhsiy29kzsi6ikljiiwicgfpzfvwvg8ioiiymde4ltaxltmwin0seyjjb2rlijoiulmwiiwicgfpzfvwvg8ioiiymde4ltaxltmwin0seyjjb2rlijoiv1milcjwywlkvxbubyi6ijiwmtgtmdetmzaifsx7imnvzguioijeue4ilcjwywlkvxbubyi6ijiwmtgtmdetmzaifsx7imnvzguioijsqyisinbhawrvcfrvijoimjaxoc0wms0zmcj9lhsiy29kzsi6ilbtiiwicgfpzfvwvg8ioiiymde4ltaxltmwin0seyjjb2rlijoiremilcjwywlkvxbubyi6ijiwmtgtmdetmzaifsx7imnvzguioijeqiisinbhawrvcfrvijoimjaxoc0wms0zmcj9lhsiy29kzsi6iljniiwicgfpzfvwvg8ioiiymde4ltaxltmwin0seyjjb2rlijoiuemilcjwywlkvxbubyi6ijiwmtgtmdetmzaifsx7imnvzguioijdtcisinbhawrvcfrvijoimjaxoc0wms0zmcj9xswiagfzaci6ijuxotu1otmvmcisimdyywnlugvyaw9krgf5cyi6mcwiyxv0b1byb2xvbmdhdgvkijpmywxzzswiaxnbdxrvuhjvbg9uz2f0zwqiomzhbhnlfq==-qoxwjwvrwjz6vo6j6adc3cj4ukqhosbpyz94uruvfna/rbew8xk/m5gp3kaaph6zdvefdtmr1uboumq3ecwxtxm3u3ls5nob4lir+qplvlcj2pk5unq7g/feynyqchpsxtvhionxdbloecb05dosxzm0p7ulggjoainmheb9mc0eyjqc4rppuqfh6hsybnvenkmllf5bz4ketzmsvvga55cwzwq3gritm5q/wut7aqcbdjmbfnujkvql6tsjsdpp56fudes4aab8lqsta2dimbxoco64rvytmcueiwu8mi5uq87kqp5aqmsmyb59inbd+dmvfx5cjo3frs4/5s3/hg==-miiepjccaiagawibagibbtanbgkqhkig9w0baqsfadaymrywfaydvqqdda1kzxrqcm9mawxlienbmb4xdte1mtewmja4mje0ofoxdte4mtewmta4mje0ofowetepma0ga1ueawwgchjvzdn5miibijanbgkqhkig9w0baqefaaocaq8amiibcgkcaqeaxcqkq+zdxlr2mmrybpzgbundmn6oaxixzxiwtmekrjmo/5oufqjbllumsmk0qhfmai37wshyxzcfrcidwxjot4zmnbknlyhoddij/78tmvqfl8noed5+07b8veaiu7c3e1n+e1doc6wht4i4+iemtspadoaj5wcqvqbri8ket8m9vcbiwx7fd0fhexfg3zrt0xqwmcxgnp3ddjhio0rcdu+itv7emtnsvq9jbg1usmsfvmowr25mju2jcpfp1+i4zi+fqgr8gyg8oindyneoabsr3lopi7gruysvkb/xvy/voklpck2h0f0gjxfjnye8nt1paywoyl7rmiavre/ekwidaqabo4gzmigwmakga1udewqcmaawhqydvr0obbyefgepg9ozgcflmgnbky7sghimggtcmegga1udiwrbmd+afkoetkhnqhi2qb1t4lm0ofkll/gzorykgjaymrywfaydvqqdda1kzxrqcm9mawxlienbggka0myxg7kdeeewewydvr0lbawwcgyikwybbquhawewcwydvr0pbaqdagwgma0gcsqgsib3dqebcwuaa4icaqc9wzuygqedsuoc5tousrrigmw4/+wuc5etzbfvdl4ht/8vzmw/oulip4ycva0xkybacj2ix+zcdkopfiyxiasih+hxapv6j79vvouxkrwg2xv6shftplp+0gpdgq3x9r3+kjbmam8w+fodlwqafjrlvpzmgnedu14ygxiz9bvzmiqbwrba+c/f4tlk/dv07dsnexihqfoibnqdivntgombau2ddup2gwkdl81ua8eicgnexhe82kjf4zwfadhk3bqvvbfdawxcdy4xbjs3l4raplu3yenszr/oeur1+jfoxnqsmecmxkxgraq9u55gwjcofkrgoxedek/sk1vfojvs+num4eyerufmfazhzoqiuw4iqggc45ohfh0uuyjycufxxdsu9lmcv8qdhkm+wnprb0l9l5vxscbduhagyd6ss+ga+ady6f/qxzuuceuoh3qunbbculvisz6+girnt1ka9n2qachl+2ybfaquqr8h7z2gsx5lcif5kynsqj0gavxtvywh7pyikx4bs354zqluwwa/cg++2+wnwp+htbhvxmrntdvhsm38aknzld+ptaswgu9gylmhti2envwgybsd2dxmhxk3ipckhkak+pl0ewygzwg3tj9mz7sowcxlwdfak0lrjnkgfmtggrwjv8gypw5bq23vmiqqdlgknzuoog==\r\n''</pre>\r\n</p>\r\n<p>\r\n	<br />\r\n</p>', '2017-09-06 15:10:16');
INSERT INTO `article` (`art_id`, `img`, `category_id`, `art_title`, `AUTHORS`, `main`, `order_id`, `content`, `created_at`) VALUES
(125, './up_image/img_59b2674a88c38.jpg', 2, 'php垃圾回收机制的问题', '张国福', 'php垃圾回收机制的问题', 50, '''<p>\r\n	<div style="font-style:normal;font-family:''sans serif'', tahoma, verdana, helvetica;color:#000000;font-size:14px;font-weight:normal;">\r\n		为每一个内存对象分配一个计数器，当对象建立时，计数器自动加1，即，该对象每被引用一次，则+1一次，减少引用一次，则-1一次，这样造成了一个现象：只要该对象处于被引用的状态，其计数器肯定大于1；当对象没有被引用，其计数器的值肯定是0；在此提出计数器的名称：refcount__gc，内存对象就是：zval;\r\n	</div>\r\n	<div style="font-style:normal;font-family:''sans serif'', tahoma, verdana, helvetica;color:#000000;font-size:14px;font-weight:normal;">\r\n		php 先分配一个固定大小的根缓冲区，固定数量的zval\r\n	</div>\r\n	<div style="font-style:normal;font-family:''sans serif'', tahoma, verdana, helvetica;color:#000000;font-size:14px;font-weight:normal;">\r\n		数量是1w,每当一个对象内存被废弃不用的时候，\r\n	</div>\r\n	<div style="font-style:normal;font-family:''sans serif'', tahoma, verdana, helvetica;color:#000000;font-size:14px;font-weight:normal;">\r\n		就会被存储到这里，当集够了1w，开始清空\r\n	</div>\r\n</p>''', '2017-09-08 09:47:54'),
(126, './up_image/img_59c774b067b11.jpg', 0, 'mysql 的case when 语句使用说明', '张国福', 'mysql 的case when 语句使用说明', 50, '''<span style="font-size:16px;background-color:#ffffff;color:#454545;font-family:tahoma, helvetica, arial;">一个表score,字段是name,class,score。分别代表姓名，所在班级，分数。</span><span style="color:#333333;font-family:&quot;font-size:16px;background-color:#ffffff;"></span> \r\n<pre class="line mt-10 q-content">要求用一条语句查出每个班的及格人数和不及格人数，格式为：class,及格人数，不及格人数。</pre>\r\n<pre class="brush:sql">select `class`,\r\nsum(case when score&gt;=60 then 1 else 0 end),\r\nsum(case when score&gt;=60 then 0 else 1 end)\r\nfrom score\r\ngroup by 1\r\n</pre>\r\n<pre class="brush:sql">--\r\n-- 表的结构 `score`\r\n--\r\n \r\ncreate table if not exists `score` (\r\n  `id` int(11) not null auto_increment,\r\n  `name` varchar(50) not null,\r\n  `class` int(11) not null,\r\n  `score` varchar(10) not null,\r\n  `txt` varchar(50) not null,\r\n  primary key (`id`)\r\n) engine=myisam  default charset=utf8 auto_increment=9 ;\r\n \r\n--\r\n-- 转存表中的数据 `score`\r\n--\r\n \r\ninsert into `score` (`id`, `name`, `class`, `score`, `txt`) values\r\n(1, ''张三'', 1, ''60'', ''''),\r\n(2, ''李四'', 2, ''80'', ''''),\r\n(3, ''张三1'', 1, ''20'', ''''),\r\n(4, ''李四2'', 2, ''40'', ''''),\r\n(5, ''张三2'', 1, ''50'', ''''),\r\n(6, ''李四3'', 2, ''90'', ''''),\r\n(7, ''王五'', 1, ''90'', ''''),\r\n(8, ''李六'', 2, ''85'', '''');</pre>''', '2017-09-24 09:02:40'),
(127, './up_image/img_59cb222e3c364.jpg', 0, 'php 实现定时任务的几种方法', '张国福', '这几天需要用php写一个定时抓取网页的服务器应用.', 50, '''<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">一. 简单直接不顾后果型</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">&lt;?php</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">ignore_user_abort();//关掉浏览器，php脚本也可以继续执行.</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">set_time_limit(0);// 通过set_time_limit(0)可以让程序无限制的执行下去</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">ini_set(''memory_limit'',''512m''); // 设置内存限制</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">$interval=60*30;// 每隔半小时运行</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">do{</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">//todo&nbsp;</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">sleep($interval);// 等待5分钟</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">}</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">while(true);</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">缺点: 启动之后，便无法控制, 除非终止 php 宿主. 不要采用这样方法, 除非你是黑客.</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">二. 简单可控型</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">config.php</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">&lt;?php</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">return 1;</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">?&gt;</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">cron.php</span><br />\r\n<br />\r\n<br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">ignore_user_abort();//关掉浏览器，php脚本也可以继续执行.</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">set_time_limit(0);// 通过set_time_limit(0)可以让程序无限制的执行下去</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">$interval=60*30;// 每隔半小时运行</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">do{</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">$run = include ''config.php'';</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">if(!$run) die(''process abort'');</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">//todo</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">sleep($interval);// 等待5分钟</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">}</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">while(true);</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">通过 改变config.php 的 return 0 , 来实现停止程序. 一个可行的办法是config.php文件和某个特殊表单交互, 通过html页面设置一些变量来进行配置</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">缺点: 占系统资源, 长时间运行，会有一些意想不到的隐患。比如内存管理方面的问题 .</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">三. 简单改进型</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">&lt;?php</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">$time=15;</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">$url="http://".$_server[''http_host''].$_server[''request_uri''];</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">/*</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">function</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">*/</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">sleep($time);</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">file_get_contents($url);</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">?&gt;</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">php脚本sleep 一段时间之后通过访问自身的方式继续执行. 就好像接力赛跑一样..这样就能保证每个php脚本执行时间不会太长. 也就不受time_out的限制了.</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">因为每一次一次循环php文件都是独立执行,所以这种方法,避免了time_out的限制. 但是最好和上边一样 加上控制代码. cofig.php , 以便能够终止进程.</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">四. 服务器定时任务</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">unix平台</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">如果您使用 unix 系统，您需要在您的 php 脚本的最前面加上一行特殊的代码，使得它能够被执行，这样系统就能知道用什么样的程序要运行该脚本。为 unix 系统增加的第一行代码不会影响该脚本在 windows 下的运行，因此您也可以用该方法编写跨平台的脚本程序。</span><br />\r\n<br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">1、在crontab中使用php执行脚本</span><br />\r\n<span style="color:#323232;font-family:&quot;font-size:16px;background-color:#ffffff;">就像在crontab中调用普通的shell脚本一样（具体crontab用法），使用php程序来调用php脚本，每一小时执行 mysc</span>ript.php 如下：<br />\r\n<br />\r\n# crontab -e<br />\r\n00 * * * * /usr/local/bin/php /home/john/myscript.php<br />\r\n/usr/local/bin/php为php程序的路径。<br />\r\n<br />\r\n2、在crontab中使用url执行脚本<br />\r\n如果你的php脚本可以通过url触发，你可以使用 lynx 或 curl 或 wget 来配置你的crontab。<br />\r\n<br />\r\n下面的例子是使用lynx文本浏览器访问url来每小时执行php脚本。lynx文本浏览器默认使用对话方式打开url。但是，像下面的，我们在lynx命令行中使用-dump选项来把url的输出转换来标准输出。<br />\r\n<br />\r\n00 * * * * lynx -dump http://www.sf.net/myscript.php<br />\r\n下面的例子是使用 curl 访问url来每5分执行php脚本。curl默认在标准输出显示输出。使用 "curl -o" 选项，你也可以把脚本的输出转储到临时文件temp.txt。<br />\r\n<br />\r\n*/5 * * * * /usr/bin/curl -o temp.txt http://www.sf.net/myscript.php<br />\r\n下面的例子是使用wget访问url来每10分执行php脚本。-q 选项表示安静模式。"-o temp.txt" 表示输出会发送到临时文件。<br />\r\n<br />\r\n*/10 * * * * /usr/bin/wget -q -o temp.txt http://www.sf.net/myscript.php<br />\r\n五. ini_set函数用法详解<br />\r\nphp ini_set用来设置php.ini的值，在函数执行的时候生效，脚本结束后，设置失效。无需打开php.ini文件，就能修改配置，对于虚拟空间来说，很方便。<br />\r\n<br />\r\n函数格式：<br />\r\n<br />\r\nstring ini_set(string $varname, string $newvalue)<br />\r\n不是所有的参数都可以配置，可以查看手册中的列表。<br />\r\n<br />\r\n常见的设置：<br />\r\n<br />\r\n@ ini_set(''memory_limit'', ''64m'');<br />\r\nmenory_limit：设定一个脚本所能够申请到的最大内存字节数，这有利于写的不好的脚本消耗服务器上的可用内存。@符号代表不输出错误。<br />\r\n<br />\r\n@ini_set(''display_errors'', 1);<br />\r\ndisplay_errors：设置错误信息的类别。<br />\r\n<br />\r\n@ini_set(''session.auto_start'', 0);<br />\r\nsession.auto_start：是否自动开session处理，设置为1时，程序中不用session_start()来手动开启session也可使用session，<br />\r\n<br />\r\n如果参数为0，又没手动开启session，则会报错。<br />\r\n<br />\r\n@ini_set(''session.cache_expire'', 180);<br />\r\nsession.cache_expire：指定会话页面在客户端cache中的有限期（分钟）缺省下为180分钟。如果设置了session.cache_limiter=nocache时，此处设置无 效。<br />\r\n<br />\r\n@ini_set(''session.use_cookies'', 1);<br />\r\nsession.use_cookies：是否使用cookie在客户端保存会话id；<br />\r\n<br />\r\n@ini_set(''session.use_trans_sid'', 0);<br />\r\nsession.use_trans_sid：是否使用明码在url中显示sid（会话id），<br />\r\n<br />\r\n默认是禁止的，因为它会给你用户带来安全危险：<br />\r\n<br />\r\n用户可能将包含有效的sid的url通过email/irc/qq/msn等途径告诉其他人。<br />\r\n包含有效sid的url可能会保存在公用电脑上。<br />\r\n用户可能保存带有固定不变的sid的url在他们的收藏夹或者浏览历史记录里。 基于url的会话管理总是比基于cookie的会话管理有更多的风险，所以应当禁用。''', '2017-09-27 03:59:42'),
(128, './up_image/img_5a1fbd6e10c4e.jpg', 2, 'linux卸载mysql，apache，php', '张国福', 'linux卸载mysql，apache，php', 50, '''<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<strong>卸载mysql</strong>\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	1、查找以前是否装有mysql\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	命令：rpm -qa|grep -i mysql\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	可以看到mysql的包：\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	mysql-3.23.58-9<br />\r\nphp-mysql-4.3.4-11<br />\r\nmod_auth_mysql-20030510-4.1<br />\r\nmysql-server-3.23.58-9\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	2、删除mysql\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	删除命令：rpm -e --nodeps 包名\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	rpm -ev&nbsp;mysql-server-3.23.58-9\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	说明：rpm –qa | grep mysql 命令是为了把mysql相关的包都列出来，卸载都从最下面的一个包开始，直到卸载掉第一个为止。执行rpm -q php，如果返回php版本，则是rpm安装；不返回php版本则是二进制安装。\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<span>3、删除老版本mysql的开发头文件和库</span>\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<span>　　rm -fr /usr/lib/mysql</span>\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<span>　　<span>rm -fr /usr/include/my</span><span>sql</span></span>\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<span>注意：卸载后/var/lib/mysql中的数据及/etc/my.cnf不会删除，如果确定没用后就手工删除</span>\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<span>　　rm -f /etc/my.cnf</span>\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<span>　　<span>rm -fr /var/lib/mysql</span></span>\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<strong>卸载apache</strong>\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	1、查找以前是否装有httpd\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	　　rpm -qa|grep -i httpd\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	得到以下安装包\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	httpd-manual-2.2.9-4.i386<br />\r\nhttpd-tools-2.2.9-4.i386<br />\r\nhttpd-devel-2.2.9-4.i386<br />\r\nhttpd-2.2.9-4.i386\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	2、删除apache\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	　　rpm -e --nodeps&nbsp;httpd-2.2.9-4.i386<br />\r\n　　rpm -e --nodeps&nbsp;httpd-devel-2.2.9-4.i386<br />\r\n　　rpm -e --nodeps&nbsp;httpd-tools-2.2.9-4.i386<br />\r\n　　rpm -e --nodeps&nbsp;httpd-manual-2.2.9-4.i386\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<strong>卸载php</strong>\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	　　rpm -qa|grep -i php\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	得到以下包\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	php-odbc-4.3.4-11<br />\r\nphp-4.3.4-11<br />\r\nphp-mysql-4.3.4-11<br />\r\nphp-pear-4.3.4-11<br />\r\nphp-ldap-4.3.4-11<br />\r\nphp-pgsql-4.3.4-11\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	卸载方法跟上面相同\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	&nbsp;\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	注意：卸载的时候如果卸载不掉，系统一般会提示包的依赖关系，并且列出依赖的包的名称，先卸载提示依赖的包就可以了。\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	如果实在实在有卸载不掉的包，可以加—nodeps这个参数来卸载，比如我们卸载php-4.3.4-11，实在卸不掉了。就用：<br />\r\nrpm -e php-4.3.4-11 --nodeps（或 rpm -e --nodeps php-4.3.4-11）<br />\r\n命令很强硬，应该行的。\r\n</p>\r\n<p style="color:#555555;font-family:verdana, &quot;background-color:#f5f8fa;">\r\n	<span>rpm –e mod_auth_mysql为普通卸载</span>\r\n</p>''', '2017-11-30 08:12:30'),
(129, './up_image/img_5a1fcc912009e.jpg', 1, 'linux安装phpstudy', '张国福', 'linux安装phpstudy', 50, '''<h3 style="font-family:inherit;font-weight:500;color:inherit;font-size:24px;">\r\n	phpstudy for linux (lnmp+lamp一键安装包)\r\n</h3>\r\n<div>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		<span>phpstudy linux版&amp;win版同步上线 支持apache/nginx/tengine/lighttpd/iis7/8/6</span>\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		<span>phpstudy for linux 支持apache/nginx/tengine/lighttpd，<br />\r\n支持php5.2/5.3/5.4/5.5切换</span>&nbsp;<br />\r\n已经在centos-6.5,debian-7.4.,ubuntu-13.10测试成功。\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		下载版：http://lamp.phpstudy.net/phpstudy.bin\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		完整版：http://lamp.phpstudy.net/phpstudy-all.bin\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		<br />\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		安装：\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		wget -c http://lamp.phpstudy.net/phpstudy.bin&nbsp;<br />\r\nchmod +x phpstudy.bin &nbsp; &nbsp;#权限设置<br />\r\n./phpstudy.bin 　　　　#运行安装\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		<br />\r\n<img src="http://www.phpstudy.net/img/image/20140318191157_35392.jpg" alt="" />\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		用时十到几十分钟不等，安装时间取决于电脑的下载速度和配置。<br />\r\n也可以事先下载好完整，安装时无需下载。<br />\r\n安装完成\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		<img src="http://www.phpstudy.net/img/image/20140318191248_38899.jpg" alt="" />&nbsp;<br />\r\n如何切换php版：<br />\r\n假如你先安装的apache+php5.3<br />\r\n想切换成nginx+php5.4<br />\r\n你就再走一次./phpstudy.bin<br />\r\n但是你会发现有一行是否安装mysql提示选不安装<br />\r\n这样只需要编译nginx+php5.4<br />\r\n从而节省时间，这样只需要几分钟即可。\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		使用说明：\r\n	</p>\r\n	<p style="color:#333333;font-family:&quot;font-size:14px;background-color:#ffffff;">\r\n		<span>服务进程管理：phpstudy (start|stop|restart|uninstall)</span><br />\r\n<span>站点主机管理：phpstudy (add|del|list)</span><br />\r\n<span>ftpd用户管理：phpstudy ftp (add|del|list)</span>\r\n	</p>\r\n	<div>\r\n		<br />\r\n	</div>\r\n</div>''', '2017-11-30 09:17:05'),
(130, './up_image/img_5a1fd9cd7f627.jpg', 1, '【linux开发】linux下jpeglib库的安装详解', '张国福', 'linux下jpeglib库的安装详解', 50, '''<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span style="color:#ed1c24;">首先要下载所需的库压缩包：jpegsrc.v6b.tar.gz或 jpegsrc.v8b.tar.gz</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span style="color:#ed1c24;">然后将下载的压缩包随便放在和解压到你喜欢的地方。</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># tar -zxvf jpegsrc.v6b.tar.gz</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># cd jpeg-6b</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># ./configure&nbsp;&nbsp;--enable-shared&nbsp;</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># make</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span style="color:#ed1c24;">/以下代码是在usr/local目录下建立库文件安装目录</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span style="color:#ed1c24;">/如果没有权限建立输入命令sudo –s 回车，然后按提示输入你的登录密码</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># mkdir /usr/local/jpeg6</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># mkdir /usr/local/jpeg6/include</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># mkdir /usr/local/jpeg6/lib</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># mkdir /usr/local/jpeg6/bin</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># mkdir /usr/local/jpeg6/man</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># mkdir /usr/local/jpeg6/man/man1</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span># make install</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>#----configuration information----</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>　　echo "---------------------------------------------------------------------"</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>echo "please add following lines in you /etc/profile"<br />\r\n　　echo "("<br />\r\n　　echo " tip:"<br />\r\n　　echo " you can add these lines in a file named /etc/profile.jpeg,"<br />\r\n　　echo " and then add a line on the end of /etc/profile:"<br />\r\n　　echo " . /etc/profile.jpeg"<br />\r\n　　echo " it is simple,:)"<br />\r\n　　echo "):"<br />\r\n　　echo " path=""$""path:$jpeg/bin"<br />\r\n　　echo " cplus_include_path=""$""cplus_include_path:$jpeg/include"<br />\r\n　　echo " ld_library_path=""$""ld_library_path:$jpeg/lib"<br />\r\n　　echo " library_path=""$""library_path:$jpeg/lib"<br />\r\n　　echo " manpath=""$""manpath:$jpeg/man"<br />\r\n　　echo ""<br />\r\n　　echo " export path cplus_include_path ld_library_path library_path manpath"</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span style="color:#ed1c24;"><span style="line-height:33px;font-size:22px;"><span style="line-height:48px;font-size:32px;"><span><strong>这就安装完了吗？？？no！！！</strong></span></span></span></span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<strong><span style="font-weight:normal;color:#ed1c24;line-height:36px;font-size:24px;">你可能在编译自己写的程序的时候会遇到一下问题终端提示</span></strong>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>/tmp/cc9dqmjz.o: in function `jpeg_compress'':</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>server1214.c:(.text+0x4f5): undefined reference to `jpeg_std_error''</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>server1214.c:(.text+0x519): undefined reference to `jpeg_createcompress''</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>server1214.c:(.text+0x59b): undefined reference to `jpeg_stdio_dest''</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>server1214.c:(.text+0x5d1): undefined reference to `jpeg_set_defaults''</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>server1214.c:(.text+0x5ef): undefined reference to `jpeg_set_quality''</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>server1214.c:(.text+0x605): undefined reference to `jpeg_start_compress''</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>server1214.c:(.text+0x64c): undefined reference to `jpeg_write_scanlines''</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>server1214.c:(.text+0x66a): undefined reference to `jpeg_finish_compress''</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>server1214.c:(.text+0x686): undefined reference to `jpeg_destroy_compress''</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>collect2: ld 返回 1</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span>&nbsp;</span>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<strong><span style="font-weight:normal;color:#ed1c24;line-height:36px;font-size:24px;">解决办法在编译命令后加-ljpeg</span></strong>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<strong><span style="font-weight:normal;color:#ed1c24;line-height:36px;font-size:24px;">例 gcc –o **** ****.c –ljpeg</span></strong>\r\n</p>\r\n<p style="background-color:#ffffff;color:#464646;font-family:simsun;font-size:14px;">\r\n	<span style="line-height:36px;font-size:24px;"><span style="color:#ed1c24;"><span><strong>ok&nbsp;成功！！！！</strong></span></span></span>\r\n</p>''', '2017-11-30 10:13:33'),
(131, './up_image/img_5a26778602f82.jpg', 1, 'jquery父元素 && 同级元素 && 子代元素 选择器', '张国福', 'jquery父元素 && 同级元素 && 子代元素 选择器', 50, '''<pre>\r\n<div>\r\n	\r\n	<p>\r\n		先来一段例子代码，便于以下解说\r\n	</p>\r\n\r\n<pre class="hljs undefined">&lt;div&gt;\r\n    &lt;ul class="the_ul"&gt;\r\n        &lt;li&gt;&lt;/li&gt;\r\n        &lt;li&gt;&lt;/li&gt;\r\n        &lt;li&gt;&lt;/li&gt;\r\n        &lt;li class="the_li"&gt;\r\n            &lt;a href="#" class="the_test"&gt;&lt;/a&gt;\r\n            &lt;a href="#"&gt;&lt;/a&gt;\r\n            &lt;a href="#"&gt;&lt;/a&gt;\r\n            &lt;a href="#" class="the_test2"&gt;&lt;/a&gt;\r\n        &lt;/li&gt;\r\n        &lt;li&gt;&lt;/li&gt;\r\n        &lt;li&gt;&lt;/li&gt;\r\n    &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\r\n	<h3>\r\n		一.获取父级元素，.parent(selector) &amp;&amp; .parents(selector) &amp;&amp; parentsuntil()；选择器可选\r\n	</h3>\r\n	<p>\r\n		1.获取当前匹配元素的父元素，.parent(selector)，例如\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').parent()    //取得的是 a标签 的父元素，第4个 li对象</pre>\r\n	<p>\r\n		还可以往上增加的，如\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').parent().parent()    //取得的是 ul对象</pre>\r\n	<p>\r\n		那么理所当然\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').parent().parent().parent()    //取得的便是 div对象</pre>\r\n	<p>\r\n		当然不建议这样用，太长了，不好看还没效率？ 0.0<br />\r\n<br />\r\n<br />\r\n2.获取当前匹配元素的每一个祖先元素，.parents(selector)，例如\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').parents()    //取得ul、div、body、html对象</pre>\r\n	<p>\r\n		单单多加了一个“s”，以上取得的便是 a标签 的每一个祖先元素，包括：ul、div、body、html，直到文档根部；由此可见，我们在用这个选择器的时候，很多时候都得加上刷选器，如：\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').parents(''li'')    //第4个 li对象\r\n$(''.the_test'').parents(''div'')    //第4个  div对象</pre>\r\n	<p>\r\n		<br />\r\n<br />\r\n3.parentsuntil()，获得当前匹配元素的每一个祖先元素集合，直到刷新器匹配的对象为止（不包括选择器匹配的对象），如\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').parentsuntil(''ul'')    //只取得了第4个 li对象 呢</pre>\r\n	<p>\r\n		注意：刷选器是必选的，而且parentsuntil 中“u”是大写，亲测小写无效，驼峰命名（以下同）\r\n	</p>\r\n	<hr />\r\n	<h3>\r\n		二.获取同级元素，.next() &amp;&amp; .nextall() &amp;&amp; .andself() &amp;&amp; .prev() &amp;&amp; .prevall()；也就5个，而且都有相似性\r\n	</h3>\r\n	<p>\r\n		1.获取当前匹配元素的下一个<strong>同级</strong>元素，.next()，如\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').next()    //取得第2个 a对象</pre>\r\n	<p>\r\n		当然也是可以连缀下去的！\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').next().next()    //取得第3个 a对象</pre>\r\n	<p>\r\n		<br />\r\n<br />\r\n2.获取当前匹配元素以下的所有<strong>同级</strong>元素，.nextall()，如\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').nextall()    //取得第2、3、4个 a对象</pre>\r\n	<p>\r\n		这个加上刷选器就更加好用准确了，如\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').nextall(''.the_test2'')    //取得第4个 a对象</pre>\r\n	<p>\r\n		<br />\r\n<br />\r\n3.获取当前匹配元素以下的所有<strong>同级</strong>元素，包括当前匹配元素，如\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_test'').andself()      //取得所有 a对象\r\n$(''.the_test'').andself(''.the_test2'')      //取得第1、4个 a对象</pre>\r\n	<p>\r\n		<br />\r\n<br />\r\n4.剩下 .prev() &amp;&amp; .prevall() 就不说了，和 .next() &amp;&amp; .nextall() 类似，只不过next是往下，prev是往上。（貌似没有往上包括自己呢？算了~往下包括自己都不一定用得上）\r\n	</p>\r\n	<hr />\r\n	<h3>\r\n		三.获取子元素\r\n	</h3>\r\n	<p>\r\n		1.&gt;  ，这个必须举例来说明了\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_ul &gt; li'')    //取得ul下的所有 li对象</pre>\r\n	<p>\r\n		必须层层递进，越级写是不起作用的\r\n	</p>\r\n<pre class="hljs undefined">$(''.the_ul &gt; a'')    //false，获取不到任何对象\r\n$(''.the_ul &gt; li &gt; a'')    //true，获得所有的 a标签对象</pre>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<ol>\r\n		<li>\r\n			.children() ,获得匹配元素的子元素（只是儿子，孙子之类的滚一边去）\r\n		</li>\r\n	</ol>\r\n<pre class="hljs undefined">$(''.the_ul'').children()    //取得所有的 li对象\r\n$(''.the_li'').children(''.the_test'')    //取得第1个 a标签对象</pre>\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<ol>\r\n		<li>\r\n			.find() ，获得当前匹配元素的后代元素，刷选器是必选的，<strong>这个好用，隔几代都可以找到（效率不高？）</strong> \r\n		</li>\r\n	</ol>\r\n<pre class="hljs undefined">$(''div'').find(''.the_test'')    //找div的后代，取得第1个 a标签对象</pre>\r\n	<hr />\r\n	<p>\r\n		<br />\r\n	</p>\r\n	<h6>\r\n		至此全部讲述完毕，多个选择器配合着、连缀着用，总能找到你想要的元素对象了吧？\r\n	</h6>\r\n</div>\r\n<br />\r\n<br />\r\n作者：海野夏桑<br />\r\n链接：http://www.jianshu.com/p/0bf62ebcff31<br />\r\n來源：简书<br />\r\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</pre>''', '2017-12-05 10:40:06');
INSERT INTO `article` (`art_id`, `img`, `category_id`, `art_title`, `AUTHORS`, `main`, `order_id`, `content`, `created_at`) VALUES
(132, './up_image/img_5a5351acf15d3.jpg', 0, '让http萌娘帮你记住状态码吧', '张国福', '让http萌娘帮你记住状态码吧', 50, '''<p style="text-indent:2em;color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	http 状态码是做web开发的必备的基础知识，面试中也会经常出现这方面的考题。但是要记住全部的<a href="http://www.nowamagic.net/librarys/veda/tag/%e7%8a%b6%e6%80%81%e7%a0%81" target="_blank">状态码</a>不是一件容易的事，要不让 http状态码<a href="http://www.nowamagic.net/librarys/veda/tag/%e8%90%8c%e5%a8%98" target="_blank">萌娘</a>帮你记住一下？（ps：萌死不偿命噢。）\r\n</p>\r\n<ul style="color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	<li>\r\n		200 欢迎回来，主人 （正常；请求已完成。&nbsp;）\r\n	</li>\r\n	<li>\r\n		301 人家搬家了 （已移动 — 请求的数据具有新的位置且更改是永久的。&nbsp;）\r\n	</li>\r\n	<li>\r\n		307 不是这里，换个地方啦 （重新请求的url，客户端自动重新请求新的地址）\r\n	</li>\r\n	<li>\r\n		400 不要把奇怪的东西给人家嘛 （错误请求 — 请求中有语法问题，或不能满足请求。&nbsp;）\r\n	</li>\r\n	<li>\r\n		403 这里不可以啦！（禁止 — 即使有授权也不需要访问。&nbsp;）\r\n	</li>\r\n	<li>\r\n		404 这里什么都没有 --- 人家是平的啦。 （找不到 — 服务器找不到给定的资源；文档不存在。&nbsp;）\r\n	</li>\r\n	<li>\r\n		405 打开方式不对 （资源被禁止&nbsp;）\r\n	</li>\r\n	<li>\r\n		414 这... 太长了啦 &nbsp;（请求 - uri 太长&nbsp;）\r\n	</li>\r\n	<li>\r\n		418 我就是个杯具啊 &nbsp;（我是茶壶）\r\n	</li>\r\n	<li>\r\n		500 服务姬坏掉了啦 &nbsp;（内部错误 — 因为意外情况，服务器不能完成请求。&nbsp;）\r\n	</li>\r\n	<li>\r\n		503 不要...人家还没准备好啦 &nbsp;（无法获得服务 — 由于临时过载或维护，服务器无法处理请求。&nbsp;）\r\n	</li>\r\n	<li>\r\n		101 服务姬傲娇中 &nbsp;（服务器将遵从客户的请求转换到另外一种协议）\r\n	</li>\r\n	<li>\r\n		100 人家... 还要... &nbsp;（初始的请求已经接受，客户应当继续发送请求的其余部分。）\r\n	</li>\r\n</ul>\r\n<h4 style="text-indent:24px;font-size:14px;color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	常见的http 状态代码及其定义\r\n</h4>\r\n<p style="text-indent:2em;color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	2xx 成功&nbsp;\r\n</p>\r\n<ul style="color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	<li>\r\n		200 正常；请求已完成。&nbsp;\r\n	</li>\r\n	<li>\r\n		201 正常；紧接 post 命令。&nbsp;\r\n	</li>\r\n	<li>\r\n		202 正常；已接受用于处理，但处理尚未完成。&nbsp;\r\n	</li>\r\n	<li>\r\n		203 正常；部分信息 — 返回的信息只是一部分。&nbsp;\r\n	</li>\r\n	<li>\r\n		204 正常；无响应 — 已接收请求，但不存在要回送的信息。&nbsp;\r\n	</li>\r\n</ul>\r\n<p style="text-indent:2em;color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	3xx 重定向&nbsp;\r\n</p>\r\n<ul style="color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	<li>\r\n		301 已移动 — 请求的数据具有新的位置且更改是永久的。&nbsp;\r\n	</li>\r\n	<li>\r\n		302 已找到 — 请求的数据临时具有不同 uri。&nbsp;\r\n	</li>\r\n	<li>\r\n		303 请参阅其它 — 可在另一 uri 下找到对请求的响应，且应使用 get 方法检索此响应。&nbsp;\r\n	</li>\r\n	<li>\r\n		304 未修改 — 未按预期修改文档。&nbsp;\r\n	</li>\r\n	<li>\r\n		305 使用代理 — 必须通过位置字段中提供的代理来访问请求的资源。&nbsp;\r\n	</li>\r\n	<li>\r\n		306 未使用 — 不再使用；保留此代码以便将来使用。&nbsp;\r\n	</li>\r\n</ul>\r\n<p style="text-indent:2em;color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	4xx 客户机中出现的错误&nbsp;\r\n</p>\r\n<ul style="color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	<li>\r\n		400 错误请求 — 请求中有语法问题，或不能满足请求。&nbsp;\r\n	</li>\r\n	<li>\r\n		401 未授权 — 未授权客户机访问数据。&nbsp;\r\n	</li>\r\n	<li>\r\n		402 需要付款 — 表示计费系统已有效。&nbsp;\r\n	</li>\r\n	<li>\r\n		403 禁止 — 即使有授权也不需要访问。&nbsp;\r\n	</li>\r\n	<li>\r\n		404 找不到 — 服务器找不到给定的资源；文档不存在。&nbsp;\r\n	</li>\r\n	<li>\r\n		407 代理认证请求 — 客户机首先必须使用代理认证自身。&nbsp;\r\n	</li>\r\n	<li>\r\n		415 介质类型不受支持 — 服务器拒绝服务请求，因为不支持请求实体的格式。&nbsp;\r\n	</li>\r\n</ul>\r\n<p style="text-indent:2em;color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	5xx 服务器中出现的错误&nbsp;\r\n</p>\r\n<ul style="color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	<li>\r\n		500 内部错误 — 因为意外情况，服务器不能完成请求。&nbsp;\r\n	</li>\r\n	<li>\r\n		501 未执行 — 服务器不支持请求的工具。&nbsp;\r\n	</li>\r\n	<li>\r\n		502 错误网关 — 服务器接收到来自上游服务器的无效响应。&nbsp;\r\n	</li>\r\n	<li>\r\n		503 无法获得服务 — 由于临时过载或维护，服务器无法处理请求。&nbsp;\r\n	</li>\r\n</ul>\r\n<h4 style="text-indent:24px;font-size:14px;color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	更详细的4xx与5xx状态码\r\n</h4>\r\n<ul style="color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	<li>\r\n		http 400 - 请求无效&nbsp;\r\n	</li>\r\n	<li>\r\n		http 401.1 - 未授权：登录失败&nbsp;\r\n	</li>\r\n	<li>\r\n		http 401.2 - 未授权：服务器配置问题导致登录失败&nbsp;\r\n	</li>\r\n	<li>\r\n		http 401.3 - acl 禁止访问资源&nbsp;\r\n	</li>\r\n	<li>\r\n		http 401.4 - 未授权：授权被筛选器拒绝&nbsp;\r\n	</li>\r\n	<li>\r\n		http 401.5 - 未授权：isapi 或 cgi 授权失败&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403 - 禁止访问&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403 - 对 internet 服务管理器 (html) 的访问仅限于 localhost&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.1 禁止访问：禁止可执行访问&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.2 - 禁止访问：禁止读访问&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.3 - 禁止访问：禁止写访问&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.4 - 禁止访问：要求 ssl&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.5 - 禁止访问：要求 ssl 128&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.6 - 禁止访问：ip 地址被拒绝&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.7 - 禁止访问：要求客户证书&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.8 - 禁止访问：禁止站点访问&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.9 - 禁止访问：连接的用户过多&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.10 - 禁止访问：配置无效&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.11 - 禁止访问：密码更改&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.12 - 禁止访问：映射器拒绝访问&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.13 - 禁止访问：客户证书已被吊销&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.15 - 禁止访问：客户访问许可过多&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.16 - 禁止访问：客户证书不可信或者无效&nbsp;\r\n	</li>\r\n	<li>\r\n		http 403.17 - 禁止访问：客户证书已经到期或者尚未生效&nbsp;\r\n	</li>\r\n	<li>\r\n		http 404.1 - 无法找到 web 站点&nbsp;\r\n	</li>\r\n	<li>\r\n		http 404 - 无法找到文件&nbsp;\r\n	</li>\r\n	<li>\r\n		http 405 - 资源被禁止&nbsp;\r\n	</li>\r\n	<li>\r\n		http 406 - 无法接受&nbsp;\r\n	</li>\r\n	<li>\r\n		http 407 - 要求代理身份验证&nbsp;\r\n	</li>\r\n	<li>\r\n		http 410 - 永远不可用&nbsp;\r\n	</li>\r\n	<li>\r\n		http 412 - 先决条件失败&nbsp;\r\n	</li>\r\n	<li>\r\n		http 414 - 请求 - uri 太长&nbsp;\r\n	</li>\r\n	<li>\r\n		http 500 - 内部服务器错误&nbsp;\r\n	</li>\r\n	<li>\r\n		http 500.100 - 内部服务器错误 - asp 错误&nbsp;\r\n	</li>\r\n	<li>\r\n		http 500-11 服务器关闭&nbsp;\r\n	</li>\r\n	<li>\r\n		http 500-12 应用程序重新启动&nbsp;\r\n	</li>\r\n	<li>\r\n		http 500-13 - 服务器太忙&nbsp;\r\n	</li>\r\n	<li>\r\n		http 500-14 - 应用程序无效&nbsp;\r\n	</li>\r\n	<li>\r\n		http 500-15 - 不允许请求 global.asa&nbsp;\r\n	</li>\r\n	<li>\r\n		error 501 - 未实现&nbsp;\r\n	</li>\r\n	<li>\r\n		http 502 - 网关错误\r\n	</li>\r\n</ul>\r\n<p style="text-indent:2em;color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	总结成表格：\r\n</p>\r\n<table style="margin:0px 0px 0px 1em;padding:0px;border:1px solid #888888;width:544px;color:#333333;font-family:georgia, &quot;font-size:12px;background-color:#ffffff;">\r\n	<tbody>\r\n		<tr>\r\n			<td width="70" style="border:1px solid #aaaaaa;">\r\n				状态代码\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				状态信息\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				含义\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				100\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				continue\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				初始的请求已经接受，客户应当继续发送请求的其余部分。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				101\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				switching protocols\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				服务器将遵从客户的请求转换到另外一种协议（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				200\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				ok\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				一切正常，对get和post请求的应答文档跟在后面。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				201\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				created\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				服务器已经创建了文档，location头给出了它的url。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				202\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				accepted\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				已经接受请求，但处理尚未完成。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				203\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				non-authoritative information\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				文档已经正常地返回，但一些应答头可能不正确，因为使用的是文档的拷贝（http 1.1新）。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				204\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				no content\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				没有新文档，浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而servlet可以确定用户文档足够新，这个状态代码是很有用的。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				205\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				reset content\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				没有新的内容，但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容（http 1.1新）。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				206\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				partial content\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				客户发送了一个带有range头的get请求，服务器完成了它（http 1.1新）。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				300\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				multiple choices\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				客户请求的文档可以在多个位置找到，这些位置已经在返回的文档内列出。如果服务器要提出优先选择，则应该在location应答头指明。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				301\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				moved permanently\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				客户请求的文档在其他地方，新的url在location头中给出，浏览器应该自动地访问新的url。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				302\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				found\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				类似于301，但新的url应该被视为临时性的替代，而不是永久性的。注意，在http1.0中对应的状态信息是“moved temporatily”。\r\n				<p style="text-indent:2em;">\r\n					出现该状态代码时，浏览器能够自动访问新的url，因此它是一个很有用的状态代码。\r\n				</p>\r\n				<p style="text-indent:2em;">\r\n					注意这个状态代码有时候可以和301替换使用。例如，如果浏览器错误地请求http://host/~user（缺少了后面的斜杠），有的服务器返回301，有的则返回302。\r\n				</p>\r\n				<p style="text-indent:2em;">\r\n					严格地说，我们只能假定只有当原来的请求是get时浏览器才会自动重定向。请参见307。\r\n				</p>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				303\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				see other\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				类似于301/302，不同之处在于，如果原来的请求是post，location头指定的重定向目标文档应该通过get提取（http 1.1新）。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				304\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				not modified\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				客户端有缓冲的文档并发出了一个条件性的请求（一般是提供if-modified-since头表示客户只想比指定日期更新的文档）。服务器告诉客户，原来缓冲的文档还可以继续使用。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				305\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				use proxy\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				客户请求的文档应该通过location头所指明的代理服务器提取（http 1.1新）。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				307\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				temporary redirect\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				和302 （found）相同。许多浏览器会错误地响应302应答进行重定向，即使原来的请求是post，即使它实际上只能在post请求的应答是303时才能重定 向。由于这个原因，http 1.1新增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向的get和post请求；如果是307应答，则浏览器只 能跟随对get请求的重定向。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				400\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				bad request\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				请求出现语法错误。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				401\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				unauthorized\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				客户试图未经授权访问受密码保护的页面。应答中会包含一个www-authenticate头，浏览器据此显示用户名字/密码对话框，然后在填写合适的authorization头后再次发出请求。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				403\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				forbidden\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				404\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				not found\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				无法找到指定位置的资源。这也是一个常用的应答。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				405\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				method not allowed\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				请求方法（get、post、head、delete、put、trace等）对指定的资源不适用。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				406\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				not acceptable\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				指定的资源已经找到，但它的mime类型和客户在accpet头中所指定的不兼容（http 1.1新）。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				407\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				proxy authentication required\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				类似于401，表示客户必须先经过代理服务器的授权。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				408\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				request timeout\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				在服务器许可的等待时间内，客户一直没有发出任何请求。客户可以在以后重复同一请求。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				409\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				conflict\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				通常和put请求有关。由于请求和资源的当前状态相冲突，因此请求不能成功。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				410\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				gone\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				所请求的文档已经不再可用，而且服务器不知道应该重定向到哪一个地址。它和404的不同在于，返回407表示文档永久地离开了指定的位置，而404表示由于未知的原因文档不可用。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				411\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				length required\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				服务器不能处理请求，除非客户发送一个content-length头。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				412\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				precondition failed\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				请求头中指定的一些前提条件失败（http 1.1新）。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				413\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				request entity too large\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				目标文档的大小超过服务器当前愿意处理的大小。如果服务器认为自己能够稍后再处理该请求，则应该提供一个retry-after头（http 1.1新）。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				414\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				request uri too long\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				uri太长（http 1.1新）。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				416\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				requested range not satisfiable\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				服务器不能满足客户在请求中指定的range头。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				500\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				internal server error\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				服务器遇到了意料不到的情况，不能完成客户的请求。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				501\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				not implemented\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				服务器不支持实现请求所需要的功能。例如，客户发出了一个服务器不支持的put请求。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				502\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				bad gateway\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				服务器作为网关或者代理时，为了完成请求访问下一个服务器，但该服务器返回了非法的应答。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				503\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				service unavailable\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				服务器由于维护或者负载过重未能应答。例如，servlet可能在数据库连接池已满的情况下返回503。服务器返回503时可以提供一个retry-after头。\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				504\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				gateway timeout\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				由作为代理或网关的服务器使用，表示不能及时地从远程服务器获得应答。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				505\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				http version not supported\r\n			</td>\r\n			<td style="border:1px solid #aaaaaa;">\r\n				服务器不支持请求中所指明的http版本。（http 1.1新）\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n<p style="text-indent:2em;color:#333333;font-family:georgia, &quot;background-color:#ffffff;">\r\n	觉得不够瘾？喵星人再给你演示一遍 http 状态码吧！\r\n</p>\r\n<div align="center" style="margin:12px 0px 15px;padding:0px;font-family:arial, helvetica, sans-serif;color:#333333;background-color:#ffffff;">\r\n	<img src="http://www.nowamagic.net/librarys/images/201207/2012_07_15_02.jpg" />\r\n</div>''', '2018-01-08 11:10:36');

-- --------------------------------------------------------

--
-- 表的结构 `blog_admin_user`
--

CREATE TABLE IF NOT EXISTS `blog_admin_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `logname` varchar(20) NOT NULL,
  `password` varchar(32) NOT NULL,
  `realname` varchar(20) NOT NULL,
  `tel` char(11) NOT NULL,
  `rolename` enum('0','1') NOT NULL,
  `last_login_ip` char(15) DEFAULT NULL,
  `last_login_time` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=48 ;

--
-- 转存表中的数据 `blog_admin_user`
--

INSERT INTO `blog_admin_user` (`id`, `logname`, `password`, `realname`, `tel`, `rolename`, `last_login_ip`, `last_login_time`) VALUES
(47, 'weiwei', '3a69c58ee164f71ca99cffa8d21df9dc', '微微', '1502225585', '1', '211.103.136.242', 1501760886),
(46, 'hongzhulei', 'a52c8674e6e9a8cd8f5b14dbcf189302', '张国福', '15001262936', '1', '211.103.136.242', 1501757578);

-- --------------------------------------------------------

--
-- 表的结构 `comment`
--

CREATE TABLE IF NOT EXISTS `comment` (
  `comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `comment_name` char(30) NOT NULL,
  `comment_main` varchar(180) NOT NULL,
  `article_id` int(11) NOT NULL,
  `create_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`comment_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=35 ;

--
-- 转存表中的数据 `comment`
--

INSERT INTO `comment` (`comment_id`, `comment_name`, `comment_main`, `article_id`, `create_at`) VALUES
(1, '', '', 0, '2017-08-08 07:08:50'),
(2, '我是孙悟空', '这篇文字写的不错,给你点赞', 32, '2017-08-23 07:08:54'),
(3, '呵呵', '谢谢', 32, '2017-08-18 07:08:57'),
(4, '来自大山的葡萄', '不错啊,谢谢你的文章', 32, '2017-07-12 07:09:00'),
(5, '哦?是吗', '从前有座山', 31, '2017-08-02 07:11:02'),
(6, '放大的蚂蚁', '恩恩', 31, '2017-08-02 07:17:59'),
(7, '这是啥啊', '的方法', 31, '2017-08-02 07:18:12'),
(8, '', '', 31, '2017-08-02 07:18:39'),
(9, 'f', 'd', 31, '2017-08-02 07:25:49'),
(10, '', '', 31, '2017-08-02 07:27:58'),
(11, '', '', 31, '2017-08-02 07:33:16'),
(12, '', '', 31, '2017-08-02 07:36:38'),
(13, '', '', 31, '2017-08-02 07:42:11'),
(14, '', '', 31, '2017-08-02 07:42:47'),
(15, '', '', 31, '2017-08-02 07:45:47'),
(16, '', '', 31, '2017-08-02 07:45:52'),
(17, 'fdsafd', 'fdsafdsfdds', 33, '2017-08-02 23:45:30'),
(18, '我是哪吒', '很好,给你赞', 33, '2017-08-02 23:59:22'),
(19, 'wo', 'henhao', 33, '2017-08-03 00:08:42'),
(20, '突然让人不', '通融通融吧', 33, '2017-08-03 03:11:11'),
(22, 'a啊啊啊啊啊啊', 'aaaaaaaaaaaaaaaaaaaa', 51, '2017-08-15 09:00:49'),
(23, 'a啊啊啊啊啊啊', 'aaaaaaaaaaaaaaaaaaaa', 51, '2017-08-15 09:00:50'),
(24, 'a啊啊啊啊啊啊', 'aaaaaaaaaaaaaaaaaaaa', 51, '2017-08-15 09:00:51'),
(25, 'a啊啊啊啊啊啊', 'aaaaaaaaaaaaaaaaaaaa', 51, '2017-08-15 09:00:51'),
(26, 'a啊啊啊啊啊啊', 'aaaaaaaaaaaaaaaaaaaa', 51, '2017-08-15 09:00:51'),
(27, '呃,这是谁', '这边文章我觉得还可以,加油', 53, '2017-08-20 12:39:34'),
(30, '张国福', 'if里面主要实现三个功能:1.增加等级,2.存入tree数组,3.进入下一级的递归', 112, '2017-08-28 11:13:42'),
(31, '国峰', '分析的非常好！学习了！', 117, '2017-08-29 15:04:22'),
(32, '国峰', '每天逛一遍大佬的网站，收获很多', 116, '2017-08-29 16:03:34'),
(33, '我很帅', '写的不错,点赞', 111, '2017-09-01 08:47:20'),
(34, '111', '11111', 126, '2017-11-28 06:46:14');

-- --------------------------------------------------------

--
-- 表的结构 `message`
--

CREATE TABLE IF NOT EXISTS `message` (
  `comment_id` int(11) NOT NULL AUTO_INCREMENT,
  `comment_name` char(30) NOT NULL,
  `comment_main` varchar(180) NOT NULL,
  `create_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`comment_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=25 ;

--
-- 转存表中的数据 `message`
--

INSERT INTO `message` (`comment_id`, `comment_name`, `comment_main`, `create_at`) VALUES
(23, 'gfd广泛的各方的各', '的是非得失刚发的', '2017-08-20 14:24:33'),
(24, 'php是世界上最好的语言', '厉害!', '2017-09-01 17:07:46');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
